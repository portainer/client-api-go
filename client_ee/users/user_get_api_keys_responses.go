// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/portainer/client-api-go/v2/models_ee"
)

// UserGetAPIKeysReader is a Reader for the UserGetAPIKeys structure.
type UserGetAPIKeysReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserGetAPIKeysReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUserGetAPIKeysOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUserGetAPIKeysBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUserGetAPIKeysForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUserGetAPIKeysNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUserGetAPIKeysInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUserGetAPIKeysOK creates a UserGetAPIKeysOK with default headers values
func NewUserGetAPIKeysOK() *UserGetAPIKeysOK {
	return &UserGetAPIKeysOK{}
}

/*
UserGetAPIKeysOK describes a response with status code 200, with default header values.

Success
*/
type UserGetAPIKeysOK struct {
	Payload []*models_ee.PortainereeAPIKey
}

// IsSuccess returns true when this user get Api keys o k response has a 2xx status code
func (o *UserGetAPIKeysOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this user get Api keys o k response has a 3xx status code
func (o *UserGetAPIKeysOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user get Api keys o k response has a 4xx status code
func (o *UserGetAPIKeysOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this user get Api keys o k response has a 5xx status code
func (o *UserGetAPIKeysOK) IsServerError() bool {
	return false
}

// IsCode returns true when this user get Api keys o k response a status code equal to that given
func (o *UserGetAPIKeysOK) IsCode(code int) bool {
	return code == 200
}

func (o *UserGetAPIKeysOK) Error() string {
	return fmt.Sprintf("[GET /users/{id}/tokens][%d] userGetApiKeysOK  %+v", 200, o.Payload)
}

func (o *UserGetAPIKeysOK) String() string {
	return fmt.Sprintf("[GET /users/{id}/tokens][%d] userGetApiKeysOK  %+v", 200, o.Payload)
}

func (o *UserGetAPIKeysOK) GetPayload() []*models_ee.PortainereeAPIKey {
	return o.Payload
}

func (o *UserGetAPIKeysOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserGetAPIKeysBadRequest creates a UserGetAPIKeysBadRequest with default headers values
func NewUserGetAPIKeysBadRequest() *UserGetAPIKeysBadRequest {
	return &UserGetAPIKeysBadRequest{}
}

/*
UserGetAPIKeysBadRequest describes a response with status code 400, with default header values.

Invalid request
*/
type UserGetAPIKeysBadRequest struct {
}

// IsSuccess returns true when this user get Api keys bad request response has a 2xx status code
func (o *UserGetAPIKeysBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user get Api keys bad request response has a 3xx status code
func (o *UserGetAPIKeysBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user get Api keys bad request response has a 4xx status code
func (o *UserGetAPIKeysBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this user get Api keys bad request response has a 5xx status code
func (o *UserGetAPIKeysBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this user get Api keys bad request response a status code equal to that given
func (o *UserGetAPIKeysBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *UserGetAPIKeysBadRequest) Error() string {
	return fmt.Sprintf("[GET /users/{id}/tokens][%d] userGetApiKeysBadRequest ", 400)
}

func (o *UserGetAPIKeysBadRequest) String() string {
	return fmt.Sprintf("[GET /users/{id}/tokens][%d] userGetApiKeysBadRequest ", 400)
}

func (o *UserGetAPIKeysBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUserGetAPIKeysForbidden creates a UserGetAPIKeysForbidden with default headers values
func NewUserGetAPIKeysForbidden() *UserGetAPIKeysForbidden {
	return &UserGetAPIKeysForbidden{}
}

/*
UserGetAPIKeysForbidden describes a response with status code 403, with default header values.

Permission denied
*/
type UserGetAPIKeysForbidden struct {
}

// IsSuccess returns true when this user get Api keys forbidden response has a 2xx status code
func (o *UserGetAPIKeysForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user get Api keys forbidden response has a 3xx status code
func (o *UserGetAPIKeysForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user get Api keys forbidden response has a 4xx status code
func (o *UserGetAPIKeysForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this user get Api keys forbidden response has a 5xx status code
func (o *UserGetAPIKeysForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this user get Api keys forbidden response a status code equal to that given
func (o *UserGetAPIKeysForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *UserGetAPIKeysForbidden) Error() string {
	return fmt.Sprintf("[GET /users/{id}/tokens][%d] userGetApiKeysForbidden ", 403)
}

func (o *UserGetAPIKeysForbidden) String() string {
	return fmt.Sprintf("[GET /users/{id}/tokens][%d] userGetApiKeysForbidden ", 403)
}

func (o *UserGetAPIKeysForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUserGetAPIKeysNotFound creates a UserGetAPIKeysNotFound with default headers values
func NewUserGetAPIKeysNotFound() *UserGetAPIKeysNotFound {
	return &UserGetAPIKeysNotFound{}
}

/*
UserGetAPIKeysNotFound describes a response with status code 404, with default header values.

User not found
*/
type UserGetAPIKeysNotFound struct {
}

// IsSuccess returns true when this user get Api keys not found response has a 2xx status code
func (o *UserGetAPIKeysNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user get Api keys not found response has a 3xx status code
func (o *UserGetAPIKeysNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user get Api keys not found response has a 4xx status code
func (o *UserGetAPIKeysNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this user get Api keys not found response has a 5xx status code
func (o *UserGetAPIKeysNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this user get Api keys not found response a status code equal to that given
func (o *UserGetAPIKeysNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *UserGetAPIKeysNotFound) Error() string {
	return fmt.Sprintf("[GET /users/{id}/tokens][%d] userGetApiKeysNotFound ", 404)
}

func (o *UserGetAPIKeysNotFound) String() string {
	return fmt.Sprintf("[GET /users/{id}/tokens][%d] userGetApiKeysNotFound ", 404)
}

func (o *UserGetAPIKeysNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUserGetAPIKeysInternalServerError creates a UserGetAPIKeysInternalServerError with default headers values
func NewUserGetAPIKeysInternalServerError() *UserGetAPIKeysInternalServerError {
	return &UserGetAPIKeysInternalServerError{}
}

/*
UserGetAPIKeysInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type UserGetAPIKeysInternalServerError struct {
}

// IsSuccess returns true when this user get Api keys internal server error response has a 2xx status code
func (o *UserGetAPIKeysInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user get Api keys internal server error response has a 3xx status code
func (o *UserGetAPIKeysInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user get Api keys internal server error response has a 4xx status code
func (o *UserGetAPIKeysInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this user get Api keys internal server error response has a 5xx status code
func (o *UserGetAPIKeysInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this user get Api keys internal server error response a status code equal to that given
func (o *UserGetAPIKeysInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *UserGetAPIKeysInternalServerError) Error() string {
	return fmt.Sprintf("[GET /users/{id}/tokens][%d] userGetApiKeysInternalServerError ", 500)
}

func (o *UserGetAPIKeysInternalServerError) String() string {
	return fmt.Sprintf("[GET /users/{id}/tokens][%d] userGetApiKeysInternalServerError ", 500)
}

func (o *UserGetAPIKeysInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
