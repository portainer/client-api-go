// Code generated by go-swagger; DO NOT EDIT.

package models_ee

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PortainereeGitCredential portaineree git credential
//
// swagger:model portaineree.GitCredential
type PortainereeGitCredential struct {

	// creation date
	// Example: 1587399600
	CreationDate int64 `json:"creationDate,omitempty"`

	// GitCredentialID used to identify the binded git credential
	// Example: 1
	ID int64 `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// password
	Password string `json:"password,omitempty"`

	// User Identifier
	// Example: 1
	UserID int64 `json:"userId,omitempty"`

	// username
	Username string `json:"username,omitempty"`
}

// Validate validates this portaineree git credential
func (m *PortainereeGitCredential) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this portaineree git credential based on context it is used
func (m *PortainereeGitCredential) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PortainereeGitCredential) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PortainereeGitCredential) UnmarshalBinary(b []byte) error {
	var res PortainereeGitCredential
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
