// Code generated by go-swagger; DO NOT EDIT.

package models_ee

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// LicensesLicenseInfo licenses license info
//
// swagger:model licenses.LicenseInfo
type LicensesLicenseInfo struct {

	// company
	Company string `json:"company,omitempty"`

	// enforced at
	EnforcedAt int64 `json:"enforcedAt,omitempty"`

	// expires at
	ExpiresAt int64 `json:"expiresAt,omitempty"`

	// nodes
	Nodes int64 `json:"nodes,omitempty"`

	// unix timestamp when node usage exceeded avaiable license limit
	OveruseStartedTimestamp int64 `json:"overuseStartedTimestamp,omitempty"`

	// type
	Type int64 `json:"type,omitempty"`

	// valid
	Valid *bool `json:"valid,omitempty"`
}

// Validate validates this licenses license info
func (m *LicensesLicenseInfo) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this licenses license info based on context it is used
func (m *LicensesLicenseInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *LicensesLicenseInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LicensesLicenseInfo) UnmarshalBinary(b []byte) error {
	var res LicensesLicenseInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
