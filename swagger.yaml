basePath: /api
definitions:
  auth.authenticatePayload:
    properties:
      password:
        description: Password
        example: mypassword
        type: string
      username:
        description: Username
        example: admin
        type: string
    required:
    - password
    - username
    type: object
  auth.authenticateResponse:
    properties:
      jwt:
        description: JWT token used to authenticate against the API
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJhZG1pbiIsInJvbGUiOjEsImV4cCI6MTQ5OTM3NjE1NH0.NJ6vE8FY1WG6jsRQzfMqeatJ4vh2TWAeeYfDhP71YEE
        type: string
    type: object
  auth.oauthPayload:
    properties:
      code:
        description: OAuth code returned from OAuth Provided
        type: string
    type: object
  backup.backupPayload:
    properties:
      password:
        type: string
    type: object
  backup.backupStatus:
    properties:
      failed:
        type: boolean
      timestampUTC:
        type: string
    type: object
  backup.restorePayload:
    properties:
      fileContent:
        description: Content of the backup
        items:
          type: integer
        type: array
      fileName:
        description: File name
        type: string
      password:
        description: Password to decrypt the backup with
        type: string
    required:
    - fileContent
    - fileName
    type: object
  backup.restoreS3Settings:
    properties:
      accessKeyID:
        description: AWS access key id
        type: string
      bucketName:
        description: AWS S3 bucket name
        type: string
      filename:
        description: AWS S3 filename in the bucket
        type: string
      password:
        type: string
      region:
        description: AWS S3 region
        type: string
      secretAccessKey:
        description: AWS secret access key
        type: string
    type: object
  backup.s3BackupPayload:
    properties:
      accessKeyID:
        description: AWS access key id
        type: string
      bucketName:
        description: AWS S3 bucket name
        type: string
      cronRule:
        description: Crontab rule to make periodical backups
        type: string
      password:
        description: Password to encrypt the backup with
        type: string
      region:
        description: AWS S3 region
        type: string
      secretAccessKey:
        description: AWS secret access key
        type: string
    type: object
  containers.containerGpusResponse:
    properties:
      gpus:
        type: string
    type: object
  customtemplates.customTemplateFromFileContentPayload:
    properties:
      description:
        description: Description of the template
        example: High performance web server
        type: string
      fileContent:
        description: Content of stack file
        type: string
      logo:
        description: URL of the template's logo
        example: https://cloudinovasi.id/assets/img/logos/nginx.png
        type: string
      note:
        description: A note that will be displayed in the UI. Supports HTML content
        example: This is my <b>custom</b> template
        type: string
      platform:
        description: |-
          Platform associated to the template.
          Valid values are: 1 - 'linux', 2 - 'windows'
          Required for Docker stacks
        enum:
        - 1
        - 2
        example: 1
        type: integer
      title:
        description: Title of the template
        example: Nginx
        type: string
      type:
        description: Type of created stack (1 - swarm, 2 - compose, 3 - kubernetes)
        enum:
        - 1
        - 2
        - 3
        example: 1
        type: integer
      variables:
        description: Definitions of variables in the stack file
        items:
          $ref: '#/definitions/portaineree.CustomTemplateVariableDefinition'
        type: array
    required:
    - description
    - fileContent
    - title
    - type
    type: object
  customtemplates.customTemplateFromGitRepositoryPayload:
    properties:
      composeFilePathInRepository:
        default: docker-compose.yml
        description: Path to the Stack file inside the Git repository
        example: docker-compose.yml
        type: string
      description:
        description: Description of the template
        example: High performance web server
        type: string
      logo:
        description: URL of the template's logo
        example: https://cloudinovasi.id/assets/img/logos/nginx.png
        type: string
      note:
        description: A note that will be displayed in the UI. Supports HTML content
        example: This is my <b>custom</b> template
        type: string
      platform:
        description: |-
          Platform associated to the template.
          Valid values are: 1 - 'linux', 2 - 'windows'
          Required for Docker stacks
        enum:
        - 1
        - 2
        example: 1
        type: integer
      repositoryAuthentication:
        description: Use basic authentication to clone the Git repository
        example: true
        type: boolean
      repositoryPassword:
        description: Password used in basic authentication. Required when RepositoryAuthentication
          is true.
        example: myGitPassword
        type: string
      repositoryReferenceName:
        description: Reference name of a Git repository hosting the Stack file
        example: refs/heads/master
        type: string
      repositoryURL:
        description: URL of a Git repository hosting the Stack file
        example: https://github.com/openfaas/faas
        type: string
      repositoryUsername:
        description: Username used in basic authentication. Required when RepositoryAuthentication
          is true.
        example: myGitUsername
        type: string
      title:
        description: Title of the template
        example: Nginx
        type: string
      type:
        description: Type of created stack (1 - swarm, 2 - compose)
        enum:
        - 1
        - 2
        example: 1
        type: integer
      variables:
        description: Definitions of variables in the stack file
        items:
          $ref: '#/definitions/portaineree.CustomTemplateVariableDefinition'
        type: array
    required:
    - description
    - repositoryURL
    - title
    - type
    type: object
  customtemplates.customTemplateUpdatePayload:
    properties:
      description:
        description: Description of the template
        example: High performance web server
        type: string
      fileContent:
        description: Content of stack file
        type: string
      logo:
        description: URL of the template's logo
        example: https://cloudinovasi.id/assets/img/logos/nginx.png
        type: string
      note:
        description: A note that will be displayed in the UI. Supports HTML content
        example: This is my <b>custom</b> template
        type: string
      platform:
        description: |-
          Platform associated to the template.
          Valid values are: 1 - 'linux', 2 - 'windows'
          Required for Docker stacks
        enum:
        - 1
        - 2
        example: 1
        type: integer
      title:
        description: Title of the template
        example: Nginx
        type: string
      type:
        description: Type of created stack (1 - swarm, 2 - compose, 3 - kubernetes)
        enum:
        - 1
        - 2
        - 3
        example: 1
        type: integer
      variables:
        description: Definitions of variables in the stack file
        items:
          $ref: '#/definitions/portaineree.CustomTemplateVariableDefinition'
        type: array
    required:
    - description
    - fileContent
    - title
    - type
    type: object
  customtemplates.fileResponse:
    properties:
      fileContent:
        type: string
    type: object
  demo.EnvironmentDetails:
    properties:
      enabled:
        type: boolean
      environments:
        items:
          description: Environment(Endpoint) identifier. Reference the environment(endpoint)
            that will be used for deployment
          type: integer
        type: array
      users:
        items:
          description: User Identifier
          example: 1
          type: integer
        type: array
    type: object
  edgegroups.decoratedEdgeGroup:
    properties:
      Dynamic:
        type: boolean
      Endpoints:
        items:
          description: Environment(Endpoint) identifier. Reference the environment(endpoint)
            that will be used for deployment
          type: integer
        type: array
      HasEdgeStack:
        type: boolean
      Id:
        description: EdgeGroup Identifier
        example: 1
        type: integer
      Name:
        type: string
      PartialMatch:
        type: boolean
      TagIds:
        items:
          description: Tag identifier
          example: 1
          type: integer
        type: array
      endpointTypes:
        items:
          description: Environment(Endpoint) environment(endpoint) type. 1 for a Docker
            environment(endpoint), 2 for an agent on Docker environment(endpoint)
            or 3 for an Azure environment(endpoint).
          example: 1
          type: integer
        type: array
    type: object
  edgegroups.edgeGroupCreatePayload:
    properties:
      dynamic:
        type: boolean
      endpoints:
        items:
          description: Environment(Endpoint) identifier. Reference the environment(endpoint)
            that will be used for deployment
          type: integer
        type: array
      name:
        type: string
      partialMatch:
        type: boolean
      tagIDs:
        items:
          description: Tag identifier
          example: 1
          type: integer
        type: array
    type: object
  edgegroups.edgeGroupUpdatePayload:
    properties:
      dynamic:
        type: boolean
      endpoints:
        items:
          description: Environment(Endpoint) identifier. Reference the environment(endpoint)
            that will be used for deployment
          type: integer
        type: array
      name:
        type: string
      partialMatch:
        type: boolean
      tagIDs:
        items:
          description: Tag identifier
          example: 1
          type: integer
        type: array
    type: object
  edgejobs.edgeJobCreateFromFileContentPayload:
    properties:
      cronExpression:
        type: string
      endpoints:
        items:
          description: Environment(Endpoint) identifier. Reference the environment(endpoint)
            that will be used for deployment
          type: integer
        type: array
      fileContent:
        type: string
      name:
        type: string
      recurring:
        type: boolean
    type: object
  edgejobs.edgeJobCreateFromFilePayload:
    properties:
      cronExpression:
        type: string
      endpoints:
        items:
          description: Environment(Endpoint) identifier. Reference the environment(endpoint)
            that will be used for deployment
          type: integer
        type: array
      file:
        items:
          type: integer
        type: array
      name:
        type: string
      recurring:
        type: boolean
    type: object
  edgejobs.edgeJobFileResponse:
    properties:
      FileContent:
        type: string
    type: object
  edgejobs.edgeJobUpdatePayload:
    properties:
      cronExpression:
        type: string
      endpoints:
        items:
          description: Environment(Endpoint) identifier. Reference the environment(endpoint)
            that will be used for deployment
          type: integer
        type: array
      fileContent:
        type: string
      name:
        type: string
      recurring:
        type: boolean
    type: object
  edgejobs.fileResponse:
    properties:
      FileContent:
        type: string
    type: object
  edgejobs.taskContainer:
    properties:
      EndpointId:
        type: integer
      Id:
        type: string
      LogsStatus:
        type: integer
    type: object
  edgestacks.stackFileResponse:
    properties:
      StackFileContent:
        type: string
    type: object
  edgestacks.swarmStackFromFileContentPayload:
    properties:
      deploymentType:
        description: |-
          Deployment type to deploy this stack
          Valid values are: 0 - 'compose', 1 - 'kubernetes', 2 - 'nomad'
          for compose stacks will use kompose to convert to kubernetes manifest for kubernetes environments(endpoints)
          kubernetes deploytype is enabled only for kubernetes environments(endpoints)
          nomad deploytype is enabled only for nomad environments(endpoints)
        enum:
        - 0
        - 1
        - 2
        example: 0
        type: integer
      edgeGroups:
        description: List of identifiers of EdgeGroups
        example:
        - 1
        items:
          description: EdgeGroup Identifier
          example: 1
          type: integer
        type: array
      name:
        description: Name of the stack
        example: myStack
        type: string
      registries:
        description: List of Registries to use for this stack
        items:
          description: Registry Identifier
          type: integer
        type: array
      stackFileContent:
        description: Content of the Stack file
        example: |-
          version: 3
           services:
           web:
           image:nginx
        type: string
    required:
    - name
    - stackFileContent
    type: object
  edgestacks.swarmStackFromFileUploadPayload:
    properties:
      deploymentType:
        description: |-
          Deployment type to deploy this stack
          Valid values are: 0 - 'compose', 1 - 'kubernetes', 2 - 'nomad'
          for compose stacks will use kompose to convert to kubernetes manifest for kubernetes environments(endpoints)
          kubernetes deploytype is enabled only for kubernetes environments(endpoints)
          nomad deploytype is enabled only for nomad environments(endpoints)
        enum:
        - 0
        - 1
        - 2
        example: 0
        type: integer
      edgeGroups:
        items:
          description: EdgeGroup Identifier
          example: 1
          type: integer
        type: array
      name:
        type: string
      registries:
        items:
          description: Registry Identifier
          type: integer
        type: array
      stackFileContent:
        items:
          type: integer
        type: array
    type: object
  edgestacks.swarmStackFromGitRepositoryPayload:
    properties:
      deploymentType:
        description: |-
          Deployment type to deploy this stack
          Valid values are: 0 - 'compose', 1 - 'kubernetes', 2 - 'nomad'
          for compose stacks will use kompose to convert to kubernetes manifest for kubernetes environments(endpoints)
          kubernetes deploytype is enabled only for kubernetes environments(endpoints)
          nomad deploytype is enabled only for nomad environments(endpoints)
        enum:
        - 0
        - 1
        - 2
        example: 0
        type: integer
      edgeGroups:
        description: List of identifiers of EdgeGroups
        example:
        - 1
        items:
          description: EdgeGroup Identifier
          example: 1
          type: integer
        type: array
      filePathInRepository:
        default: docker-compose.yml
        description: Path to the Stack file inside the Git repository
        example: docker-compose.yml
        type: string
      name:
        description: Name of the stack
        example: myStack
        type: string
      registries:
        description: List of Registries to use for this stack
        items:
          description: Registry Identifier
          type: integer
        type: array
      repositoryAuthentication:
        description: Use basic authentication to clone the Git repository
        example: true
        type: boolean
      repositoryPassword:
        description: Password used in basic authentication. Required when RepositoryAuthentication
          is true.
        example: myGitPassword
        type: string
      repositoryReferenceName:
        description: Reference name of a Git repository hosting the Stack file
        example: refs/heads/master
        type: string
      repositoryURL:
        description: URL of a Git repository hosting the Stack file
        example: https://github.com/openfaas/faas
        type: string
      repositoryUsername:
        description: Username used in basic authentication. Required when RepositoryAuthentication
          is true.
        example: myGitUsername
        type: string
    required:
    - name
    - repositoryURL
    type: object
  edgestacks.updateEdgeStackPayload:
    properties:
      deploymentType:
        description: |-
          Deployment type to deploy this stack
          Valid values are: 0 - 'compose', 1 - 'kubernetes', 2 - 'nomad'
          for compose stacks will use kompose to convert to kubernetes manifest for kubernetes environments(endpoints)
          kubernetes deploytype is enabled only for kubernetes environments(endpoints)
          nomad deploytype is enabled only for nomad environments(endpoints)
        type: integer
      edgeGroups:
        items:
          description: EdgeGroup Identifier
          example: 1
          type: integer
        type: array
      registries:
        items:
          description: Registry Identifier
          type: integer
        type: array
      stackFileContent:
        type: string
      version:
        type: integer
    type: object
  endpointedge.Credentials:
    properties:
      secret:
        type: string
      serverURL:
        type: string
      username:
        type: string
    type: object
  endpointedge.EdgeAsyncResponse:
    properties:
      commandInterval:
        type: integer
      commands:
        items:
          $ref: '#/definitions/portaineree.EdgeAsyncCommand'
        type: array
      endpointID:
        type: integer
      pingInterval:
        type: integer
      snapshotInterval:
        type: integer
    type: object
  endpointedge.configResponse:
    properties:
      name:
        type: string
      registryCredentials:
        items:
          $ref: '#/definitions/endpointedge.Credentials'
        type: array
      stackFileContent:
        type: string
    type: object
  endpointedge.edgeJobResponse:
    properties:
      CollectLogs:
        description: Whether to collect logs
        example: true
        type: boolean
      CronExpression:
        description: A cron expression to schedule this job
        example: '* * * * *'
        type: string
      Id:
        description: EdgeJob Identifier
        example: 2
        type: integer
      Script:
        description: Script to run
        example: echo hello
        type: string
      Version:
        description: Version of this EdgeJob
        example: 2
        type: integer
    type: object
  endpointedge.endpointEdgeStatusInspectResponse:
    properties:
      checkin:
        description: The current value of CheckinInterval
        example: 5
        type: integer
      credentials:
        type: string
      port:
        description: The tunnel port
        example: 8732
        type: integer
      schedules:
        description: List of requests for jobs to run on the environment(endpoint)
        items:
          $ref: '#/definitions/endpointedge.edgeJobResponse'
        type: array
      stacks:
        description: List of stacks to be deployed on the environments(endpoints)
        items:
          $ref: '#/definitions/endpointedge.stackStatusResponse'
        type: array
      status:
        description: Status represents the environment(endpoint) status
        example: REQUIRED
        type: string
    type: object
  endpointedge.generateKeyResponse:
    properties:
      edgeKey:
        type: string
    type: object
  endpointedge.stackStatusResponse:
    properties:
      id:
        description: EdgeStack Identifier
        example: 1
        type: integer
      version:
        description: Version of this stack
        example: 3
        type: integer
    type: object
  endpointgroups.endpointGroupCreatePayload:
    properties:
      associatedEndpoints:
        description: List of environment(endpoint) identifiers that will be part of
          this group
        example:
        - 1
        - 3
        items:
          description: Environment(Endpoint) identifier. Reference the environment(endpoint)
            that will be used for deployment
          type: integer
        type: array
      description:
        description: Environment(Endpoint) group description
        example: description
        type: string
      name:
        description: Environment(Endpoint) group name
        example: my-Environment-group
        type: string
      tagIDs:
        description: List of tag identifiers to which this environment(endpoint) group
          is associated
        example:
        - 1
        - 2
        items:
          description: Tag identifier
          example: 1
          type: integer
        type: array
    required:
    - name
    type: object
  endpointgroups.endpointGroupUpdatePayload:
    properties:
      description:
        description: Environment(Endpoint) group description
        example: description
        type: string
      name:
        description: Environment(Endpoint) group name
        example: my-environment-group
        type: string
      tagIDs:
        description: List of tag identifiers associated to the environment(endpoint)
          group
        example:
        - 3
        - 4
        items:
          description: Tag identifier
          example: 1
          type: integer
        type: array
      teamAccessPolicies:
        $ref: '#/definitions/portaineree.TeamAccessPolicies'
      userAccessPolicies:
        $ref: '#/definitions/portaineree.UserAccessPolicies'
    type: object
  endpoints.dockerhubStatusResponse:
    properties:
      limit:
        description: Daily limit
        type: integer
      remaining:
        description: Remaiming images to pull
        type: integer
    type: object
  endpoints.endpointCreateGlobalKeyResponse:
    properties:
      endpointID:
        description: Environment(Endpoint) Identifier
        type: integer
    type: object
  endpoints.endpointSettingsUpdatePayload:
    properties:
      changeWindow:
        $ref: '#/definitions/portaineree.EndpointChangeWindow'
        description: Whether automatic update time restrictions are enabled
      securitySettings:
        description: Security settings updates
        properties:
          allowBindMountsForRegularUsers:
            description: Whether non-administrator should be able to use bind mounts
              when creating containers
            example: false
            type: boolean
          allowContainerCapabilitiesForRegularUsers:
            description: Whether non-administrator should be able to use container
              capabilities
            example: true
            type: boolean
          allowDeviceMappingForRegularUsers:
            description: Whether non-administrator should be able to use device mapping
            example: true
            type: boolean
          allowHostNamespaceForRegularUsers:
            description: Whether non-administrator should be able to use the host
              pid
            example: true
            type: boolean
          allowPrivilegedModeForRegularUsers:
            description: Whether non-administrator should be able to use privileged
              mode when creating containers
            example: false
            type: boolean
          allowStackManagementForRegularUsers:
            description: Whether non-administrator should be able to manage stacks
            example: true
            type: boolean
          allowSysctlSettingForRegularUsers:
            description: Whether non-administrator should be able to use sysctl settings
            example: true
            type: boolean
          allowVolumeBrowserForRegularUsers:
            description: Whether non-administrator should be able to browse volumes
            example: true
            type: boolean
          enableHostManagementFeatures:
            description: Whether host management features are enabled
            example: true
            type: boolean
        type: object
    type: object
  endpoints.endpointUpdatePayload:
    properties:
      azureApplicationID:
        description: Azure application ID
        example: eag7cdo9-o09l-9i83-9dO9-f0b23oe78db4
        type: string
      azureAuthenticationKey:
        description: Azure authentication key
        example: cOrXoK/1D35w8YQ8nH1/8ZGwzz45JIYD5jxHKXEQknk=
        type: string
      azureTenantID:
        description: Azure tenant ID
        example: 34ddc78d-4fel-2358-8cc1-df84c8o839f5
        type: string
      changeWindow:
        $ref: '#/definitions/portaineree.EndpointChangeWindow'
        description: Whether automatic update time restrictions are enabled
      edge:
        properties:
          CommandInterval:
            description: The command list interval for edge agent - used in edge async
              mode (in seconds)
            example: 5
            type: integer
          PingInterval:
            description: The ping interval for edge agent - used in edge async mode
              (in seconds)
            example: 5
            type: integer
          SnapshotInterval:
            description: The snapshot interval for edge agent - used in edge async
              mode (in seconds)
            example: 5
            type: integer
        type: object
      edgeCheckinInterval:
        description: The check in interval for edge agent (in seconds)
        example: 5
        type: integer
      gpus:
        description: GPUs information
        items:
          $ref: '#/definitions/portaineree.Pair'
        type: array
      groupID:
        description: Group identifier
        example: 1
        type: integer
      kubernetes:
        $ref: '#/definitions/portaineree.KubernetesData'
        description: Associated Kubernetes data
      name:
        description: Name that will be used to identify this environment(endpoint)
        example: my-environment
        type: string
      publicURL:
        description: |-
          URL or IP address where exposed containers will be reachable.\
          Defaults to URL if not specified
        example: docker.mydomain.tld:2375
        type: string
      status:
        description: The status of the environment(endpoint) (1 - up, 2 - down)
        example: 1
        type: integer
      tagIDs:
        description: List of tag identifiers to which this environment(endpoint) is
          associated
        example:
        - 1
        - 2
        items:
          description: Tag identifier
          example: 1
          type: integer
        type: array
      teamAccessPolicies:
        $ref: '#/definitions/portaineree.TeamAccessPolicies'
      tls:
        description: Require TLS to connect against this environment(endpoint)
        example: true
        type: boolean
      tlsskipClientVerify:
        description: Skip client verification when using TLS
        example: false
        type: boolean
      tlsskipVerify:
        description: Skip server verification when using TLS
        example: false
        type: boolean
      url:
        description: URL or IP address of a Docker host
        example: docker.mydomain.tld:2375
        type: string
      userAccessPolicies:
        $ref: '#/definitions/portaineree.UserAccessPolicies'
    type: object
  endpoints.forceUpdateServicePayload:
    properties:
      pullImage:
        description: PullImage if true will pull the image
        type: boolean
      serviceID:
        description: ServiceId to update
        type: string
    type: object
  endpoints.registryAccessPayload:
    properties:
      namespaces:
        items:
          type: string
        type: array
      teamAccessPolicies:
        $ref: '#/definitions/portaineree.TeamAccessPolicies'
      userAccessPolicies:
        $ref: '#/definitions/portaineree.UserAccessPolicies'
    type: object
  endpoints.resourcePoolUpdatePayload:
    properties:
      teamsToAdd:
        items:
          type: integer
        type: array
      teamsToRemove:
        items:
          type: integer
        type: array
      usersToAdd:
        items:
          type: integer
        type: array
      usersToRemove:
        items:
          type: integer
        type: array
    type: object
  fdo.deviceConfigurePayload:
    properties:
      edgeID:
        type: string
      edgeKey:
        type: string
      name:
        type: string
      profile:
        type: integer
    type: object
  fdo.fdoConfigurePayload:
    properties:
      enabled:
        type: boolean
      ownerPassword:
        type: string
      ownerURL:
        type: string
      ownerUsername:
        type: string
    type: object
  gittypes.GitAuthentication:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  gittypes.RepoConfig:
    properties:
      authentication:
        $ref: '#/definitions/gittypes.GitAuthentication'
        description: Git credentials
      configFilePath:
        description: Path to where the config file is in this url/refName
        example: docker-compose.yml
        type: string
      configHash:
        description: Repository hash
        example: bc4c183d756879ea4d173315338110b31004b8e0
        type: string
      referenceName:
        description: The reference name
        example: refs/heads/branch_name
        type: string
      url:
        description: The repo url
        example: https://github.com/portainer/portainer.git
        type: string
    type: object
  helm.addHelmRepoUrlPayload:
    properties:
      url:
        type: string
    type: object
  helm.helmUserRepositoryResponse:
    properties:
      GlobalRepository:
        type: string
      UserRepositories:
        items:
          $ref: '#/definitions/portaineree.HelmUserRepository'
        type: array
    type: object
  helm.installChartPayload:
    properties:
      chart:
        type: string
      name:
        type: string
      namespace:
        type: string
      repo:
        type: string
      values:
        type: string
    type: object
  kubernetes.namespacesToggleSystemPayload:
    properties:
      system:
        description: Toggle the system state of this namespace to true or false
        example: true
        type: boolean
    type: object
  ldap.adminGroupsPayload:
    properties:
      ldapsettings:
        $ref: '#/definitions/portaineree.LDAPSettings'
    type: object
  ldap.checkPayload:
    properties:
      ldapsettings:
        $ref: '#/definitions/portaineree.LDAPSettings'
    type: object
  ldap.groupsPayload:
    properties:
      ldapsettings:
        $ref: '#/definitions/portaineree.LDAPSettings'
    type: object
  ldap.testLoginPayload:
    properties:
      ldapsettings:
        $ref: '#/definitions/portaineree.LDAPSettings'
      password:
        type: string
      username:
        type: string
    type: object
  ldap.testLoginResponse:
    properties:
      valid:
        type: boolean
    type: object
  ldap.usersPayload:
    properties:
      ldapsettings:
        $ref: '#/definitions/portaineree.LDAPSettings'
    type: object
  liblicense.PortainerLicense:
    properties:
      company:
        type: string
      created:
        type: integer
      email:
        type: string
      expiresAfter:
        type: integer
      expiresAt:
        type: integer
      firstCheckin:
        type: integer
      id:
        type: string
      lastCheckin:
        type: integer
      licenseKey:
        type: string
      nodes:
        type: integer
      productEdition:
        type: integer
      reference:
        type: string
      revoked:
        type: boolean
      revokedAt:
        type: integer
      type:
        type: integer
      version:
        type: integer
    type: object
  licenses.LicenseInfo:
    properties:
      company:
        type: string
      enforcedAt:
        type: integer
      expiresAt:
        type: integer
      nodes:
        type: integer
      overuseStartedTimestamp:
        description: unix timestamp when node usage exceeded avaiable license limit
        type: integer
      type:
        type: integer
      valid:
        type: boolean
    type: object
  licenses.attachPayload:
    properties:
      licenseKeys:
        description: List of license keys to attach
        items:
          type: string
        type: array
    type: object
  licenses.attachResponse:
    properties:
      failedKeys:
        additionalProperties:
          type: string
        type: object
      licenses:
        items:
          $ref: '#/definitions/liblicense.PortainerLicense'
        type: array
    type: object
  licenses.deletePayload:
    properties:
      licenseKeys:
        description: List of license keys to remove
        items:
          type: string
        type: array
    type: object
  licenses.deleteResponse:
    properties:
      failedKeys:
        additionalProperties:
          type: string
        type: object
    type: object
  models.CloudCredential:
    properties:
      created:
        example: 1650000000
        type: integer
      credentials:
        $ref: '#/definitions/models.CloudCredentialMap'
      id:
        example: 1
        type: integer
      name:
        example: test-env
        type: string
      provider:
        example: aws
        type: string
    type: object
  models.CloudCredentialMap:
    additionalProperties:
      type: string
    type: object
  motd.motdResponse:
    properties:
      ContentLayout:
        additionalProperties:
          type: string
        type: object
      Hash:
        items:
          type: integer
        type: array
      Message:
        type: string
      Style:
        type: string
      Title:
        type: string
    type: object
  network.EndpointIPAMConfig:
    properties:
      ipv4Address:
        type: string
      ipv6Address:
        type: string
      linkLocalIPs:
        items:
          type: string
        type: array
    type: object
  network.EndpointSettings:
    properties:
      aliases:
        items:
          type: string
        type: array
      driverOpts:
        additionalProperties:
          type: string
        type: object
      endpointID:
        type: string
      gateway:
        type: string
      globalIPv6Address:
        type: string
      globalIPv6PrefixLen:
        type: integer
      ipaddress:
        type: string
      ipamconfig:
        $ref: '#/definitions/network.EndpointIPAMConfig'
        description: Configurations
      ipprefixLen:
        type: integer
      ipv6Gateway:
        type: string
      links:
        items:
          type: string
        type: array
      macAddress:
        type: string
      networkID:
        description: Operational data
        type: string
    type: object
  nomad.slimNomadTaskEvent:
    properties:
      date:
        type: integer
      message:
        type: string
      type:
        type: string
    type: object
  openamt.deviceActionPayload:
    properties:
      action:
        type: string
    type: object
  openamt.deviceFeaturesPayload:
    properties:
      features:
        $ref: '#/definitions/portainer.OpenAMTDeviceEnabledFeatures'
    type: object
  openamt.openAMTConfigurePayload:
    properties:
      certFileContent:
        type: string
      certFileName:
        type: string
      certFilePassword:
        type: string
      domainName:
        type: string
      enabled:
        type: boolean
      mpspassword:
        type: string
      mpsserver:
        type: string
      mpsuser:
        type: string
    type: object
  podsecurity.PodSecurityAllowFlexVolumes:
    properties:
      allowedVolumes:
        items:
          type: string
        type: array
      enabled:
        type: boolean
    type: object
  podsecurity.PodSecurityAllowPrivilegeEscalation:
    properties:
      enabled:
        type: boolean
    type: object
  podsecurity.PodSecurityAllowProcMount:
    properties:
      enabled:
        type: boolean
      procMountType:
        type: string
    type: object
  podsecurity.PodSecurityAllowedCapabilities:
    properties:
      level:
        type: string
      role:
        type: string
      type:
        type: string
      user:
        type: string
    type: object
  podsecurity.PodSecurityAllowedPaths:
    properties:
      pathPrefix:
        type: string
      readonly:
        type: boolean
    type: object
  podsecurity.PodSecurityAppArmour:
    properties:
      AppArmorType:
        items:
          type: string
        type: array
      enabled:
        type: boolean
    type: object
  podsecurity.PodSecurityCapabilities:
    properties:
      allowedCapabilities:
        items:
          type: string
        type: array
      enabled:
        type: boolean
      requiredDropCapabilities:
        items:
          type: string
        type: array
    type: object
  podsecurity.PodSecurityForbiddenSysctlsList:
    properties:
      enabled:
        type: boolean
      requiredDropCapabilities:
        items:
          type: string
        type: array
    type: object
  podsecurity.PodSecurityFsGroups:
    properties:
      idrange:
        items:
          $ref: '#/definitions/podsecurity.PodSecurityIdrange'
        type: array
      type:
        type: string
    type: object
  podsecurity.PodSecurityHostFilesystem:
    properties:
      allowedPaths:
        items:
          $ref: '#/definitions/podsecurity.PodSecurityAllowedPaths'
        type: array
      enabled:
        type: boolean
    type: object
  podsecurity.PodSecurityHostNamespaces:
    properties:
      enabled:
        type: boolean
    type: object
  podsecurity.PodSecurityHostNetworkingPorts:
    properties:
      enabled:
        type: boolean
      hostNetwork:
        type: boolean
      max:
        type: integer
      min:
        type: integer
    type: object
  podsecurity.PodSecurityIdrange:
    properties:
      max:
        type: integer
      min:
        type: integer
    type: object
  podsecurity.PodSecurityPrivilegedContainers:
    properties:
      enabled:
        type: boolean
    type: object
  podsecurity.PodSecurityReadOnlyRootFileSystem:
    properties:
      enabled:
        type: boolean
    type: object
  podsecurity.PodSecurityRule:
    properties:
      allowFlexVolumes:
        $ref: '#/definitions/podsecurity.PodSecurityAllowFlexVolumes'
      allowPrivilegeEscalation:
        $ref: '#/definitions/podsecurity.PodSecurityAllowPrivilegeEscalation'
      allowProcMount:
        $ref: '#/definitions/podsecurity.PodSecurityAllowProcMount'
      appArmor:
        $ref: '#/definitions/podsecurity.PodSecurityAppArmour'
      capabilities:
        $ref: '#/definitions/podsecurity.PodSecurityCapabilities'
      enabled:
        type: boolean
      endPointID:
        type: integer
      forbiddenSysctlsList:
        $ref: '#/definitions/podsecurity.PodSecurityForbiddenSysctlsList'
      hostFilesystem:
        $ref: '#/definitions/podsecurity.PodSecurityHostFilesystem'
      hostNamespaces:
        $ref: '#/definitions/podsecurity.PodSecurityHostNamespaces'
      hostPorts:
        $ref: '#/definitions/podsecurity.PodSecurityHostNetworkingPorts'
      id:
        type: integer
      privilegedContainers:
        $ref: '#/definitions/podsecurity.PodSecurityPrivilegedContainers'
      readOnlyRootFileSystem:
        $ref: '#/definitions/podsecurity.PodSecurityReadOnlyRootFileSystem'
      secComp:
        $ref: '#/definitions/podsecurity.PodSecuritySecComp'
      selinux:
        $ref: '#/definitions/podsecurity.PodSecuritySelinux'
      users:
        $ref: '#/definitions/podsecurity.PodSecurityUsers'
      volumeTypes:
        $ref: '#/definitions/podsecurity.PodSecurityVolumeTypes'
    type: object
  podsecurity.PodSecurityRunAsGroup:
    properties:
      idrange:
        items:
          $ref: '#/definitions/podsecurity.PodSecurityIdrange'
        type: array
      type:
        type: string
    type: object
  podsecurity.PodSecurityRunAsUser:
    properties:
      idrange:
        items:
          $ref: '#/definitions/podsecurity.PodSecurityIdrange'
        type: array
      type:
        type: string
    type: object
  podsecurity.PodSecuritySecComp:
    properties:
      enabled:
        type: boolean
      secCompType:
        items:
          type: string
        type: array
    type: object
  podsecurity.PodSecuritySelinux:
    properties:
      allowedCapabilities:
        items:
          $ref: '#/definitions/podsecurity.PodSecurityAllowedCapabilities'
        type: array
      enabled:
        type: boolean
    type: object
  podsecurity.PodSecuritySupplementalGroups:
    properties:
      idrange:
        items:
          $ref: '#/definitions/podsecurity.PodSecurityIdrange'
        type: array
      type:
        type: string
    type: object
  podsecurity.PodSecurityUsers:
    properties:
      enabled:
        type: boolean
      fsGroups:
        $ref: '#/definitions/podsecurity.PodSecurityFsGroups'
      runAsGroup:
        $ref: '#/definitions/podsecurity.PodSecurityRunAsGroup'
      runAsUser:
        $ref: '#/definitions/podsecurity.PodSecurityRunAsUser'
      supplementalGroups:
        $ref: '#/definitions/podsecurity.PodSecuritySupplementalGroups'
    type: object
  podsecurity.PodSecurityVolumeTypes:
    properties:
      allowedTypes:
        items:
          type: string
        type: array
      enabled:
        type: boolean
    type: object
  portainer.DockerSnapshot:
    properties:
      DockerSnapshotRaw:
        $ref: '#/definitions/portainer.DockerSnapshotRaw'
      DockerVersion:
        type: string
      GpuUseAll:
        type: boolean
      GpuUseList:
        items:
          type: string
        type: array
      HealthyContainerCount:
        type: integer
      ImageCount:
        type: integer
      NodeCount:
        type: integer
      RunningContainerCount:
        type: integer
      ServiceCount:
        type: integer
      StackCount:
        type: integer
      StoppedContainerCount:
        type: integer
      Swarm:
        type: boolean
      Time:
        type: integer
      TotalCPU:
        type: integer
      TotalMemory:
        type: integer
      UnhealthyContainerCount:
        type: integer
      VolumeCount:
        type: integer
    type: object
  portainer.DockerSnapshotRaw:
    type: object
  portainer.OpenAMTConfiguration:
    properties:
      certFileContent:
        type: string
      certFileName:
        type: string
      certFilePassword:
        type: string
      domainName:
        type: string
      enabled:
        type: boolean
      mpsPassword:
        type: string
      mpsServer:
        type: string
      mpsToken:
        description: retrieved from API
        type: string
      mpsUser:
        type: string
    type: object
  portainer.OpenAMTDeviceEnabledFeatures:
    properties:
      IDER:
        type: boolean
      KVM:
        type: boolean
      SOL:
        type: boolean
      redirection:
        type: boolean
      userConsent:
        type: string
    type: object
  portaineree.APIKey:
    properties:
      dateCreated:
        description: Unix timestamp (UTC) when the API key was created
        type: integer
      description:
        example: portainer-api-key
        type: string
      digest:
        description: Digest represents SHA256 hash of the raw API key
        items:
          type: integer
        type: array
      id:
        example: 1
        type: integer
      lastUsed:
        description: Unix timestamp (UTC) when the API key was last used
        type: integer
      prefix:
        description: API key identifier (7 char prefix)
        type: string
      userId:
        description: User Identifier
        example: 1
        type: integer
    type: object
  portaineree.AccessPolicy:
    properties:
      RoleId:
        description: Role identifier. Reference the role that will be associated to
          this access policy
        example: 1
        type: integer
    type: object
  portaineree.AuthActivityLog:
    properties:
      context:
        description: 'Active authentication method for the Portainer instance. Valid
          values are: 1 for internal, 2 for LDAP, or 3 for oauth'
        type: integer
      id:
        type: integer
      origin:
        type: string
      timestamp:
        type: integer
      type:
        type: integer
      username:
        type: string
    type: object
  portaineree.Authorizations:
    additionalProperties:
      type: boolean
    type: object
  portaineree.AzureCredentials:
    properties:
      ApplicationID:
        description: Azure application ID
        example: eag7cdo9-o09l-9i83-9dO9-f0b23oe78db4
        type: string
      AuthenticationKey:
        description: Azure authentication key
        example: cOrXoK/1D35w8YQ8nH1/8ZGwzz45JIYD5jxHKXEQknk=
        type: string
      TenantID:
        description: Azure tenant ID
        example: 34ddc78d-4fel-2358-8cc1-df84c8o839f5
        type: string
    type: object
  portaineree.CloudApiKeys:
    properties:
      CivoApiKey:
        example: DgJ33kwIhnHumQFyc8ihGwWJql9cC8UJDiBhN8YImKqiX
        type: string
      DigitalOceanToken:
        example: dop_v1_n9rq7dkcbg3zb3bewtk9nnvmfkyfnr94d42n28lym22vhqu23rtkllsldygqm22v
        type: string
      GKEApiKey:
        example: an entire base64ed key file
        type: string
      LinodeToken:
        example: 92gsh9r9u5helgs4eibcuvlo403vm45hrmc6mzbslotnrqmkwc1ovqgmolcyq0wc
        type: string
    type: object
  portaineree.CloudProvider:
    properties:
      AmiType:
        description: Amazon specific fields
        type: string
      CPU:
        type: integer
      CredentialID:
        description: CredentialID holds an ID of the credential used to create the
          cluster
        type: integer
      HDD:
        type: integer
      InstanceType:
        type: string
      Name:
        type: string
      NetworkID:
        description: |-
          Pointer will hide this field for providers other than civo which do
          not use this field.
        type: string
      NodeCount:
        type: integer
      NodeVolumeSize:
        type: integer
      RAM:
        type: number
      Region:
        type: string
      Size:
        type: string
      URL:
        type: string
      dnsprefix:
        type: string
      kubernetesVersion:
        type: string
      poolName:
        type: string
      resourceGroup:
        description: Azure specific fields
        type: string
      tier:
        type: string
    type: object
  portaineree.CustomTemplate:
    properties:
      CreatedByUserId:
        description: User identifier who created this template
        example: 3
        type: integer
      Description:
        description: Description of the template
        example: High performance web server
        type: string
      EntryPoint:
        description: Path to the Stack file
        example: docker-compose.yml
        type: string
      Id:
        description: CustomTemplate Identifier
        example: 1
        type: integer
      Logo:
        description: URL of the template's logo
        example: https://cloudinovasi.id/assets/img/logos/nginx.png
        type: string
      Note:
        description: A note that will be displayed in the UI. Supports HTML content
        example: This is my <b>custom</b> template
        type: string
      Platform:
        description: |-
          Platform associated to the template.
          Valid values are: 1 - 'linux', 2 - 'windows'
        enum:
        - 1
        - 2
        example: 1
        type: integer
      ProjectPath:
        description: Path on disk to the repository hosting the Stack file
        example: /data/custom_template/3
        type: string
      ResourceControl:
        $ref: '#/definitions/portaineree.ResourceControl'
      Title:
        description: Title of the template
        example: Nginx
        type: string
      Type:
        description: Type of created stack (1 - swarm, 2 - compose)
        example: 1
        type: integer
      variables:
        items:
          $ref: '#/definitions/portaineree.CustomTemplateVariableDefinition'
        type: array
    type: object
  portaineree.CustomTemplateVariableDefinition:
    properties:
      defaultValue:
        example: default value
        type: string
      description:
        example: Description
        type: string
      label:
        example: My Variable
        type: string
      name:
        example: MY_VAR
        type: string
    type: object
  portaineree.EcrData:
    properties:
      Region:
        example: ap-southeast-2
        type: string
    type: object
  portaineree.EdgeAsyncCommand:
    properties:
      endpointID:
        type: integer
      executed:
        type: boolean
      id:
        type: integer
      op:
        type: string
      path:
        type: string
      timestamp:
        type: string
      type:
        type: string
      value: {}
    type: object
  portaineree.EdgeGroup:
    properties:
      Dynamic:
        type: boolean
      Endpoints:
        items:
          description: Environment(Endpoint) identifier. Reference the environment(endpoint)
            that will be used for deployment
          type: integer
        type: array
      Id:
        description: EdgeGroup Identifier
        example: 1
        type: integer
      Name:
        type: string
      PartialMatch:
        type: boolean
      TagIds:
        items:
          description: Tag identifier
          example: 1
          type: integer
        type: array
    type: object
  portaineree.EdgeJob:
    properties:
      Created:
        type: integer
      CronExpression:
        type: string
      Endpoints:
        additionalProperties:
          $ref: '#/definitions/portaineree.EdgeJobEndpointMeta'
        type: object
      Id:
        description: EdgeJob Identifier
        example: 1
        type: integer
      Name:
        type: string
      Recurring:
        type: boolean
      ScriptPath:
        type: string
      Version:
        type: integer
    type: object
  portaineree.EdgeJobEndpointMeta:
    properties:
      collectLogs:
        type: boolean
      logsStatus:
        type: integer
    type: object
  portaineree.EdgeStack:
    properties:
      CreationDate:
        type: integer
      DeploymentType:
        description: |-
          Deployment type to deploy this stack
          Valid values are: 0 - 'compose', 1 - 'kubernetes', 2 - 'nomad'
          for compose stacks will use kompose to convert to kubernetes manifest for kubernetes environments(endpoints)
          kubernetes deploytype is enabled only for kubernetes environments(endpoints)
          nomad deploytype is enabled only for nomad environments(endpoints)
        type: integer
      EdgeGroups:
        items:
          description: EdgeGroup Identifier
          example: 1
          type: integer
        type: array
      EntryPoint:
        type: string
      Id:
        description: EdgeStack Identifier
        example: 1
        type: integer
      ManifestPath:
        type: string
      Name:
        type: string
      ProjectPath:
        type: string
      Prune:
        description: Deprecated
        type: boolean
      Registries:
        items:
          description: Registry Identifier
          type: integer
        type: array
      Status:
        additionalProperties:
          $ref: '#/definitions/portaineree.EdgeStackStatus'
        type: object
      Version:
        type: integer
    type: object
  portaineree.EdgeStackStatus:
    properties:
      EndpointID:
        type: integer
      Error:
        type: string
      Type:
        type: integer
    type: object
  portaineree.Endpoint:
    properties:
      AMTDeviceGUID:
        description: The identifier of the AMT Device associated with this environment(endpoint)
        example: 4c4c4544-004b-3910-8037-b6c04f504633
        type: string
      AuthorizedTeams:
        items:
          description: Team Identifier
          example: 1
          type: integer
        type: array
      AuthorizedUsers:
        description: Deprecated in DBVersion == 18
        items:
          description: User Identifier
          example: 1
          type: integer
        type: array
      AzureCredentials:
        $ref: '#/definitions/portaineree.AzureCredentials'
      ChangeWindow:
        $ref: '#/definitions/portaineree.EndpointChangeWindow'
        description: Automatic update change window restriction for stacks and apps
      CloudProvider:
        $ref: '#/definitions/portaineree.CloudProvider'
        description: |-
          A Kubernetes as a service cloud provider. Only included if this
          endpoint was created using KaaS provisioning.
      ComposeSyntaxMaxVersion:
        description: Maximum version of docker-compose
        example: "3.8"
        type: string
      EdgeCheckinInterval:
        description: The check in interval for edge agent (in seconds)
        example: 5
        type: integer
      EdgeID:
        description: The identifier of the edge agent associated with this environment(endpoint)
        type: string
      EdgeKey:
        description: The key which is used to map the agent to Portainer
        type: string
      Gpus:
        items:
          $ref: '#/definitions/portaineree.Pair'
        type: array
      GroupId:
        description: Environment(Endpoint) group identifier
        example: 1
        type: integer
      Id:
        description: Environment(Endpoint) Identifier
        example: 1
        type: integer
      Kubernetes:
        $ref: '#/definitions/portaineree.KubernetesData'
        description: Associated Kubernetes data
      Name:
        description: Environment(Endpoint) name
        example: my-environment
        type: string
      Nomad:
        $ref: '#/definitions/portaineree.NomadData'
        description: Associated Nomad data
      PublicURL:
        description: URL or IP address where exposed containers will be reachable
        example: docker.mydomain.tld:2375
        type: string
      Snapshots:
        description: List of snapshots
        items:
          $ref: '#/definitions/portainer.DockerSnapshot'
        type: array
      Status:
        description: |-
          The status of the environment(endpoint) (1 - up, 2 - down, 3 -
          provisioning, 4 - error)
        example: 1
        type: integer
      StatusMessage:
        $ref: '#/definitions/portaineree.EndpointStatusMessage'
        description: |-
          A message that describes the status. Should be included for Status 3
          or 4.
      TLS:
        description: |-
          Deprecated fields
          Deprecated in DBVersion == 4
        type: boolean
      TLSCACert:
        type: string
      TLSCert:
        type: string
      TLSConfig:
        $ref: '#/definitions/portaineree.TLSConfiguration'
      TLSKey:
        type: string
      TagIds:
        description: List of tag identifiers to which this environment(endpoint) is
          associated
        items:
          description: Tag identifier
          example: 1
          type: integer
        type: array
      Tags:
        description: Deprecated in DBVersion == 22
        items:
          type: string
        type: array
      TeamAccessPolicies:
        $ref: '#/definitions/portaineree.TeamAccessPolicies'
        description: List of team identifiers authorized to connect to this environment(endpoint)
      Type:
        description: Environment(Endpoint) environment(endpoint) type. 1 for a Docker
          environment(endpoint), 2 for an agent on Docker environment(endpoint) or
          3 for an Azure environment(endpoint).
        example: 1
        type: integer
      URL:
        description: URL or IP address of the Docker host associated to this environment(endpoint)
        example: docker.mydomain.tld:2375
        type: string
      UserAccessPolicies:
        $ref: '#/definitions/portaineree.UserAccessPolicies'
        description: List of user identifiers authorized to connect to this environment(endpoint)
      agent:
        properties:
          version:
            example: 1.0.0
            type: string
        type: object
      edge:
        properties:
          CommandInterval:
            description: The command list interval for edge agent - used in edge async
              mode [seconds]
            example: 60
            type: integer
          PingInterval:
            description: The ping interval for edge agent - used in edge async mode
              [seconds]
            example: 60
            type: integer
          SnapshotInterval:
            description: The snapshot interval for edge agent - used in edge async
              mode [seconds]
            example: 60
            type: integer
          asyncMode:
            description: Whether the device has been started in edge async mode
            type: boolean
        type: object
      isEdgeDevice:
        description: IsEdgeDevice marks if the environment was created as an EdgeDevice
        type: boolean
      lastCheckInDate:
        description: LastCheckInDate mark last check-in date on checkin
        type: integer
      queryDate:
        description: QueryDate of each query with the endpoints list
        type: integer
      securitySettings:
        $ref: '#/definitions/portaineree.EndpointSecuritySettings'
        description: Environment(Endpoint) specific security settings
      userTrusted:
        description: Whether the device has been trusted or not by the user
        type: boolean
    type: object
  portaineree.EndpointAuthorizations:
    additionalProperties:
      $ref: '#/definitions/portaineree.Authorizations'
    type: object
  portaineree.EndpointChangeWindow:
    properties:
      Enabled:
        example: true
        type: boolean
      EndTime:
        example: "02:00"
        type: string
      StartTime:
        example: "22:00"
        type: string
    type: object
  portaineree.EndpointGroup:
    properties:
      AuthorizedTeams:
        items:
          description: Team Identifier
          example: 1
          type: integer
        type: array
      AuthorizedUsers:
        description: Deprecated in DBVersion == 18
        items:
          description: User Identifier
          example: 1
          type: integer
        type: array
      Description:
        description: Description associated to the environment(endpoint) group
        example: Environment(Endpoint) group description
        type: string
      Id:
        description: Environment(Endpoint) group Identifier
        example: 1
        type: integer
      Labels:
        description: Deprecated fields
        items:
          $ref: '#/definitions/portaineree.Pair'
        type: array
      Name:
        description: Environment(Endpoint) group name
        example: my-environment-group
        type: string
      TagIds:
        description: List of tags associated to this environment(endpoint) group
        items:
          description: Tag identifier
          example: 1
          type: integer
        type: array
      Tags:
        description: Deprecated in DBVersion == 22
        items:
          type: string
        type: array
      TeamAccessPolicies:
        $ref: '#/definitions/portaineree.TeamAccessPolicies'
      UserAccessPolicies:
        $ref: '#/definitions/portaineree.UserAccessPolicies'
    type: object
  portaineree.EndpointSecuritySettings:
    properties:
      allowBindMountsForRegularUsers:
        description: Whether non-administrator should be able to use bind mounts when
          creating containers
        example: false
        type: boolean
      allowContainerCapabilitiesForRegularUsers:
        description: Whether non-administrator should be able to use container capabilities
        example: true
        type: boolean
      allowDeviceMappingForRegularUsers:
        description: Whether non-administrator should be able to use device mapping
        example: true
        type: boolean
      allowHostNamespaceForRegularUsers:
        description: Whether non-administrator should be able to use the host pid
        example: true
        type: boolean
      allowPrivilegedModeForRegularUsers:
        description: Whether non-administrator should be able to use privileged mode
          when creating containers
        example: false
        type: boolean
      allowStackManagementForRegularUsers:
        description: Whether non-administrator should be able to manage stacks
        example: true
        type: boolean
      allowSysctlSettingForRegularUsers:
        description: Whether non-administrator should be able to use sysctl settings
        example: true
        type: boolean
      allowVolumeBrowserForRegularUsers:
        description: Whether non-administrator should be able to browse volumes
        example: true
        type: boolean
      enableHostManagementFeatures:
        description: Whether host management features are enabled
        example: true
        type: boolean
    type: object
  portaineree.EndpointStatusMessage:
    properties:
      Detail:
        type: string
      Summary:
        type: string
    type: object
  portaineree.FDOConfiguration:
    properties:
      enabled:
        type: boolean
      ownerPassword:
        type: string
      ownerURL:
        type: string
      ownerUsername:
        type: string
    type: object
  portaineree.GitlabRegistryData:
    properties:
      InstanceURL:
        type: string
      ProjectId:
        type: integer
      ProjectPath:
        type: string
    type: object
  portaineree.HelmUserRepository:
    properties:
      Id:
        description: Membership Identifier
        example: 1
        type: integer
      URL:
        description: Helm repository URL
        example: https://charts.bitnami.com/bitnami
        type: string
      UserId:
        description: User identifier
        example: 1
        type: integer
    type: object
  portaineree.InternalAuthSettings:
    properties:
      requiredPasswordLength:
        type: integer
    type: object
  portaineree.K8sNodeLimits:
    properties:
      CPU:
        type: integer
      Memory:
        type: integer
    type: object
  portaineree.K8sNodesLimits:
    additionalProperties:
      $ref: '#/definitions/portaineree.K8sNodeLimits'
    type: object
  portaineree.KubernetesConfiguration:
    properties:
      EnableResourceOverCommit:
        type: boolean
      IngressClasses:
        items:
          $ref: '#/definitions/portaineree.KubernetesIngressClassConfig'
        type: array
      ResourceOverCommitPercentage:
        type: integer
      RestrictDefaultNamespace:
        type: boolean
      StorageClasses:
        items:
          $ref: '#/definitions/portaineree.KubernetesStorageClassConfig'
        type: array
      UseLoadBalancer:
        type: boolean
      UseServerMetrics:
        type: boolean
    type: object
  portaineree.KubernetesData:
    properties:
      Configuration:
        $ref: '#/definitions/portaineree.KubernetesConfiguration'
      Snapshots:
        items:
          $ref: '#/definitions/portaineree.KubernetesSnapshot'
        type: array
    type: object
  portaineree.KubernetesIngressClassConfig:
    properties:
      Name:
        type: string
      Type:
        type: string
    type: object
  portaineree.KubernetesSnapshot:
    properties:
      KubernetesVersion:
        type: string
      NodeCount:
        type: integer
      Time:
        type: integer
      TotalCPU:
        type: integer
      TotalMemory:
        type: integer
    type: object
  portaineree.KubernetesStorageClassConfig:
    properties:
      AccessModes:
        items:
          type: string
        type: array
      AllowVolumeExpansion:
        type: boolean
      Name:
        type: string
      Provisioner:
        type: string
    type: object
  portaineree.LDAPGroupSearchSettings:
    properties:
      GroupAttribute:
        description: LDAP attribute which denotes the group membership
        example: member
        type: string
      GroupBaseDN:
        description: The distinguished name of the element from which the LDAP server
          will search for groups
        example: dc=ldap,dc=domain,dc=tld
        type: string
      GroupFilter:
        description: The LDAP search filter used to select group elements, optional
        example: (objectClass=account
        type: string
    type: object
  portaineree.LDAPSearchSettings:
    properties:
      BaseDN:
        description: The distinguished name of the element from which the LDAP server
          will search for users
        example: dc=ldap,dc=domain,dc=tld
        type: string
      Filter:
        description: Optional LDAP search filter used to select user elements
        example: (objectClass=account)
        type: string
      UserNameAttribute:
        description: LDAP attribute which denotes the username
        example: uid
        type: string
    type: object
  portaineree.LDAPSettings:
    properties:
      AdminAutoPopulate:
        description: Whether auto admin population is switched on or not
        example: true
        type: boolean
      AdminGroupSearchSettings:
        items:
          $ref: '#/definitions/portaineree.LDAPGroupSearchSettings'
        type: array
      AdminGroups:
        description: Saved admin group list, the user will be populated as an admin
          role if any user group matches the record in the list
        example:
        - '[''manager'''
        - '''operator'']'
        items:
          type: string
        type: array
      AnonymousMode:
        description: Enable this option if the server is configured for Anonymous
          access. When enabled, ReaderDN and Password will not be used
        example: true
        type: boolean
      AutoCreateUsers:
        description: Automatically provision users and assign them to matching LDAP
          group names
        example: true
        type: boolean
      GroupSearchSettings:
        items:
          $ref: '#/definitions/portaineree.LDAPGroupSearchSettings'
        type: array
      Password:
        description: Password of the account that will be used to search users
        example: readonly-password
        type: string
      ReaderDN:
        description: Account that will be used to search for users
        example: cn=readonly-account,dc=ldap,dc=domain,dc=tld
        type: string
      SearchSettings:
        items:
          $ref: '#/definitions/portaineree.LDAPSearchSettings'
        type: array
      ServerType:
        example: 1
        type: integer
      StartTLS:
        description: Whether LDAP connection should use StartTLS
        example: true
        type: boolean
      TLSConfig:
        $ref: '#/definitions/portaineree.TLSConfiguration'
      URL:
        description: Deprecated
        type: string
      URLs:
        description: URLs or IP addresses of the LDAP server
        items:
          type: string
        type: array
    type: object
  portaineree.LDAPUser:
    properties:
      groups:
        items:
          type: string
        type: array
      name:
        type: string
    type: object
  portaineree.NomadData:
    properties:
      Snapshots:
        items:
          $ref: '#/definitions/portaineree.NomadSnapshot'
        type: array
    type: object
  portaineree.NomadSnapshot:
    properties:
      GroupCount:
        type: integer
      JobCount:
        type: integer
      Jobs:
        items:
          $ref: '#/definitions/portaineree.NomadSnapshotJob'
        type: array
      NodeCount:
        type: integer
      NomadVersion:
        type: string
      RunningTaskCount:
        type: integer
      TaskCount:
        type: integer
      Time:
        type: integer
      TotalCPU:
        type: integer
      TotalMemory:
        type: integer
    type: object
  portaineree.NomadSnapshotJob:
    properties:
      ID:
        type: string
      Namespace:
        type: string
      Status:
        type: string
      SubmitTime:
        type: integer
      Tasks:
        items:
          $ref: '#/definitions/portaineree.NomadSnapshotTask'
        type: array
    type: object
  portaineree.NomadSnapshotTask:
    properties:
      AllocationID:
        type: string
      JobID:
        type: string
      Namespace:
        type: string
      StartedAt:
        type: string
      State:
        type: string
      TaskGroup:
        type: string
      TaskName:
        type: string
    type: object
  portaineree.OAuthClaimMappings:
    properties:
      ClaimValRegex:
        type: string
      Team:
        type: integer
    type: object
  portaineree.OAuthSettings:
    properties:
      AccessTokenURI:
        type: string
      AuthorizationURI:
        type: string
      ClientID:
        type: string
      ClientSecret:
        type: string
      DefaultTeamID:
        type: integer
      HideInternalAuth:
        type: boolean
      KubeSecretKey:
        items:
          type: integer
        type: array
      LogoutURI:
        type: string
      OAuthAutoCreateUsers:
        type: boolean
      OAuthAutoMapTeamMemberships:
        type: boolean
      RedirectURI:
        type: string
      ResourceURI:
        type: string
      SSO:
        type: boolean
      Scopes:
        type: string
      TeamMemberships:
        $ref: '#/definitions/portaineree.TeamMemberships'
      UserIdentifier:
        type: string
    type: object
  portaineree.Pair:
    properties:
      name:
        example: name
        type: string
      value:
        example: value
        type: string
    type: object
  portaineree.QuayRegistryData:
    properties:
      OrganisationName:
        type: string
      UseOrganisation:
        type: boolean
    type: object
  portaineree.Registry:
    properties:
      AccessToken:
        description: Stores temporary access token
        type: string
      AccessTokenExpiry:
        type: integer
      Authentication:
        description: Is authentication against this registry enabled
        example: true
        type: boolean
      AuthorizedTeams:
        description: Deprecated in DBVersion == 18
        items:
          description: Team Identifier
          example: 1
          type: integer
        type: array
      AuthorizedUsers:
        description: Deprecated in DBVersion == 18
        items:
          description: User Identifier
          example: 1
          type: integer
        type: array
      BaseURL:
        description: Base URL, introduced for ProGet registry
        example: registry.mydomain.tld:2375
        type: string
      Ecr:
        $ref: '#/definitions/portaineree.EcrData'
      Gitlab:
        $ref: '#/definitions/portaineree.GitlabRegistryData'
      Id:
        description: Registry Identifier
        example: 1
        type: integer
      ManagementConfiguration:
        $ref: '#/definitions/portaineree.RegistryManagementConfiguration'
      Name:
        description: Registry Name
        example: my-registry
        type: string
      Password:
        description: Password or SecretAccessKey used to authenticate against this
          registry
        example: registry_password
        type: string
      Quay:
        $ref: '#/definitions/portaineree.QuayRegistryData'
      RegistryAccesses:
        $ref: '#/definitions/portaineree.RegistryAccesses'
      TeamAccessPolicies:
        $ref: '#/definitions/portaineree.TeamAccessPolicies'
        description: Deprecated in DBVersion == 31
      Type:
        description: Registry Type (1 - Quay, 2 - Azure, 3 - Custom, 4 - Gitlab, 5
          - ProGet, 6 - DockerHub, 7 - ECR)
        enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        type: integer
      URL:
        description: URL or IP address of the Docker registry
        example: registry.mydomain.tld:2375/feed-name
        type: string
      UserAccessPolicies:
        $ref: '#/definitions/portaineree.UserAccessPolicies'
        description: |-
          Deprecated fields
          Deprecated in DBVersion == 31
      Username:
        description: Username or AccessKeyID used to authenticate against this registry
        example: registry user
        type: string
    type: object
  portaineree.RegistryAccessPolicies:
    properties:
      Namespaces:
        items:
          type: string
        type: array
      TeamAccessPolicies:
        $ref: '#/definitions/portaineree.TeamAccessPolicies'
      UserAccessPolicies:
        $ref: '#/definitions/portaineree.UserAccessPolicies'
    type: object
  portaineree.RegistryAccesses:
    additionalProperties:
      $ref: '#/definitions/portaineree.RegistryAccessPolicies'
    type: object
  portaineree.RegistryManagementConfiguration:
    properties:
      AccessToken:
        type: string
      AccessTokenExpiry:
        type: integer
      Authentication:
        type: boolean
      Ecr:
        $ref: '#/definitions/portaineree.EcrData'
      Password:
        type: string
      TLSConfig:
        $ref: '#/definitions/portaineree.TLSConfiguration'
      Type:
        description: Registry Type (1 - Quay, 2 - Azure, 3 - Custom, 4 - Gitlab, 5
          - ProGet, 6 - DockerHub, 7 - ECR)
        type: integer
      Username:
        type: string
    type: object
  portaineree.ResourceControl:
    properties:
      AccessLevel:
        type: integer
      AdministratorsOnly:
        description: Permit access to resource only to admins
        example: true
        type: boolean
      Id:
        description: ResourceControl Identifier
        example: 1
        type: integer
      OwnerId:
        description: |-
          Deprecated fields
          Deprecated in DBVersion == 2
        type: integer
      Public:
        description: Permit access to the associated resource to any user
        example: true
        type: boolean
      ResourceId:
        description: |-
          Docker resource identifier on which access control will be applied.\
          In the case of a resource control applied to a stack, use the stack name as identifier
        example: 617c5f22bb9b023d6daab7cba43a57576f83492867bc767d1c59416b065e5f08
        type: string
      SubResourceIds:
        description: List of Docker resources that will inherit this access control
        example:
        - 617c5f22bb9b023d6daab7cba43a57576f83492867bc767d1c59416b065e5f08
        items:
          type: string
        type: array
      System:
        type: boolean
      TeamAccesses:
        items:
          $ref: '#/definitions/portaineree.TeamResourceAccess'
        type: array
      Type:
        description: |-
          Type of Docker resource. Valid values are: 1- container, 2 -service
          3 - volume, 4 - secret, 5 - stack, 6 - config or 7 - custom template
        example: 1
        type: integer
      UserAccesses:
        items:
          $ref: '#/definitions/portaineree.UserResourceAccess'
        type: array
    type: object
  portaineree.Role:
    properties:
      Authorizations:
        $ref: '#/definitions/portaineree.Authorizations'
        description: Authorizations associated to a role
      Description:
        description: Role description
        example: Read-only access of all resources in an environment(endpoint)
        type: string
      Id:
        description: Role Identifier
        example: 1
        type: integer
      Name:
        description: Role name
        example: HelpDesk
        type: string
      Priority:
        type: integer
    required:
    - Authorizations
    - Description
    - Id
    - Name
    - Priority
    type: object
  portaineree.S3BackupSettings:
    properties:
      accessKeyID:
        description: AWS access key id
        type: string
      bucketName:
        description: AWS S3 bucket name
        type: string
      cronRule:
        description: Crontab rule to make periodical backups
        type: string
      password:
        description: Password to encrypt the backup with
        type: string
      region:
        description: AWS S3 region
        type: string
      secretAccessKey:
        description: AWS secret access key
        type: string
    type: object
  portaineree.SSLSettings:
    properties:
      caCertPath:
        type: string
      certPath:
        type: string
      httpEnabled:
        type: boolean
      keyPath:
        type: string
      selfSigned:
        type: boolean
    type: object
  portaineree.Settings:
    properties:
      AgentSecret:
        description: Container environment parameter AGENT_SECRET
        type: string
      AllowBindMountsForRegularUsers:
        type: boolean
      AllowContainerCapabilitiesForRegularUsers:
        type: boolean
      AllowDeviceMappingForRegularUsers:
        type: boolean
      AllowHostNamespaceForRegularUsers:
        type: boolean
      AllowPrivilegedModeForRegularUsers:
        type: boolean
      AllowStackManagementForRegularUsers:
        type: boolean
      AllowVolumeBrowserForRegularUsers:
        type: boolean
      AuthenticationMethod:
        description: 'Active authentication method for the Portainer instance. Valid
          values are: 1 for internal, 2 for LDAP, or 3 for oauth'
        example: 1
        type: integer
      BlackListedLabels:
        description: A list of label name & value that will be used to hide containers
          when querying containers
        items:
          $ref: '#/definitions/portaineree.Pair'
        type: array
      CloudApiKeys:
        $ref: '#/definitions/portaineree.CloudApiKeys'
        description: CloudAPIKeys
      EdgeAgentCheckinInterval:
        description: The default check in interval for edge agent (in seconds)
        example: 5
        type: integer
      EdgePortainerUrl:
        description: EdgePortainerURL is the URL that is exposed to edge agents
        type: string
      EnableEdgeComputeFeatures:
        description: Whether edge compute features are enabled
        type: boolean
      EnableHostManagementFeatures:
        description: Deprecated fields v26
        type: boolean
      EnableTelemetry:
        description: Whether telemetry is enabled
        example: false
        type: boolean
      EnforceEdgeID:
        description: EnforceEdgeID makes Portainer store the Edge ID instead of accepting
          anyone
        example: false
        type: boolean
      FeatureFlagSettings:
        additionalProperties:
          type: boolean
        type: object
      HelmRepositoryURL:
        description: Helm repository URL, defaults to "https://charts.bitnami.com/bitnami"
        example: https://charts.bitnami.com/bitnami
        type: string
      InternalAuthSettings:
        $ref: '#/definitions/portaineree.InternalAuthSettings'
      KubeconfigExpiry:
        description: The expiry of a Kubeconfig
        example: 24h
        type: string
      KubectlShellImage:
        description: KubectlImage, defaults to portainer/kubectl-shell
        example: portainer/kubectl-shell
        type: string
      LDAPSettings:
        $ref: '#/definitions/portaineree.LDAPSettings'
      LogoURL:
        description: URL to a logo that will be displayed on the login page as well
          as on top of the sidebar. Will use default Portainer logo when value is
          empty string
        example: https://mycompany.mydomain.tld/logo.png
        type: string
      OAuthSettings:
        $ref: '#/definitions/portaineree.OAuthSettings'
      SnapshotInterval:
        description: The interval in which environment(endpoint) snapshots are created
        example: 5m
        type: string
      TemplatesURL:
        description: URL to the templates that will be displayed in the UI when navigating
          to App Templates
        example: https://raw.githubusercontent.com/portainer/templates/master/templates.json
        type: string
      TrustOnFirstConnect:
        description: TrustOnFirstConnect makes Portainer accepting edge agent connection
          by default
        example: false
        type: boolean
      UserSessionTimeout:
        description: The duration of a user session
        example: 5m
        type: string
      defaultRegistry:
        description: the default builtin registry now is anonymous docker hub registry
        properties:
          Hide:
            example: false
            type: boolean
        type: object
      displayDonationHeader:
        description: Deprecated fields
        type: boolean
      displayExternalContributors:
        type: boolean
      edge:
        properties:
          CommandInterval:
            description: The command list interval for edge agent - used in edge async
              mode (in seconds)
            example: 5
            type: integer
          PingInterval:
            description: The ping interval for edge agent - used in edge async mode
              (in seconds)
            example: 5
            type: integer
          SnapshotInterval:
            description: The snapshot interval for edge agent - used in edge async
              mode (in seconds)
            example: 5
            type: integer
          asyncMode:
            description: EdgeAsyncMode enables edge async mode by default
            type: boolean
        type: object
      fdoConfiguration:
        $ref: '#/definitions/portaineree.FDOConfiguration'
      openAMTConfiguration:
        $ref: '#/definitions/portainer.OpenAMTConfiguration'
    type: object
  portaineree.Stack:
    properties:
      AdditionalFiles:
        description: Only applies when deploying stack with multiple files
        items:
          type: string
        type: array
      AutoUpdate:
        $ref: '#/definitions/portaineree.StackAutoUpdate'
        description: The auto update settings of a git stack
      EndpointId:
        description: Environment(Endpoint) identifier. Reference the environment(endpoint)
          that will be used for deployment
        example: 1
        type: integer
      EntryPoint:
        description: Path to the Stack file
        example: docker-compose.yml
        type: string
      Env:
        description: A list of environment(endpoint) variables used during stack deployment
        items:
          $ref: '#/definitions/portaineree.Pair'
        type: array
      Id:
        description: Stack Identifier
        example: 1
        type: integer
      Name:
        description: Stack name
        example: myStack
        type: string
      Option:
        $ref: '#/definitions/portaineree.StackOption'
        description: The stack deployment option
      ResourceControl:
        $ref: '#/definitions/portaineree.ResourceControl'
      Status:
        description: Stack status (1 - active, 2 - inactive)
        example: 1
        type: integer
      SwarmId:
        description: Cluster identifier of the Swarm cluster where the stack is deployed
        example: jpofkc0i9uo9wtx1zesuk649w
        type: string
      Type:
        description: Stack type. 1 for a Swarm stack, 2 for a Compose stack, 3 for
          a Kubernetes stack
        example: 2
        type: integer
      createdBy:
        description: The username which created this stack
        example: admin
        type: string
      creationDate:
        description: The date in unix time when stack was created
        example: 1587399600
        type: integer
      fromAppTemplate:
        description: Whether the stack is from a app template
        example: false
        type: boolean
      gitConfig:
        $ref: '#/definitions/gittypes.RepoConfig'
        description: The git configuration of a git stack
      isComposeFormat:
        description: IsComposeFormat indicates if the Kubernetes stack is created
          from a Docker Compose file
        example: false
        type: boolean
      namespace:
        description: Kubernetes namespace if stack is a kube application
        example: default
        type: string
      projectPath:
        description: Path on disk to the repository hosting the Stack file
        example: /data/compose/myStack_jpofkc0i9uo9wtx1zesuk649w
        type: string
      updateDate:
        description: The date in unix time when stack was last updated
        example: 1587399600
        type: integer
      updatedBy:
        description: The username which last updated this stack
        example: bob
        type: string
      webhook:
        description: A UUID to identify a webhook. The stack will be force updated
          and pull the latest image when the webhook was invoked.
        example: c11fdf23-183e-428a-9bb6-16db01032174
        type: string
    type: object
  portaineree.StackAutoUpdate:
    properties:
      forcePullImage:
        description: Pull latest image
        example: false
        type: boolean
      forceUpdate:
        description: Force update ignores repo changes
        example: false
        type: boolean
      interval:
        description: Auto update interval
        example: 1m30s
        type: string
      jobID:
        description: Autoupdate job id
        example: "15"
        type: string
      webhook:
        description: A UUID generated from client
        example: 05de31a2-79fa-4644-9c12-faa67e5c49f0
        type: string
    type: object
  portaineree.StackOption:
    properties:
      prune:
        description: Prune services that are no longer referenced
        example: false
        type: boolean
    type: object
  portaineree.TLSConfiguration:
    properties:
      TLS:
        description: Use TLS
        example: true
        type: boolean
      TLSCACert:
        description: Path to the TLS CA certificate file
        example: /data/tls/ca.pem
        type: string
      TLSCert:
        description: Path to the TLS client certificate file
        example: /data/tls/cert.pem
        type: string
      TLSKey:
        description: Path to the TLS client key file
        example: /data/tls/key.pem
        type: string
      TLSSkipVerify:
        description: Skip the verification of the server TLS certificate
        example: false
        type: boolean
    type: object
  portaineree.Tag:
    properties:
      EndpointGroups:
        additionalProperties:
          type: boolean
        description: A set of environment(endpoint) group ids that have this tag
        type: object
      Endpoints:
        additionalProperties:
          type: boolean
        description: A set of environment(endpoint) ids that have this tag
        type: object
      Name:
        description: Tag name
        example: org/acme
        type: string
      id:
        description: Tag identifier
        example: 1
        type: integer
    type: object
  portaineree.Team:
    properties:
      Id:
        description: Team Identifier
        example: 1
        type: integer
      Name:
        description: Team name
        example: developers
        type: string
    type: object
  portaineree.TeamAccessPolicies:
    additionalProperties:
      $ref: '#/definitions/portaineree.AccessPolicy'
    type: object
  portaineree.TeamMembership:
    properties:
      Id:
        description: Membership Identifier
        example: 1
        type: integer
      Role:
        description: Team role (1 for team leader and 2 for team member)
        example: 1
        type: integer
      TeamID:
        description: Team identifier
        example: 1
        type: integer
      UserID:
        description: User identifier
        example: 1
        type: integer
    type: object
  portaineree.TeamMemberships:
    properties:
      AdminAutoPopulate:
        type: boolean
      AdminGroupClaimsRegexList:
        items:
          type: string
        type: array
      OAuthClaimMappings:
        items:
          $ref: '#/definitions/portaineree.OAuthClaimMappings'
        type: array
      OAuthClaimName:
        type: string
    type: object
  portaineree.TeamResourceAccess:
    properties:
      AccessLevel:
        type: integer
      TeamId:
        type: integer
    type: object
  portaineree.Template:
    properties:
      Id:
        description: |-
          Mandatory container/stack fields
          Template Identifier
        example: 1
        type: integer
      administrator_only:
        description: Whether the template should be available to administrators only
        example: true
        type: boolean
      categories:
        description: A list of categories associated to the template
        example:
        - database
        items:
          type: string
        type: array
      command:
        description: The command that will be executed in a container template
        example: ls -lah
        type: string
      description:
        description: Description of the template
        example: High performance web server
        type: string
      env:
        description: A list of environment(endpoint) variables used during the template
          deployment
        items:
          $ref: '#/definitions/portaineree.TemplateEnv'
        type: array
      hostname:
        description: Container hostname
        example: mycontainer
        type: string
      image:
        description: |-
          Mandatory container fields
          Image associated to a container template. Mandatory for a container template
        example: nginx:latest
        type: string
      interactive:
        description: |-
          Whether the container should be started in
          interactive mode (-i -t equivalent on the CLI)
        example: true
        type: boolean
      labels:
        description: Container labels
        items:
          $ref: '#/definitions/portaineree.Pair'
        type: array
      logo:
        description: URL of the template's logo
        example: https://cloudinovasi.id/assets/img/logos/nginx.png
        type: string
      name:
        description: |-
          Optional stack/container fields
          Default name for the stack/container to be used on deployment
        example: mystackname
        type: string
      network:
        description: Name of a network that will be used on container deployment if
          it exists inside the environment(endpoint)
        example: mynet
        type: string
      note:
        description: A note that will be displayed in the UI. Supports HTML content
        example: This is my <b>custom</b> template
        type: string
      platform:
        description: |-
          Platform associated to the template.
          Valid values are: 'linux', 'windows' or leave empty for multi-platform
        example: linux
        type: string
      ports:
        description: A list of ports exposed by the container
        example:
        - 8080:80/tcp
        items:
          type: string
        type: array
      privileged:
        description: Whether the container should be started in privileged mode
        example: true
        type: boolean
      registry:
        description: |-
          Optional container fields
          The URL of a registry associated to the image for a container template
        example: quay.io
        type: string
      repository:
        $ref: '#/definitions/portaineree.TemplateRepository'
        description: Mandatory stack fields
      restart_policy:
        description: Container restart policy
        example: on-failure
        type: string
      stackFile:
        description: |-
          Mandatory Edge stack fields
          Stack file used for this template
        type: string
      title:
        description: Title of the template
        example: Nginx
        type: string
      type:
        description: 'Template type. Valid values are: 1 (container), 2 (Swarm stack)
          or 3 (Compose stack)'
        example: 1
        type: integer
      volumes:
        description: A list of volumes used during the container template deployment
        items:
          $ref: '#/definitions/portaineree.TemplateVolume'
        type: array
    type: object
  portaineree.TemplateEnv:
    properties:
      default:
        description: Default value that will be set for the variable
        example: default_value
        type: string
      description:
        description: Content of the tooltip that will be generated in the UI
        example: MySQL root account password
        type: string
      label:
        description: Text for the label that will be generated in the UI
        example: Root password
        type: string
      name:
        description: name of the environment(endpoint) variable
        example: MYSQL_ROOT_PASSWORD
        type: string
      preset:
        description: If set to true, will not generate any input for this variable
          in the UI
        example: false
        type: boolean
      select:
        description: A list of name/value that will be used to generate a dropdown
          in the UI
        items:
          $ref: '#/definitions/portaineree.TemplateEnvSelect'
        type: array
    type: object
  portaineree.TemplateEnvSelect:
    properties:
      default:
        description: Will set this choice as the default choice
        example: false
        type: boolean
      text:
        description: Some text that will displayed as a choice
        example: text value
        type: string
      value:
        description: A value that will be associated to the choice
        example: value
        type: string
    type: object
  portaineree.TemplateRepository:
    properties:
      stackfile:
        description: Path to the stack file inside the git repository
        example: ./subfolder/docker-compose.yml
        type: string
      url:
        description: URL of a git repository used to deploy a stack template. Mandatory
          for a Swarm/Compose stack template
        example: https://github.com/portainer/portainer-compose
        type: string
    type: object
  portaineree.TemplateVolume:
    properties:
      bind:
        description: Path on the host
        example: /tmp
        type: string
      container:
        description: Path inside the container
        example: /data
        type: string
      readonly:
        description: Whether the volume used should be readonly
        example: true
        type: boolean
    type: object
  portaineree.User:
    properties:
      EndpointAuthorizations:
        $ref: '#/definitions/portaineree.EndpointAuthorizations'
      Id:
        description: User Identifier
        example: 1
        type: integer
      PortainerAuthorizations:
        $ref: '#/definitions/portaineree.Authorizations'
      Role:
        description: User role (1 for administrator account and 2 for regular account)
        example: 1
        type: integer
      TokenIssueAt:
        example: 1639408208
        type: integer
      Username:
        example: bob
        type: string
      userTheme:
        description: User Theme
        example: dark
        type: string
    type: object
  portaineree.UserAccessPolicies:
    additionalProperties:
      $ref: '#/definitions/portaineree.AccessPolicy'
    type: object
  portaineree.UserActivityLog:
    properties:
      action:
        type: string
      context:
        type: string
      id:
        type: integer
      payload:
        items:
          type: integer
        type: array
      timestamp:
        type: integer
      username:
        type: string
    type: object
  portaineree.UserResourceAccess:
    properties:
      AccessLevel:
        type: integer
      UserId:
        description: User identifier who created this template
        type: integer
    type: object
  portaineree.Webhook:
    properties:
      EndpointId:
        description: Environment(Endpoint) identifier. Reference the environment(endpoint)
          that will be used for deployment
        type: integer
      Id:
        description: Webhook Identifier
        example: 1
        type: integer
      RegistryId:
        description: Registry Identifier
        type: integer
      ResourceId:
        type: string
      Token:
        type: string
      Type:
        type: integer
    type: object
  providers.AmazonProvisionPayload:
    properties:
      amiType:
        example: BOTTLEROCKET_x86_64
        type: string
      credentialID:
        description: CredentialID holds an ID of the credential used to create the
          cluster
        example: 1
        type: integer
      instanceType:
        example: m5.large
        type: string
      kubernetesVersion:
        example: "1.23"
        type: string
      meta:
        $ref: '#/definitions/types.EnvironmentMetadata'
      name:
        example: myDevCluster
        type: string
      networkID:
        example: 8465fb26-632e-4fa3-bb9b-21c449629026
        type: string
      nodeCount:
        example: 3
        type: integer
      nodeSize:
        example: g3.small
        type: string
      nodeVolumeSize:
        example: 20
        type: integer
      region:
        example: NYC1
        type: string
    required:
    - amiType
    - credentialID
    - instanceType
    - kubernetesVersion
    - name
    - nodeCount
    - nodeSize
    - region
    type: object
  providers.AzureProvisionPayload:
    properties:
      availabilityZones:
        items:
          type: string
        type: array
      credentialID:
        description: CredentialID holds an ID of the credential used to create the
          cluster
        example: 1
        type: integer
      dnsPrefix:
        type: string
      kubernetesVersion:
        example: "1.23"
        type: string
      meta:
        $ref: '#/definitions/types.EnvironmentMetadata'
      name:
        example: myDevCluster
        type: string
      networkID:
        example: 8465fb26-632e-4fa3-bb9b-21c449629026
        type: string
      nodeCount:
        example: 3
        type: integer
      nodeSize:
        example: g3.small
        type: string
      poolName:
        type: string
      region:
        example: NYC1
        type: string
      resourceGroup:
        description: Azure specific fields
        type: string
      resourceGroupName:
        type: string
      tier:
        type: string
    required:
    - credentialID
    - kubernetesVersion
    - name
    - nodeCount
    - nodeSize
    - region
    type: object
  providers.DefaultProvisionPayload:
    properties:
      credentialID:
        description: CredentialID holds an ID of the credential used to create the
          cluster
        example: 1
        type: integer
      kubernetesVersion:
        example: "1.23"
        type: string
      meta:
        $ref: '#/definitions/types.EnvironmentMetadata'
      name:
        example: myDevCluster
        type: string
      networkID:
        example: 8465fb26-632e-4fa3-bb9b-21c449629026
        type: string
      nodeCount:
        example: 3
        type: integer
      nodeSize:
        example: g3.small
        type: string
      region:
        example: NYC1
        type: string
    required:
    - credentialID
    - kubernetesVersion
    - name
    - nodeCount
    - nodeSize
    - region
    type: object
  providers.GKEProvisionPayload:
    properties:
      cpu:
        example: 2
        type: integer
      credentialID:
        description: CredentialID holds an ID of the credential used to create the
          cluster
        example: 1
        type: integer
      hdd:
        example: 100
        type: integer
      kubernetesVersion:
        example: "1.23"
        type: string
      meta:
        $ref: '#/definitions/types.EnvironmentMetadata'
      name:
        example: myDevCluster
        type: string
      networkID:
        example: 8465fb26-632e-4fa3-bb9b-21c449629026
        type: string
      nodeCount:
        example: 3
        type: integer
      nodeSize:
        example: g3.small
        type: string
      ram:
        example: 4
        type: number
      region:
        example: NYC1
        type: string
    required:
    - credentialID
    - kubernetesVersion
    - name
    - nodeCount
    - nodeSize
    - region
    type: object
  registries.deleteTagsPayload:
    properties:
      tags:
        items:
          type: string
        type: array
    type: object
  registries.registryConfigurePayload:
    properties:
      authentication:
        description: Is authentication against this registry enabled
        example: false
        type: boolean
      password:
        description: Password used to authenticate against this registry. required
          when Authentication is true
        example: registry_password
        type: string
      region:
        description: ECR region
        type: string
      tls:
        description: Use TLS
        example: true
        type: boolean
      tlscacertFile:
        description: The TLS CA certificate file
        items:
          type: integer
        type: array
      tlscertFile:
        description: The TLS client certificate file
        items:
          type: integer
        type: array
      tlskeyFile:
        description: The TLS client key file
        items:
          type: integer
        type: array
      tlsskipVerify:
        description: Skip the verification of the server TLS certificate
        example: false
        type: boolean
      username:
        description: Username used to authenticate against this registry. Required
          when Authentication is true
        example: registry_user
        type: string
    required:
    - authentication
    type: object
  registries.registryCreatePayload:
    properties:
      authentication:
        description: Is authentication against this registry enabled
        example: false
        type: boolean
      baseURL:
        description: BaseURL required for ProGet registry
        example: registry.mydomain.tld:2375
        type: string
      ecr:
        $ref: '#/definitions/portaineree.EcrData'
        description: ECR specific details, required when type = 7
      gitlab:
        $ref: '#/definitions/portaineree.GitlabRegistryData'
        description: Gitlab specific details, required when type = 4
      name:
        description: Name that will be used to identify this registry
        example: my-registry
        type: string
      password:
        description: Password used to authenticate against this registry. required
          when Authentication is true
        example: registry_password
        type: string
      quay:
        $ref: '#/definitions/portaineree.QuayRegistryData'
        description: Quay specific details, required when type = 1
      type:
        description: "Registry Type. Valid values are:\n\t1 (Quay.io),\n\t2 (Azure
          container registry),\n\t3 (custom registry),\n\t4 (Gitlab registry),\n\t5
          (ProGet registry),\n\t6 (DockerHub)\n\t7 (ECR)"
        enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        example: 1
        type: integer
      url:
        description: URL or IP address of the Docker registry
        example: registry.mydomain.tld:2375/feed
        type: string
      username:
        description: Username used to authenticate against this registry. Required
          when Authentication is true
        example: registry_user
        type: string
    required:
    - authentication
    - name
    - type
    - url
    type: object
  registries.registryUpdatePayload:
    properties:
      authentication:
        example: false
        type: boolean
      baseURL:
        example: registry.mydomain.tld:2375
        type: string
      ecr:
        $ref: '#/definitions/portaineree.EcrData'
      name:
        example: my-registry
        type: string
      password:
        example: registry_password
        type: string
      quay:
        $ref: '#/definitions/portaineree.QuayRegistryData'
      registryAccesses:
        $ref: '#/definitions/portaineree.RegistryAccesses'
      url:
        example: registry.mydomain.tld:2375/feed
        type: string
      username:
        example: registry_user
        type: string
    required:
    - authentication
    - name
    - url
    type: object
  release.Chart:
    properties:
      files:
        description: |-
          Files are miscellaneous files in a chart archive,
          e.g. README, LICENSE, etc.
        items:
          $ref: '#/definitions/release.File'
        type: array
      lock:
        $ref: '#/definitions/release.Lock'
        description: Lock is the contents of Chart.lock.
      metadata:
        $ref: '#/definitions/release.Metadata'
        description: Metadata is the contents of the Chartfile.
      schema:
        description: Schema is an optional JSON schema for imposing structure on Values
        items:
          type: integer
        type: array
      templates:
        description: Templates for this chart.
        items:
          $ref: '#/definitions/release.File'
        type: array
      values:
        additionalProperties: true
        description: Values are default config for this chart.
        type: object
    type: object
  release.Dependency:
    properties:
      alias:
        description: Alias usable alias to be used for the chart
        type: string
      condition:
        description: A yaml path that resolves to a boolean, used for enabling/disabling
          charts (e.g. subchart1.enabled )
        type: string
      enabled:
        description: Enabled bool determines if chart should be loaded
        type: boolean
      import-values:
        description: |-
          ImportValues holds the mapping of source values to parent key to be imported. Each item can be a
          string or pair of child/parent sublist items.
        items: {}
        type: array
      name:
        description: |-
          Name is the name of the dependency.

          This must mach the name in the dependency's Chart.yaml.
        type: string
      repository:
        description: |-
          The URL to the repository.

          Appending `index.yaml` to this string should result in a URL that can be
          used to fetch the repository index.
        type: string
      tags:
        description: Tags can be used to group charts for enabling/disabling together
        items:
          type: string
        type: array
      version:
        description: |-
          Version is the version (range) of this chart.

          A lock file will always produce a single version, while a dependency
          may contain a semantic version range.
        type: string
    type: object
  release.File:
    properties:
      data:
        description: Data is the template as byte data.
        items:
          type: integer
        type: array
      name:
        description: Name is the path-like name of the template.
        type: string
    type: object
  release.Hook:
    properties:
      delete_policies:
        description: DeletePolicies are the policies that indicate when to delete
          the hook
        items:
          type: string
        type: array
      events:
        description: Events are the events that this hook fires on.
        items:
          type: string
        type: array
      kind:
        description: Kind is the Kubernetes kind.
        type: string
      last_run:
        $ref: '#/definitions/release.HookExecution'
        description: LastRun indicates the date/time this was last run.
      manifest:
        description: Manifest is the manifest contents.
        type: string
      name:
        type: string
      path:
        description: Path is the chart-relative path to the template.
        type: string
      weight:
        description: Weight indicates the sort order for execution among similar Hook
          type
        type: integer
    type: object
  release.HookExecution:
    properties:
      completed_at:
        description: CompletedAt indicates the date/time this hook was completed.
        type: string
      phase:
        description: Phase indicates whether the hook completed successfully
        type: string
      started_at:
        description: StartedAt indicates the date/time this hook was started
        type: string
    type: object
  release.Lock:
    properties:
      dependencies:
        description: Dependencies is the list of dependencies that this lock file
          has locked.
        items:
          $ref: '#/definitions/release.Dependency'
        type: array
      digest:
        description: Digest is a hash of the dependencies in Chart.yaml.
        type: string
      generated:
        description: Generated is the date the lock file was last generated.
        type: string
    type: object
  release.Maintainer:
    properties:
      email:
        description: Email is an optional email address to contact the named maintainer
        type: string
      name:
        description: Name is a user name or organization name
        type: string
      url:
        description: URL is an optional URL to an address for the named maintainer
        type: string
    type: object
  release.Metadata:
    properties:
      annotations:
        additionalProperties:
          type: string
        description: |-
          Annotations are additional mappings uninterpreted by Helm,
          made available for inspection by other applications.
        type: object
      apiVersion:
        description: The API Version of this chart. Required.
        type: string
      appVersion:
        description: The version of the application enclosed inside of this chart.
        type: string
      condition:
        description: The condition to check to enable chart
        type: string
      dependencies:
        description: Dependencies are a list of dependencies for a chart.
        items:
          $ref: '#/definitions/release.Dependency'
        type: array
      deprecated:
        description: Whether or not this chart is deprecated
        type: boolean
      description:
        description: A one-sentence description of the chart
        type: string
      home:
        description: The URL to a relevant project page, git repo, or contact person
        type: string
      icon:
        description: The URL to an icon file.
        type: string
      keywords:
        description: A list of string keywords
        items:
          type: string
        type: array
      kubeVersion:
        description: KubeVersion is a SemVer constraint specifying the version of
          Kubernetes required.
        type: string
      maintainers:
        description: A list of name and URL/email address combinations for the maintainer(s)
        items:
          $ref: '#/definitions/release.Maintainer'
        type: array
      name:
        description: The name of the chart. Required.
        type: string
      sources:
        description: Source is the URL to the source code of this chart
        items:
          type: string
        type: array
      tags:
        description: The tags to check to enable chart
        type: string
      type:
        description: 'Specifies the chart type: application or library'
        type: string
      version:
        description: A SemVer 2 conformant version string of the chart. Required.
        type: string
    type: object
  release.Release:
    properties:
      chart:
        $ref: '#/definitions/release.Chart'
        description: |-
          Info provides information about a release
          Info *Info `json:"info,omitempty"`
          Chart is the chart that was released.
      config:
        additionalProperties: true
        description: |-
          Config is the set of extra Values added to the chart.
          These values override the default values inside of the chart.
        type: object
      hooks:
        description: Hooks are all of the hooks declared for this release.
        items:
          $ref: '#/definitions/release.Hook'
        type: array
      manifest:
        description: Manifest is the string representation of the rendered template.
        type: string
      name:
        description: Name is the name of the release
        type: string
      namespace:
        description: Namespace is the kubernetes namespace of the release.
        type: string
      version:
        description: Version is an int which represents the revision of the release.
        type: integer
    type: object
  release.ReleaseElement:
    properties:
      app_version:
        type: string
      chart:
        type: string
      name:
        type: string
      namespace:
        type: string
      revision:
        type: string
      status:
        type: string
      updated:
        type: string
    type: object
  resourcecontrols.resourceControlCreatePayload:
    properties:
      administratorsOnly:
        description: Permit access to resource only to admins
        example: true
        type: boolean
      public:
        description: Permit access to the associated resource to any user
        example: true
        type: boolean
      resourceID:
        example: 617c5f22bb9b023d6daab7cba43a57576f83492867bc767d1c59416b065e5f08
        type: string
      subResourceIDs:
        description: List of Docker resources that will inherit this access control
        example:
        - 617c5f22bb9b023d6daab7cba43a57576f83492867bc767d1c59416b065e5f08
        items:
          type: string
        type: array
      teams:
        description: List of team identifiers with access to the associated resource
        example:
        - 56
        - 7
        items:
          type: integer
        type: array
      type:
        description: |-
          Type of Resource. Valid values are: 1 - container, 2 - service
          3 - volume, 4 - network, 5 - secret, 6 - stack, 7 - config, 8 - custom template, 9 - azure-container-group
        enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        example: 1
        type: integer
      users:
        description: List of user identifiers with access to the associated resource
        example:
        - 1
        - 4
        items:
          type: integer
        type: array
    required:
    - resourceID
    - type
    type: object
  resourcecontrols.resourceControlUpdatePayload:
    properties:
      administratorsOnly:
        description: Permit access to resource only to admins
        example: true
        type: boolean
      public:
        description: Permit access to the associated resource to any user
        example: true
        type: boolean
      teams:
        description: List of team identifiers with access to the associated resource
        example:
        - 7
        items:
          type: integer
        type: array
      users:
        description: List of user identifiers with access to the associated resource
        example:
        - 4
        items:
          type: integer
        type: array
    type: object
  settings.defaultRegistryUpdatePayload:
    properties:
      Hide:
        example: false
        type: boolean
    type: object
  settings.publicSettingsResponse:
    properties:
      AuthenticationMethod:
        description: 'Active authentication method for the Portainer instance. Valid
          values are: 1 for internal, 2 for LDAP, or 3 for oauth'
        example: 1
        type: integer
      EnableEdgeComputeFeatures:
        description: Whether edge compute features are enabled
        example: true
        type: boolean
      EnableTelemetry:
        description: Whether telemetry is enabled
        example: true
        type: boolean
      Features:
        additionalProperties:
          type: boolean
        description: Supported feature flags
        type: object
      LogoURL:
        description: URL to a logo that will be displayed on the login page as well
          as on top of the sidebar. Will use default Portainer logo when value is
          empty string
        example: https://mycompany.mydomain.tld/logo.png
        type: string
      OAuthHideInternalAuth:
        description: Whether portainer internal auth view will be hidden
        example: true
        type: boolean
      OAuthLoginURI:
        description: The URL used for oauth login
        example: https://gitlab.com/oauth
        type: string
      OAuthLogoutURI:
        description: The URL used for oauth logout
        example: https://gitlab.com/oauth/logout
        type: string
      RequiredPasswordLength:
        description: The minimum required length for a password of any user when using
          internal auth mode
        example: 1
        type: integer
      TeamSync:
        description: Whether team sync is enabled
        example: true
        type: boolean
      defaultRegistry:
        properties:
          Hide:
            example: false
            type: boolean
        type: object
      edge:
        properties:
          CommandInterval:
            description: The command list interval for edge agent - used in edge async
              mode [seconds]
            example: 60
            type: integer
          PingInterval:
            description: The ping interval for edge agent - used in edge async mode
              [seconds]
            example: 60
            type: integer
          SnapshotInterval:
            description: The snapshot interval for edge agent - used in edge async
              mode [seconds]
            example: 60
            type: integer
          asyncMode:
            description: Whether the device has been started in edge async mode
            type: boolean
          checkinInterval:
            description: The check in interval for edge agent (in seconds) - used
              in non async mode [seconds]
            example: 60
            type: integer
        type: object
      kubeconfigExpiry:
        default: "0"
        description: The expiry of a Kubeconfig
        example: 24h
        type: string
    type: object
  settings.settingsUpdatePayload:
    properties:
      EdgePortainerURL:
        description: EdgePortainerURL is the URL that is exposed to edge agents
        type: string
      authenticationMethod:
        description: 'Active authentication method for the Portainer instance. Valid
          values are: 1 for internal, 2 for LDAP, or 3 for oauth'
        example: 1
        type: integer
      blackListedLabels:
        description: A list of label name & value that will be used to hide containers
          when querying containers
        items:
          $ref: '#/definitions/portaineree.Pair'
        type: array
      edge:
        properties:
          CommandInterval:
            description: The command list interval for edge agent - used in edge async
              mode (in seconds)
            example: 5
            type: integer
          PingInterval:
            description: The ping interval for edge agent - used in edge async mode
              (in seconds)
            example: 5
            type: integer
          SnapshotInterval:
            description: The snapshot interval for edge agent - used in edge async
              mode (in seconds)
            example: 5
            type: integer
          asyncMode:
            description: AsyncMode enables edge agent to run in async mode by default
            type: boolean
        type: object
      edgeAgentCheckinInterval:
        description: The default check in interval for edge agent (in seconds)
        example: 5
        type: integer
      enableEdgeComputeFeatures:
        description: Whether edge compute features are enabled
        example: true
        type: boolean
      enableTelemetry:
        description: Whether telemetry is enabled
        example: false
        type: boolean
      enforceEdgeID:
        description: EnforceEdgeID makes Portainer store the Edge ID instead of accepting
          anyone
        example: false
        type: boolean
      helmRepositoryURL:
        description: Helm repository URL
        example: https://charts.bitnami.com/bitnami
        type: string
      internalAuthSettings:
        $ref: '#/definitions/portaineree.InternalAuthSettings'
      kubeconfigExpiry:
        default: "0"
        description: The expiry of a Kubeconfig
        example: 24h
        type: string
      kubectlShellImage:
        description: "Kubec\ttl Shell Image Name/Tag"
        example: portainer/kubectl-shell:latest
        type: string
      ldapsettings:
        $ref: '#/definitions/portaineree.LDAPSettings'
      logoURL:
        description: URL to a logo that will be displayed on the login page as well
          as on top of the sidebar. Will use default Portainer logo when value is
          empty string
        example: https://mycompany.mydomain.tld/logo.png
        type: string
      oauthSettings:
        $ref: '#/definitions/portaineree.OAuthSettings'
      snapshotInterval:
        description: The interval in which environment(endpoint) snapshots are created
        example: 5m
        type: string
      templatesURL:
        description: URL to the templates that will be displayed in the UI when navigating
          to App Templates
        example: https://raw.githubusercontent.com/portainer/templates/master/templates.json
        type: string
      trustOnFirstConnect:
        description: TrustOnFirstConnect makes Portainer accepting edge agent connection
          by default
        example: false
        type: boolean
      userSessionTimeout:
        description: The duration of a user session
        example: 5m
        type: string
    type: object
  ssl.sslUpdatePayload:
    properties:
      cert:
        type: string
      httpenabled:
        type: boolean
      key:
        type: string
    type: object
  stacks.composeStackFromFileContentPayload:
    properties:
      env:
        description: A list of environment(endpoint) variables used during stack deployment
        items:
          $ref: '#/definitions/portaineree.Pair'
        type: array
      fromAppTemplate:
        description: Whether the stack is from a app template
        example: false
        type: boolean
      name:
        description: Name of the stack
        example: myStack
        type: string
      stackFileContent:
        description: Content of the Stack file
        example: |-
          version: 3
           services:
           web:
           image:nginx
        type: string
      webhook:
        description: A UUID to identify a webhook. The stack will be force updated
          and pull the latest image when the webhook was invoked.
        example: c11fdf23-183e-428a-9bb6-16db01032174
        type: string
    required:
    - name
    - stackFileContent
    type: object
  stacks.composeStackFromGitRepositoryPayload:
    properties:
      additionalFiles:
        description: Applicable when deploying with multiple stack files
        example:
        - '[nz.compose.yml'
        - ' uat.compose.yml]'
        items:
          type: string
        type: array
      autoUpdate:
        $ref: '#/definitions/portaineree.StackAutoUpdate'
        description: Optional auto update configuration
      composeFile:
        default: docker-compose.yml
        description: Path to the Stack file inside the Git repository
        example: docker-compose.yml
        type: string
      env:
        description: A list of environment(endpoint) variables used during stack deployment
        items:
          $ref: '#/definitions/portaineree.Pair'
        type: array
      fromAppTemplate:
        description: Whether the stack is from a app template
        example: false
        type: boolean
      name:
        description: Name of the stack
        example: myStack
        type: string
      repositoryAuthentication:
        description: Use basic authentication to clone the Git repository
        example: true
        type: boolean
      repositoryPassword:
        description: Password used in basic authentication. Required when RepositoryAuthentication
          is true.
        example: myGitPassword
        type: string
      repositoryReferenceName:
        description: Reference name of a Git repository hosting the Stack file
        example: refs/heads/master
        type: string
      repositoryURL:
        description: URL of a Git repository hosting the Stack file
        example: https://github.com/openfaas/faas
        type: string
      repositoryUsername:
        description: Username used in basic authentication. Required when RepositoryAuthentication
          is true.
        example: myGitUsername
        type: string
    required:
    - name
    - repositoryURL
    type: object
  stacks.stackFileResponse:
    properties:
      StackFileContent:
        description: Content of the Stack file
        example: |-
          version: 3
           services:
           web:
           image:nginx
        type: string
    type: object
  stacks.stackGitRedployPayload:
    properties:
      env:
        items:
          $ref: '#/definitions/portaineree.Pair'
        type: array
      prune:
        example: false
        type: boolean
      pullImage:
        description: Force a pulling to current image with the original tag though
          the image is already the latest
        example: false
        type: boolean
      repositoryAuthentication:
        type: boolean
      repositoryPassword:
        type: string
      repositoryReferenceName:
        type: string
      repositoryUsername:
        type: string
    type: object
  stacks.stackGitUpdatePayload:
    properties:
      autoUpdate:
        $ref: '#/definitions/portaineree.StackAutoUpdate'
      env:
        items:
          $ref: '#/definitions/portaineree.Pair'
        type: array
      prune:
        type: boolean
      repositoryAuthentication:
        type: boolean
      repositoryPassword:
        type: string
      repositoryReferenceName:
        type: string
      repositoryUsername:
        type: string
    type: object
  stacks.stackMigratePayload:
    properties:
      endpointID:
        example: 2
        type: integer
      name:
        example: new-stack
        type: string
      swarmID:
        example: jpofkc0i9uo9wtx1zesuk649w
        type: string
    required:
    - endpointID
    type: object
  stacks.swarmStackFromFileContentPayload:
    properties:
      env:
        description: A list of environment(endpoint) variables used during stack deployment
        items:
          $ref: '#/definitions/portaineree.Pair'
        type: array
      fromAppTemplate:
        description: Whether the stack is from a app template
        example: false
        type: boolean
      name:
        description: Name of the stack
        example: myStack
        type: string
      stackFileContent:
        description: Content of the Stack file
        example: |-
          version: 3
           services:
           web:
           image:nginx
        type: string
      swarmID:
        description: Swarm cluster identifier
        example: jpofkc0i9uo9wtx1zesuk649w
        type: string
      webhook:
        description: A UUID to identify a webhook. The stack will be force updated
          and pull the latest image when the webhook was invoked.
        example: c11fdf23-183e-428a-9bb6-16db01032174
        type: string
    required:
    - name
    - stackFileContent
    - swarmID
    type: object
  stacks.swarmStackFromGitRepositoryPayload:
    properties:
      additionalFiles:
        description: Applicable when deploying with multiple stack files
        example:
        - '[nz.compose.yml'
        - ' uat.compose.yml]'
        items:
          type: string
        type: array
      autoUpdate:
        $ref: '#/definitions/portaineree.StackAutoUpdate'
        description: Optional auto update configuration
      composeFile:
        default: docker-compose.yml
        description: Path to the Stack file inside the Git repository
        example: docker-compose.yml
        type: string
      env:
        description: A list of environment(endpoint) variables used during stack deployment
        items:
          $ref: '#/definitions/portaineree.Pair'
        type: array
      fromAppTemplate:
        description: Whether the stack is from a app template
        example: false
        type: boolean
      name:
        description: Name of the stack
        example: myStack
        type: string
      repositoryAuthentication:
        description: Use basic authentication to clone the Git repository
        example: true
        type: boolean
      repositoryPassword:
        description: Password used in basic authentication. Required when RepositoryAuthentication
          is true.
        example: myGitPassword
        type: string
      repositoryReferenceName:
        description: Reference name of a Git repository hosting the Stack file
        example: refs/heads/master
        type: string
      repositoryURL:
        description: URL of a Git repository hosting the Stack file
        example: https://github.com/openfaas/faas
        type: string
      repositoryUsername:
        description: Username used in basic authentication. Required when RepositoryAuthentication
          is true.
        example: myGitUsername
        type: string
      swarmID:
        description: Swarm cluster identifier
        example: jpofkc0i9uo9wtx1zesuk649w
        type: string
    required:
    - name
    - repositoryURL
    - swarmID
    type: object
  stacks.updateSwarmStackPayload:
    properties:
      env:
        description: A list of environment(endpoint) variables used during stack deployment
        items:
          $ref: '#/definitions/portaineree.Pair'
        type: array
      prune:
        description: Prune services that are no longer referenced (only available
          for Swarm stacks)
        example: true
        type: boolean
      pullImage:
        description: Force a pulling to current image with the original tag though
          the image is already the latest
        example: false
        type: boolean
      stackFileContent:
        description: New content of the Stack file
        example: |-
          version: 3
           services:
           web:
           image:nginx
        type: string
      webhook:
        description: A UUID to identify a webhook. The stack will be force updated
          and pull the latest image when the webhook was invoked.
        example: c11fdf23-183e-428a-9bb6-16db01032174
        type: string
    type: object
  status.BuildInfo:
    properties:
      buildNumber:
        type: string
      goVersion:
        type: string
      imageTag:
        type: string
      nodejsVersion:
        type: string
      webpackVersion:
        type: string
      yarnVersion:
        type: string
    type: object
  status.nodesCountResponse:
    properties:
      nodes:
        type: integer
    type: object
  status.status:
    properties:
      Version:
        description: Portainer API version
        example: 2.0.0
        type: string
      demoEnvironment:
        $ref: '#/definitions/demo.EnvironmentDetails'
      instanceID:
        description: Server Instance ID
        example: 299ab403-70a8-4c05-92f7-bf7a994d50df
        type: string
    type: object
  status.versionResponse:
    properties:
      LatestVersion:
        description: The latest version available
        example: 2.0.0
        type: string
      UpdateAvailable:
        description: Whether portainer has an update available
        example: false
        type: boolean
      build:
        $ref: '#/definitions/status.BuildInfo'
      databaseVersion:
        type: string
      serverVersion:
        type: string
    type: object
  tags.tagCreatePayload:
    properties:
      name:
        description: Name
        example: org/acme
        type: string
    required:
    - name
    type: object
  teammemberships.teamMembershipCreatePayload:
    properties:
      role:
        description: Role for the user inside the team (1 for leader and 2 for regular
          member)
        enum:
        - 1
        - 2
        example: 1
        type: integer
      teamID:
        description: Team identifier
        example: 1
        type: integer
      userID:
        description: User identifier
        example: 1
        type: integer
    required:
    - role
    - teamID
    - userID
    type: object
  teammemberships.teamMembershipUpdatePayload:
    properties:
      role:
        description: Role for the user inside the team (1 for leader and 2 for regular
          member)
        enum:
        - 1
        - 2
        example: 1
        type: integer
      teamID:
        description: Team identifier
        example: 1
        type: integer
      userID:
        description: User identifier
        example: 1
        type: integer
    required:
    - role
    - teamID
    - userID
    type: object
  teams.teamCreatePayload:
    properties:
      name:
        description: Name
        example: developers
        type: string
      teamLeaders:
        description: TeamLeaders
        example:
        - 3
        - 5
        items:
          description: User Identifier
          example: 1
          type: integer
        type: array
    required:
    - name
    type: object
  teams.teamUpdatePayload:
    properties:
      name:
        description: Name
        example: developers
        type: string
    type: object
  templates.filePayload:
    properties:
      composeFilePathInRepository:
        description: Path to the file inside the git repository
        example: ./subfolder/docker-compose.yml
        type: string
      repositoryURL:
        description: URL of a git repository where the file is stored
        example: https://github.com/portainer/portainer-compose
        type: string
    required:
    - composeFilePathInRepository
    - repositoryURL
    type: object
  templates.fileResponse:
    properties:
      fileContent:
        description: The requested file content
        type: string
    type: object
  templates.listResponse:
    properties:
      templates:
        items:
          $ref: '#/definitions/portaineree.Template'
        type: array
      version:
        type: string
    type: object
  types.Container:
    properties:
      Id:
        type: string
      command:
        type: string
      created:
        type: integer
      hostConfig:
        properties:
          networkMode:
            type: string
        type: object
      image:
        type: string
      imageID:
        type: string
      labels:
        additionalProperties:
          type: string
        type: object
      mounts:
        items:
          $ref: '#/definitions/types.MountPoint'
        type: array
      names:
        items:
          type: string
        type: array
      networkSettings:
        $ref: '#/definitions/types.SummaryNetworkSettings'
      ports:
        items:
          $ref: '#/definitions/types.Port'
        type: array
      sizeRootFs:
        type: integer
      sizeRw:
        type: integer
      state:
        type: string
      status:
        type: string
    type: object
  types.EnvironmentMetadata:
    properties:
      groupId:
        description: Environment(Endpoint) group identifier
        type: integer
      tagIds:
        items:
          description: Tag identifier
          example: 1
          type: integer
        type: array
    type: object
  types.MountPoint:
    properties:
      destination:
        type: string
      driver:
        type: string
      mode:
        type: string
      name:
        type: string
      propagation:
        type: string
      rw:
        type: boolean
      source:
        type: string
      type:
        type: string
    type: object
  types.Port:
    properties:
      IP:
        description: Host IP address that the container's port is mapped to
        type: string
      PrivatePort:
        description: |-
          Port on the container
          Required: true
        type: integer
      PublicPort:
        description: Port exposed on the host
        type: integer
      Type:
        description: |-
          type
          Required: true
        type: string
    type: object
  types.ServiceUpdateResponse:
    properties:
      Warnings:
        description: Optional warning messages
        items:
          type: string
        type: array
    type: object
  types.SummaryNetworkSettings:
    properties:
      networks:
        additionalProperties:
          $ref: '#/definitions/network.EndpointSettings'
        type: object
    type: object
  useractivity.logsListResponse:
    properties:
      logs:
        items:
          $ref: '#/definitions/portaineree.UserActivityLog'
        type: array
      totalCount:
        type: integer
    type: object
  users.accessTokenResponse:
    properties:
      apiKey:
        $ref: '#/definitions/portaineree.APIKey'
      rawAPIKey:
        type: string
    type: object
  users.adminInitPayload:
    properties:
      password:
        description: Password for the admin user
        example: admin-password
        type: string
      username:
        description: Username for the admin user
        example: admin
        type: string
    required:
    - password
    - username
    type: object
  users.namespaceMapping:
    additionalProperties:
      additionalProperties:
        $ref: '#/definitions/portaineree.Authorizations'
      type: object
    type: object
  users.userAccessTokenCreatePayload:
    properties:
      description:
        example: github-api-key
        type: string
    required:
    - description
    type: object
  users.userCreatePayload:
    properties:
      password:
        example: cg9Wgky3
        type: string
      role:
        description: User role (1 for administrator account and 2 for regular account)
        enum:
        - 1
        - 2
        example: 2
        type: integer
      username:
        example: bob
        type: string
    required:
    - password
    - role
    - username
    type: object
  users.userUpdatePasswordPayload:
    properties:
      newPassword:
        description: New Password
        example: new_passwd
        type: string
      password:
        description: Current Password
        example: passwd
        type: string
    required:
    - newPassword
    - password
    type: object
  users.userUpdatePayload:
    properties:
      password:
        example: cg9Wgky3
        type: string
      role:
        description: User role (1 for administrator account and 2 for regular account)
        enum:
        - 1
        - 2
        example: 2
        type: integer
      userTheme:
        example: dark
        type: string
      username:
        example: bob
        type: string
    required:
    - password
    - role
    - username
    type: object
  webhooks.webhookCreatePayload:
    properties:
      endpointID:
        type: integer
      registryID:
        description: Registry Identifier
        example: 1
        type: integer
      resourceID:
        type: string
      webhookType:
        type: integer
    type: object
  webhooks.webhookUpdatePayload:
    properties:
      registryID:
        description: Registry Identifier
        type: integer
    type: object
info:
  contact:
    email: info@portainer.io
  description: |
    Portainer API is an HTTP API served by Portainer. It is used by the Portainer UI and everything you can do with the UI can be done using the HTTP API.
    Examples are available at https://documentation.portainer.io/api/api-examples/
    You can find out more about Portainer at [http://portainer.io](http://portainer.io) and get some support on [Slack](http://portainer.io/slack/).

    # Authentication

    Most of the API environments(endpoints) require to be authenticated as well as some level of authorization to be used.
    Portainer API uses JSON Web Token to manage authentication and thus requires you to provide a token in the **Authorization** header of each request
    with the **Bearer** authentication mechanism.

    Example:

    ```
    Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJhZG1pbiIsInJvbGUiOjEsImV4cCI6MTQ5OTM3NjE1NH0.NJ6vE8FY1WG6jsRQzfMqeatJ4vh2TWAeeYfDhP71YEE
    ```

    # Security

    Each API environment(endpoint) has an associated access policy, it is documented in the description of each environment(endpoint).

    Different access policies are available:

    - Public access
    - Authenticated access
    - Restricted access
    - Administrator access

    ### Public access

    No authentication is required to access the environments(endpoints) with this access policy.

    ### Authenticated access

    Authentication is required to access the environments(endpoints) with this access policy.

    ### Restricted access

    Authentication is required to access the environments(endpoints) with this access policy.
    Extra-checks might be added to ensure access to the resource is granted. Returned data might also be filtered.

    ### Administrator access

    Authentication as well as an administrator role are required to access the environments(endpoints) with this access policy.

    # Execute Docker requests

    Portainer **DO NOT** expose specific environments(endpoints) to manage your Docker resources (create a container, remove a volume, etc...).

    Instead, it acts as a reverse-proxy to the Docker HTTP API. This means that you can execute Docker requests **via** the Portainer HTTP API.

    To do so, you can use the `/endpoints/{id}/docker` Portainer API environment(endpoint) (which is not documented below due to Swagger limitations). This environment(endpoint) has a restricted access policy so you still need to be authenticated to be able to query this environment(endpoint). Any query on this environment(endpoint) will be proxied to the Docker API of the associated environment(endpoint) (requests and responses objects are the same as documented in the Docker API).

    # Private Registry

    Using private registry, you will need to pass a based64 encoded JSON string ‘{"registryId":\<registryID value\>}’ inside the Request Header. The parameter name is "X-Registry-Auth".
    \<registryID value\> - The registry ID where the repository was created.

    Example:

    ```
    eyJyZWdpc3RyeUlkIjoxfQ==
    ```

    **NOTE**: You can find more information on how to query the Docker API in the [Docker official documentation](https://docs.docker.com/engine/api/v1.30/) as well as in [this Portainer example](https://documentation.portainer.io/api/api-examples/).
  title: PortainerEE API
  version: 2.15.1
paths:
  /auth:
    post:
      consumes:
      - application/json
      description: |-
        **Access policy**: public
        Use this environment(endpoint) to authenticate against Portainer using a username and password.
      operationId: AuthenticateUser
      parameters:
      - description: Credentials used for authentication
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/auth.authenticatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/auth.authenticateResponse'
        "400":
          description: Invalid request
        "422":
          description: Invalid Credentials
        "500":
          description: Server error
      summary: Authenticate
      tags:
      - auth
  /auth/logout:
    post:
      description: '**Access policy**: authenticated'
      operationId: Logout
      responses:
        "204":
          description: Success
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Logout
      tags:
      - auth
  /auth/oauth/validate:
    post:
      consumes:
      - application/json
      description: '**Access policy**: public'
      operationId: ValidateOAuth
      parameters:
      - description: OAuth Credentials used for authentication
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/auth.oauthPayload'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/auth.authenticateResponse'
        "400":
          description: Invalid request
        "422":
          description: Invalid Credentials
        "500":
          description: Server error
      summary: Authenticate with OAuth
      tags:
      - auth
  /backup:
    post:
      consumes:
      - application/json
      description: |-
        Creates an archive with a system data snapshot that could be used to restore the system.
        **Access policy**: admin
      operationId: Backup
      parameters:
      - description: An object contains the password to encrypt the backup with
        in: body
        name: body
        schema:
          $ref: '#/definitions/backup.backupPayload'
      produces:
      - application/octet-stream
      responses:
        "200":
          description: Success
        "400":
          description: Invalid request
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Creates an archive with a system data snapshot that could be used to
        restore the system.
      tags:
      - backup
  /backup/s3/execute:
    post:
      consumes:
      - application/json
      description: |-
        Creates an archive with a system data snapshot and upload it to the target S3 bucket
        **Access policy**: administrator
      operationId: BackupToS3
      parameters:
      - description: S3 backup settings
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/backup.s3BackupPayload'
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Execute backup to AWS S3 Bucket
      tags:
      - backup
  /backup/s3/restore:
    post:
      consumes:
      - application/json
      description: |-
        Triggers a system restore using details of s3 backup
        **Access policy**: public
      operationId: RestoreFromS3
      parameters:
      - description: S3 Location Payload
        in: body
        name: body
        schema:
          $ref: '#/definitions/backup.restoreS3Settings'
      responses:
        "200":
          description: Success
        "400":
          description: Invalid request
        "500":
          description: Server error
      summary: Triggers a system restore using details of s3 backup
      tags:
      - backup
  /backup/s3/settings:
    get:
      description: '**Access policy**: administrator'
      operationId: BackupSettingsFetch
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portaineree.S3BackupSettings'
        "401":
          description: Unauthorized
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Fetch s3 backup settings/configurations
      tags:
      - backup
    post:
      consumes:
      - application/json
      description: |-
        Updates stored s3 backup settings and updates running cron jobs as needed
        **Access policy**: administrator
      operationId: UpdateS3Settings
      parameters:
      - description: S3 backup settings
        in: body
        name: s3_backup_settings
        schema:
          $ref: '#/definitions/portaineree.S3BackupSettings'
      responses:
        "200":
          description: Success
        "400":
          description: Invalid request
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Updates stored s3 backup settings and updates running cron jobs as
        needed
      tags:
      - backup
  /backup/s3/status:
    get:
      description: '**Access policy**: public'
      operationId: BackupStatusFetch
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/backup.backupStatus'
        "500":
          description: Server error
      summary: Fetch the status of the last scheduled backup run
      tags:
      - backup
  /cloud:
    post:
      description: |-
        The information returned can be used to provision a KaaS cluster.
        **Access policy**: administrator
      operationId: kaasProviderInfo
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "400":
          description: Invalid request
        "500":
          description: Server error
        "503":
          description: Missing configuration
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Returns information about a Cloud provider.
      tags:
      - kaas
  /cloud/{provider}:
    post:
      consumes:
      - application/json
      description: |-
        Provision a new KaaS cluster and create an environment.
        **Access policy**: administrator
      operationId: provisionKaaSCluster
      parameters:
      - description: Provider
        in: path
        name: provider
        required: true
        type: integer
      - description: KaaS cluster provisioning details (required when provider is
          azure)
        in: body
        name: body_azure
        schema:
          $ref: '#/definitions/providers.AzureProvisionPayload'
      - description: KaaS cluster provisioning details (required when provider is
          gke)
        in: body
        name: body_gke
        schema:
          $ref: '#/definitions/providers.GKEProvisionPayload'
      - description: KaaS cluster provisioning details (required when provider is
          amazon)
        in: body
        name: body_amazon
        schema:
          $ref: '#/definitions/providers.AmazonProvisionPayload'
      - description: KaaS cluster provisioning details (required when provider is
          civo, digitalocean or linode)
        in: body
        name: body_api
        schema:
          $ref: '#/definitions/providers.DefaultProvisionPayload'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portaineree.Endpoint'
        "400":
          description: Invalid request
        "500":
          description: Server error
        "503":
          description: Missing configuration
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Provision a new KaaS cluster and create an environment
      tags:
      - kaas
  /cloudcredentials:
    get:
      description: |-
        getByID gets a cloud credential by ID
        **Access policy**: authenticated
      operationId: getByID
      parameters:
      - description: ID of the cloud credential
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CloudCredential'
        "400":
          description: Invalid request
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: getByID gets a cloud credential by ID
      tags:
      - cloud_credentials
    post:
      consumes:
      - application/json
      - multipart/form-data
      description: |-
        Create a cloud credential
        **Access policy**: authenticated
      operationId: Create
      parameters:
      - description: cloud provider such as aws, aks, civo, digitalocean, etc.
        in: formData
        name: provider
        required: true
        type: string
      - description: name of the credentials such as rnd-test-credential
        in: formData
        name: name
        required: true
        type: string
      - description: credentials in json format
        in: formData
        name: credentials
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CloudCredential'
        "400":
          description: Invalid request
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Create a cloud credential
      tags:
      - cloud_credentials
    put:
      consumes:
      - application/json
      - multipart/form-data
      description: |-
        Update a cloud credential
        **Access policy**: authenticated
      operationId: Update
      parameters:
      - description: cloud provider such as aws, aks, civo, digitalocean, etc.
        in: formData
        name: provider
        required: true
        type: string
      - description: name of the credentials such as rnd-test-credential
        in: formData
        name: name
        required: true
        type: string
      - description: credentials in json format
        in: formData
        name: credentials
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CloudCredential'
        "400":
          description: Invalid request
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Update a cloud credential
      tags:
      - cloud_credentials
  /custom_templates:
    get:
      description: |-
        List available custom templates.
        **Access policy**: authenticated
      operationId: CustomTemplateList
      parameters:
      - description: Template types
        in: query
        items:
          enum:
          - 1
          - 2
          - 3
          type: integer
        name: type
        required: true
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: '#/definitions/portaineree.CustomTemplate'
            type: array
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: List available custom templates
      tags:
      - custom_templates
    post:
      consumes:
      - application/json
      - multipart/form-data
      description: |-
        Create a custom template.
        **Access policy**: authenticated
      operationId: CustomTemplateCreate
      parameters:
      - description: method for creating template
        enum:
        - string
        - file
        - repository
        in: query
        name: method
        required: true
        type: string
      - description: Required when using method=string
        in: body
        name: body_string
        schema:
          $ref: '#/definitions/customtemplates.customTemplateFromFileContentPayload'
      - description: Required when using method=repository
        in: body
        name: body_repository
        schema:
          $ref: '#/definitions/customtemplates.customTemplateFromGitRepositoryPayload'
      - description: Title of the template. required when method is file
        in: formData
        name: Title
        type: string
      - description: Description of the template. required when method is file
        in: formData
        name: Description
        type: string
      - description: A note that will be displayed in the UI. Supports HTML content
        in: formData
        name: Note
        type: string
      - description: Platform associated to the template (1 - 'linux', 2 - 'windows').
          required when method is file
        enum:
        - 1
        - 2
        in: formData
        name: Platform
        type: integer
      - description: Type of created stack (1 - swarm, 2 - compose), required when
          method is file
        enum:
        - 1
        - 2
        in: formData
        name: Type
        type: integer
      - description: required when method is file
        in: formData
        name: file
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portaineree.CustomTemplate'
        "400":
          description: Invalid request
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Create a custom template
      tags:
      - custom_templates
  /custom_templates/{id}:
    delete:
      description: |-
        Remove a template.
        **Access policy**: authenticated
      operationId: CustomTemplateDelete
      parameters:
      - description: Template identifier
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Access denied to resource
        "404":
          description: Template not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Remove a template
      tags:
      - custom_templates
    get:
      description: |-
        Retrieve details about a template.
        **Access policy**: authenticated
      operationId: CustomTemplateInspect
      parameters:
      - description: Template identifier
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portaineree.CustomTemplate'
        "400":
          description: Invalid request
        "404":
          description: Template not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Inspect a custom template
      tags:
      - custom_templates
    put:
      consumes:
      - application/json
      description: |-
        Update a template.
        **Access policy**: authenticated
      operationId: CustomTemplateUpdate
      parameters:
      - description: Template identifier
        in: path
        name: id
        required: true
        type: integer
      - description: Template details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/customtemplates.customTemplateUpdatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portaineree.CustomTemplate'
        "400":
          description: Invalid request
        "403":
          description: Permission denied to access template
        "404":
          description: Template not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Update a template
      tags:
      - custom_templates
  /custom_templates/{id}/file:
    get:
      description: |-
        Retrieve the content of the Stack file for the specified custom template
        **Access policy**: authenticated
      operationId: CustomTemplateFile
      parameters:
      - description: Template identifier
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/customtemplates.fileResponse'
        "400":
          description: Invalid request
        "404":
          description: Custom template not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Get Template stack file content.
      tags:
      - custom_templates
  /docker/{environmentId}/containers/{containerId}/gpus:
    get:
      consumes:
      - application/json
      description: '**Access policy**:'
      operationId: dockerContainerGpusInspect
      parameters:
      - description: Environment identifier
        in: path
        name: environmentId
        required: true
        type: integer
      - description: Container identifier
        in: path
        name: containerId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/containers.containerGpusResponse'
        "400":
          description: Bad request
        "404":
          description: Environment or container not found
        "500":
          description: Internal server error
      security:
      - jwt: []
      summary: Fetch container gpus data
      tags:
      - docker
  /docker/{environmentId}/snapshot/container/{containerId}:
    get:
      consumes:
      - application/json
      description: '**Access policy**:'
      operationId: snapshotContainerInspect
      parameters:
      - description: Environment identifier
        in: path
        name: environmentId
        required: true
        type: integer
      - description: Edge stack identifier, will return only containers for this edge
          stack
        in: query
        name: edgeStackId
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: '#/definitions/types.Container'
            type: array
        "404":
          description: Environment not found
      security:
      - jwt: []
      summary: Fetch container from a snapshot
      tags:
      - endpoints
      - docker
  /docker/{environmentId}/snapshot/containers:
    get:
      consumes:
      - application/json
      description: '**Access policy**:'
      operationId: snapshotContainersList
      parameters:
      - description: Environment identifier
        in: path
        name: environmentId
        required: true
        type: integer
      - description: Edge stack identifier, will return only containers for this edge
          stack
        in: query
        name: edgeStackId
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/types.Container'
        "404":
          description: Environment not found
      security:
      - jwt: []
      summary: Fetch containers list from a snapshot
      tags:
      - endpoints
      - docker
  /edge_groups:
    get:
      description: '**Access policy**: administrator'
      operationId: EdgeGroupList
      produces:
      - application/json
      responses:
        "200":
          description: EdgeGroups
          schema:
            items:
              $ref: '#/definitions/edgegroups.decoratedEdgeGroup'
            type: array
        "500":
          description: Internal Server Error
        "503":
          description: Edge compute features are disabled
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: list EdgeGroups
      tags:
      - edge_groups
    post:
      consumes:
      - application/json
      description: '**Access policy**: administrator'
      operationId: EdgeGroupCreate
      parameters:
      - description: EdgeGroup data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/edgegroups.edgeGroupCreatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portaineree.EdgeGroup'
        "500":
          description: Internal Server Error
        "503":
          description: Edge compute features are disabled
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Create an EdgeGroup
      tags:
      - edge_groups
  /edge_groups/{id}:
    delete:
      description: '**Access policy**: administrator'
      operationId: EdgeGroupDelete
      parameters:
      - description: EdgeGroup Id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "500":
          description: Internal Server Error
        "503":
          description: Edge compute features are disabled
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Deletes an EdgeGroup
      tags:
      - edge_groups
    get:
      description: '**Access policy**: administrator'
      operationId: EdgeGroupInspect
      parameters:
      - description: EdgeGroup Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portaineree.EdgeGroup'
        "500":
          description: Internal Server Error
        "503":
          description: Edge compute features are disabled
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Inspects an EdgeGroup
      tags:
      - edge_groups
    put:
      consumes:
      - application/json
      description: '**Access policy**: administrator'
      operationId: EgeGroupUpdate
      parameters:
      - description: EdgeGroup Id
        in: path
        name: id
        required: true
        type: integer
      - description: EdgeGroup data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/edgegroups.edgeGroupUpdatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portaineree.EdgeGroup'
        "500":
          description: Internal Server Error
        "503":
          description: Edge compute features are disabled
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Updates an EdgeGroup
      tags:
      - edge_groups
  /edge_jobs:
    get:
      description: '**Access policy**: administrator'
      operationId: EdgeJobList
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/portaineree.EdgeJob'
            type: array
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
        "503":
          description: Edge compute features are disabled
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Fetch EdgeJobs list
      tags:
      - edge_jobs
    post:
      description: '**Access policy**: administrator'
      operationId: EdgeJobCreate
      parameters:
      - description: Creation Method
        enum:
        - file
        - string
        in: query
        name: method
        required: true
        type: string
      - description: EdgeGroup data when method is string
        in: body
        name: body_string
        required: true
        schema:
          $ref: '#/definitions/edgejobs.edgeJobCreateFromFileContentPayload'
      - description: EdgeGroup data when method is file
        in: body
        name: body_file
        required: true
        schema:
          $ref: '#/definitions/edgejobs.edgeJobCreateFromFilePayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portaineree.EdgeGroup'
        "500":
          description: Internal Server Error
        "503":
          description: Edge compute features are disabled
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Create an EdgeJob
      tags:
      - edge_jobs
  /edge_jobs/{id}:
    delete:
      description: '**Access policy**: administrator'
      operationId: EdgeJobDelete
      parameters:
      - description: EdgeJob Id
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
        "503":
          description: Edge compute features are disabled
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Delete an EdgeJob
      tags:
      - edge_jobs
    get:
      description: '**Access policy**: administrator'
      operationId: EdgeJobInspect
      parameters:
      - description: EdgeJob Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portaineree.EdgeJob'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
        "503":
          description: Edge compute features are disabled
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Inspect an EdgeJob
      tags:
      - edge_jobs
    post:
      consumes:
      - application/json
      description: '**Access policy**: administrator'
      operationId: EdgeJobUpdate
      parameters:
      - description: EdgeJob Id
        in: path
        name: id
        required: true
        type: string
      - description: EdgeGroup data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/edgejobs.edgeJobUpdatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portaineree.EdgeJob'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
        "503":
          description: Edge compute features are disabled
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Update an EdgeJob
      tags:
      - edge_jobs
  /edge_jobs/{id}/file:
    get:
      description: '**Access policy**: administrator'
      operationId: EdgeJobFile
      parameters:
      - description: EdgeJob Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/edgejobs.edgeJobFileResponse'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
        "503":
          description: Edge compute features are disabled
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Fetch a file of an EdgeJob
      tags:
      - edge_jobs
  /edge_jobs/{id}/tasks:
    get:
      description: '**Access policy**: administrator'
      operationId: EdgeJobTasksList
      parameters:
      - description: EdgeJob Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/edgejobs.taskContainer'
            type: array
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
        "503":
          description: Edge compute features are disabled
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Fetch the list of tasks on an EdgeJob
      tags:
      - edge_jobs
  /edge_jobs/{id}/tasks/{taskID}/logs:
    delete:
      description: '**Access policy**: administrator'
      operationId: EdgeJobTasksClear
      parameters:
      - description: EdgeJob Id
        in: path
        name: id
        required: true
        type: string
      - description: Task Id
        in: path
        name: taskID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
        "503":
          description: Edge compute features are disabled
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Clear the log for a specifc task on an EdgeJob
      tags:
      - edge_jobs
    get:
      description: '**Access policy**: administrator'
      operationId: EdgeJobTaskLogsInspect
      parameters:
      - description: EdgeJob Id
        in: path
        name: id
        required: true
        type: string
      - description: Task Id
        in: path
        name: taskID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/edgejobs.fileResponse'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
        "503":
          description: Edge compute features are disabled
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Fetch the log for a specifc task on an EdgeJob
      tags:
      - edge_jobs
    post:
      description: '**Access policy**: administrator'
      operationId: EdgeJobTasksCollect
      parameters:
      - description: EdgeJob Id
        in: path
        name: id
        required: true
        type: string
      - description: Task Id
        in: path
        name: taskID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
        "503":
          description: Edge compute features are disabled
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Collect the log for a specifc task on an EdgeJob
      tags:
      - edge_jobs
  /edge_stacks:
    get:
      description: '**Access policy**: administrator'
      operationId: EdgeStackList
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/portaineree.EdgeStack'
            type: array
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
        "503":
          description: Edge compute features are disabled
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Fetches the list of EdgeStacks
      tags:
      - edge_stacks
    post:
      description: '**Access policy**: administrator'
      operationId: EdgeStackCreate
      parameters:
      - description: Creation Method
        enum:
        - file
        - string
        - repository
        in: query
        name: method
        required: true
        type: string
      - description: Required when using method=string
        in: body
        name: body_string
        required: true
        schema:
          $ref: '#/definitions/edgestacks.swarmStackFromFileContentPayload'
      - description: Required when using method=file
        in: body
        name: body_file
        required: true
        schema:
          $ref: '#/definitions/edgestacks.swarmStackFromFileUploadPayload'
      - description: Required when using method=repository
        in: body
        name: body_repository
        required: true
        schema:
          $ref: '#/definitions/edgestacks.swarmStackFromGitRepositoryPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portaineree.EdgeStack'
        "500":
          description: Internal Server Error
        "503":
          description: Edge compute features are disabled
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Create an EdgeStack
      tags:
      - edge_stacks
  /edge_stacks/{id}:
    delete:
      description: '**Access policy**: administrator'
      operationId: EdgeStackDelete
      parameters:
      - description: EdgeStack Id
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
        "503":
          description: Edge compute features are disabled
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Delete an EdgeStack
      tags:
      - edge_stacks
    get:
      description: '**Access policy**: administrator'
      operationId: EdgeStackInspect
      parameters:
      - description: EdgeStack Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portaineree.EdgeStack'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
        "503":
          description: Edge compute features are disabled
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Inspect an EdgeStack
      tags:
      - edge_stacks
    put:
      consumes:
      - application/json
      description: '**Access policy**: administrator'
      operationId: EdgeStackUpdate
      parameters:
      - description: EdgeStack Id
        in: path
        name: id
        required: true
        type: string
      - description: EdgeStack data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/edgestacks.updateEdgeStackPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portaineree.EdgeStack'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
        "503":
          description: Edge compute features are disabled
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Update an EdgeStack
      tags:
      - edge_stacks
  /edge_stacks/{id}/file:
    get:
      description: '**Access policy**: administrator'
      operationId: EdgeStackFile
      parameters:
      - description: EdgeStack Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/edgestacks.stackFileResponse'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
        "503":
          description: Edge compute features are disabled
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Fetches the stack file for an EdgeStack
      tags:
      - edge_stacks
  /edge_stacks/{id}/logs/{endpoint_id}:
    delete:
      description: '**Access policy**: administrator'
      operationId: EdgeStackLogsDelete
      parameters:
      - description: EdgeStack Id
        in: path
        name: id
        required: true
        type: string
      - description: Endpoint Id
        in: path
        name: endpoint_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "503":
          description: Edge compute features are disabled
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Deletes the available logs for a given edge stack and endpoint
      tags:
      - edge_stacks
    get:
      description: '**Access policy**: administrator'
      operationId: EdgeStackLogsStatusGet
      parameters:
      - description: EdgeStack Id
        in: path
        name: id
        required: true
        type: string
      - description: Environment Id
        in: path
        name: endpoint_id
        required: true
        type: string
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
        "503":
          description: Edge compute features are disabled
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Gets the status of the log collection for a given edgestack and environment
      tags:
      - edge_stacks
    put:
      description: '**Access policy**: administrator'
      operationId: EdgeStackLogsCollect
      parameters:
      - description: EdgeStack Id
        in: path
        name: id
        required: true
        type: string
      - description: Environment Id
        in: path
        name: endpoint_id
        required: true
        type: string
      - description: Number of lines to request for the logs
        in: query
        name: tail
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        "503":
          description: Edge compute features are disabled
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Schedule the collection of logs for a given endpoint and edge stack
      tags:
      - edge_stacks
  /edge_stacks/{id}/status:
    put:
      consumes:
      - application/json
      description: Authorized only if the request is done by an Edge Environment(Endpoint)
      operationId: EdgeStackStatusUpdate
      parameters:
      - description: EdgeStack Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portaineree.EdgeStack'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Update an EdgeStack status
      tags:
      - edge_stacks
  /edge_stacks/{id}/status/{endpoint_id}:
    delete:
      description: Authorized only if the request is done by an Edge Environment(Endpoint)
      operationId: EdgeStackStatusDelete
      parameters:
      - description: EdgeStack Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portaineree.EdgeStack'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Delete an EdgeStack status
      tags:
      - edge_stacks
  /edge_templates:
    get:
      consumes:
      - application/json
      description: '**Access policy**: administrator'
      operationId: EdgeTemplateList
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/portaineree.Template'
            type: array
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Fetches the list of Edge Templates
      tags:
      - edge_templates
  /endpoint_groups:
    get:
      description: |-
        List all environment(endpoint) groups based on the current user authorizations. Will
        return all environment(endpoint) groups if using an administrator account otherwise it will
        only return authorized environment(endpoint) groups.
        **Access policy**: restricted
      operationId: EndpointGroupList
      produces:
      - application/json
      responses:
        "200":
          description: Environment(Endpoint) group
          schema:
            items:
              $ref: '#/definitions/portaineree.EndpointGroup'
            type: array
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: List Environment(Endpoint) groups
      tags:
      - endpoint_groups
    post:
      consumes:
      - application/json
      description: |-
        Create a new environment(endpoint) group.
        **Access policy**: administrator
      parameters:
      - description: Environment(Endpoint) Group details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/endpointgroups.endpointGroupCreatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portaineree.EndpointGroup'
        "400":
          description: Invalid request
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Create an Environment(Endpoint) Group
      tags:
      - endpoint_groups
  /endpoint_groups/{id}:
    delete:
      description: |-
        Remove an environment(endpoint) group.
        **Access policy**: administrator
      operationId: EndpointGroupDelete
      parameters:
      - description: EndpointGroup identifier
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "404":
          description: EndpointGroup not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Remove an environment(endpoint) group
      tags:
      - endpoint_groups
    get:
      consumes:
      - application/json
      description: |-
        Retrieve details abont an environment(endpoint) group.
        **Access policy**: administrator
      parameters:
      - description: Environment(Endpoint) group identifier
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portaineree.EndpointGroup'
        "400":
          description: Invalid request
        "404":
          description: EndpointGroup not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Inspect an Environment(Endpoint) group
      tags:
      - endpoint_groups
    put:
      consumes:
      - application/json
      description: |-
        Update an environment(endpoint) group.
        **Access policy**: administrator
      operationId: EndpointGroupUpdate
      parameters:
      - description: EndpointGroup identifier
        in: path
        name: id
        required: true
        type: integer
      - description: EndpointGroup details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/endpointgroups.endpointGroupUpdatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portaineree.EndpointGroup'
        "400":
          description: Invalid request
        "404":
          description: EndpointGroup not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Update an environment(endpoint) group
      tags:
      - endpoint_groups
  /endpoint_groups/{id}/endpoints/{endpointId}:
    delete:
      description: '**Access policy**: administrator'
      operationId: EndpointGroupDeleteEndpoint
      parameters:
      - description: EndpointGroup identifier
        in: path
        name: id
        required: true
        type: integer
      - description: Environment(Endpoint) identifier
        in: path
        name: endpointId
        required: true
        type: integer
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "404":
          description: EndpointGroup not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Removes environment(endpoint) from an environment(endpoint) group
      tags:
      - endpoint_groups
    put:
      description: |-
        Add an environment(endpoint) to an environment(endpoint) group
        **Access policy**: administrator
      operationId: EndpointGroupAddEndpoint
      parameters:
      - description: EndpointGroup identifier
        in: path
        name: id
        required: true
        type: integer
      - description: Environment(Endpoint) identifier
        in: path
        name: endpointId
        required: true
        type: integer
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "404":
          description: EndpointGroup not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Add an environment(endpoint) to an environment(endpoint) group
      tags:
      - endpoint_groups
  /endpoints:
    get:
      description: |-
        List all environments(endpoints) based on the current user authorizations. Will
        return all environments(endpoints) if using an administrator or team leader account otherwise it will
        only return authorized environments(endpoints).
        **Access policy**: restricted
      operationId: EndpointList
      parameters:
      - description: Start searching from
        in: query
        name: start
        type: integer
      - description: Limit results to this value
        in: query
        name: limit
        type: integer
      - description: Sort results by this value
        in: query
        name: sort
        type: integer
      - description: Order sorted results by desc/asc
        in: query
        name: order
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      - description: List environments(endpoints) of these groups
        in: query
        items:
          type: integer
        name: groupIds
        type: array
      - description: List environments(endpoints) by this status
        in: query
        items:
          type: integer
        name: status
        type: array
      - description: List environments(endpoints) of this type
        in: query
        items:
          type: integer
        name: types
        type: array
      - description: search environments(endpoints) with these tags (depends on tagsPartialMatch)
        in: query
        items:
          type: integer
        name: tagIds
        type: array
      - description: If true, will return environment(endpoint) which has one of tagIds,
          if false (or missing) will return only environments(endpoints) that has
          all the tags
        in: query
        name: tagsPartialMatch
        type: boolean
      - description: will return only these environments(endpoints)
        in: query
        items:
          type: integer
        name: endpointIds
        type: array
      - description: If true, will return environment(endpoint) that were provisioned
        in: query
        name: provisioned
        type: boolean
      - description: will return only environments with on of these agent versions
        in: query
        items:
          type: string
        name: agentVersions
        type: array
      - description: if exists true show only edge devices, false show only regular
          edge endpoints. if missing, will show both types (relevant only for edge
          endpoints)
        in: query
        name: edgeDevice
        type: boolean
      - description: if true, show only untrusted endpoints, if false show only trusted
          (relevant only for edge devices, and if edgeDevice is true)
        in: query
        name: edgeDeviceUntrusted
        type: boolean
      - description: will return only environments(endpoints) with this name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Endpoints
          schema:
            items:
              $ref: '#/definitions/portaineree.Endpoint'
            type: array
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: List environments(endpoints)
      tags:
      - endpoints
    post:
      consumes:
      - multipart/form-data
      description: |-
        Create a new environment(endpoint) that will be used to manage an environment(endpoint).
        **Access policy**: administrator
      operationId: EndpointCreate
      parameters:
      - description: 'Name that will be used to identify this environment(endpoint)
          (example: my-environment)'
        in: formData
        name: Name
        required: true
        type: string
      - description: 'Environment(Endpoint) type. Value must be one of: 1 (Local Docker
          environment), 2 (Agent environment), 3 (Azure environment), 4 (Edge agent
          environment) or 5 (Local Kubernetes Environment'
        in: formData
        name: EndpointCreationType
        required: true
        type: integer
      - description: 'URL or IP address of a Docker host (example: docker.mydomain.tld:2375).
          Defaults to local if not specified (Linux: /var/run/docker.sock, Windows:
          //./pipe/docker_engine)'
        in: formData
        name: URL
        type: string
      - description: 'URL or IP address where exposed containers will be reachable.
          Defaults to URL if not specified (example: docker.mydomain.tld:2375)'
        in: formData
        name: PublicURL
        type: string
      - description: Environment(Endpoint) group identifier. If not specified will
          default to 1 (unassigned).
        in: formData
        name: GroupID
        type: integer
      - description: Require TLS to connect against this environment(endpoint)
        in: formData
        name: TLS
        type: boolean
      - description: Skip server verification when using TLS
        in: formData
        name: TLSSkipVerify
        type: boolean
      - description: Skip client verification when using TLS
        in: formData
        name: TLSSkipClientVerify
        type: boolean
      - description: TLS CA certificate file
        in: formData
        name: TLSCACertFile
        type: file
      - description: TLS client certificate file
        in: formData
        name: TLSCertFile
        type: file
      - description: TLS client key file
        in: formData
        name: TLSKeyFile
        type: file
      - description: Azure application ID. Required if environment(endpoint) type
          is set to 3
        in: formData
        name: AzureApplicationID
        type: string
      - description: Azure tenant ID. Required if environment(endpoint) type is set
          to 3
        in: formData
        name: AzureTenantID
        type: string
      - description: Azure authentication key. Required if environment(endpoint) type
          is set to 3
        in: formData
        name: AzureAuthenticationKey
        type: string
      - description: List of tag identifiers to which this environment(endpoint) is
          associated
        in: formData
        items:
          type: integer
        name: TagIDs
        type: array
      - description: The check in interval for edge agent (in seconds)
        in: formData
        name: EdgeCheckinInterval
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portaineree.Endpoint'
        "400":
          description: Invalid request
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Create a new environment(endpoint)
      tags:
      - endpoints
  /endpoints/{id}:
    delete:
      description: |-
        Remove an environment(endpoint).
        **Access policy**: administrator
      operationId: EndpointDelete
      parameters:
      - description: Environment(Endpoint) identifier
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "404":
          description: Environment(Endpoint) not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Remove an environment(endpoint)
      tags:
      - endpoints
    get:
      description: |-
        Retrieve details about an environment(endpoint).
        **Access policy**: restricted
      operationId: EndpointInspect
      parameters:
      - description: Environment(Endpoint) identifier
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portaineree.Endpoint'
        "400":
          description: Invalid request
        "404":
          description: Environment(Endpoint) not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Inspect an environment(endpoint)
      tags:
      - endpoints
    put:
      consumes:
      - application/json
      description: |-
        Update an environment(endpoint).
        **Access policy**: authenticated
      operationId: EndpointUpdate
      parameters:
      - description: Environment(Endpoint) identifier
        in: path
        name: id
        required: true
        type: integer
      - description: Environment(Endpoint) details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/endpoints.endpointUpdatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portaineree.Endpoint'
        "400":
          description: Invalid request
        "404":
          description: Environment(Endpoint) not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Update an environment(endpoint)
      tags:
      - endpoints
  /endpoints/{id}/association:
    put:
      description: |-
        De-association an edge environment(endpoint).
        **Access policy**: administrator
      operationId: EndpointAssociationDelete
      parameters:
      - description: Environment(Endpoint) identifier
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portaineree.Endpoint'
        "400":
          description: Invalid request
        "404":
          description: Environment(Endpoint) not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: De-association an edge environment(endpoint)
      tags:
      - endpoints
  /endpoints/{id}/dockerhub/{registryId}:
    get:
      description: |-
        get docker pull limits for a docker hub registry in the environment
        **Access policy**:
      operationId: endpointDockerhubStatus
      parameters:
      - description: endpoint ID
        in: path
        name: id
        required: true
        type: integer
      - description: registry ID
        in: path
        name: registryId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/endpoints.dockerhubStatusResponse'
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: registry or endpoint not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: fetch docker pull limits
      tags:
      - endpoints
  /endpoints/{id}/edge/generate-key:
    get:
      consumes:
      - application/json
      description: |-
        Generates a general edge key
        **Access policy**: admin
      parameters:
      - description: Generate Key Info
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/endpointedge.generateKeyResponse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Generate an EdgeKey
      tags:
      - edge
      - endpoints
  /endpoints/{id}/edge/jobs/{jobID}/logs:
    post:
      consumes:
      - application/json
      description: '**Access policy**: public'
      parameters:
      - description: Environment(Endpoint) Id
        in: path
        name: id
        required: true
        type: string
      - description: Job Id
        in: path
        name: jobID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Inspect an EdgeJob Log
      tags:
      - edge
      - endpoints
  /endpoints/{id}/edge/stacks/{stackId}:
    get:
      consumes:
      - application/json
      description: '**Access policy**: public'
      parameters:
      - description: Environment(Endpoint) Id
        in: path
        name: id
        required: true
        type: string
      - description: EdgeStack Id
        in: path
        name: stackId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/endpointedge.configResponse'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Inspect an Edge Stack for an Environment(Endpoint)
      tags:
      - edge
      - endpoints
      - edge_stacks
  /endpoints/{id}/edge/status:
    get:
      description: |-
        environment(endpoint) for edge agent to check status of environment(endpoint)
        **Access policy**: restricted only to Edge environments(endpoints)
      operationId: EndpointEdgeStatusInspect
      parameters:
      - description: Environment(Endpoint) identifier
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/endpointedge.endpointEdgeStatusInspectResponse'
        "400":
          description: Invalid request
        "403":
          description: Permission denied to access environment(endpoint)
        "404":
          description: Environment(Endpoint) not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Get environment(endpoint) status
      tags:
      - endpoints
  /endpoints/{id}/edge/trust:
    post:
      consumes:
      - application/json
      description: '**Access policy**: admin'
      parameters:
      - description: Environment(Endpoint) Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Trust an edge device
      tags:
      - edge
      - endpoints
  /endpoints/{id}/forceupdateservice:
    put:
      consumes:
      - application/json
      description: |-
        force update a docker service
        **Access policy**: authenticated
      operationId: endpointForceUpdateService
      parameters:
      - description: endpoint identifier
        in: path
        name: id
        required: true
        type: integer
      - description: details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/endpoints.forceUpdateServicePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/types.ServiceUpdateResponse'
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: endpoint not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: force update a docker service
      tags:
      - endpoints
  /endpoints/{id}/kubernetes/helm:
    get:
      consumes:
      - application/json
      description: '**Access policy**: authenticated'
      operationId: HelmList
      parameters:
      - description: Environment(Endpoint) identifier
        in: path
        name: id
        required: true
        type: integer
      - description: specify an optional namespace
        in: query
        name: namespace
        required: true
        type: string
      - description: specify an optional filter
        in: query
        name: filter
        required: true
        type: string
      - description: specify an optional selector
        in: query
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: '#/definitions/release.ReleaseElement'
            type: array
        "400":
          description: Invalid environment(endpoint) identifier
        "401":
          description: Unauthorized
        "404":
          description: Environment(Endpoint) or ServiceAccount not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: List Helm Releases
      tags:
      - helm
    post:
      consumes:
      - application/json
      description: '**Access policy**: authenticated'
      operationId: HelmInstall
      parameters:
      - description: Environment(Endpoint) identifier
        in: path
        name: id
        required: true
        type: integer
      - description: Chart details
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/helm.installChartPayload'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/release.Release'
        "401":
          description: Unauthorized
        "404":
          description: Environment(Endpoint) or ServiceAccount not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Install Helm Chart
      tags:
      - helm
  /endpoints/{id}/kubernetes/helm/{release}:
    delete:
      description: '**Access policy**: authenticated'
      operationId: HelmDelete
      parameters:
      - description: Environment(Endpoint) identifier
        in: path
        name: id
        required: true
        type: integer
      - description: The name of the release/application to uninstall
        in: path
        name: release
        required: true
        type: string
      - description: An optional namespace
        in: query
        name: namespace
        required: true
        type: string
      responses:
        "204":
          description: Success
        "400":
          description: Invalid environment(endpoint) id or bad request
        "401":
          description: Unauthorized
        "404":
          description: Environment(Endpoint) or ServiceAccount not found
        "500":
          description: Server error or helm error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Delete Helm Release
      tags:
      - helm
  /endpoints/{id}/kubernetes/helm/repositories:
    get:
      description: |-
        Inspect a user helm repositories.
        **Access policy**: authenticated
      operationId: HelmUserRepositoriesList
      parameters:
      - description: Environment(Endpoint) identifier
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/helm.helmUserRepositoryResponse'
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: List a users helm repositories
      tags:
      - helm
    post:
      consumes:
      - application/json
      description: |-
        Create a user helm repository.
        **Access policy**: authenticated
      operationId: HelmUserRepositoryCreate
      parameters:
      - description: Environment(Endpoint) identifier
        in: path
        name: id
        required: true
        type: integer
      - description: Helm Repository
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/helm.addHelmRepoUrlPayload'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portaineree.HelmUserRepository'
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Create a user helm repository
      tags:
      - helm
  /endpoints/{id}/pools/{rpn}/access:
    put:
      consumes:
      - application/json
      description: |-
        update the access on the resource pool in the current environment
        **Access policy**: restricted
      operationId: endpointPoolsAccessUpdate
      parameters:
      - description: endpoint id
        in: path
        name: id
        required: true
        type: integer
      - description: namespace
        in: path
        name: rpn
        required: true
        type: integer
      - description: details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/endpoints.resourcePoolUpdatePayload'
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: Endpoint not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: update resource pool access
      tags:
      - endpoints
  /endpoints/{id}/registries:
    get:
      description: |-
        List all registries based on the current user authorizations in current environment.
        **Access policy**: authenticated
      operationId: endpointRegistriesList
      parameters:
      - description: required if kubernetes environment, will show registries by namespace
        in: query
        name: namespace
        type: string
      - description: Environment(Endpoint) identifier
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: '#/definitions/portaineree.Registry'
            type: array
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: List Registries on environment
      tags:
      - endpoints
  /endpoints/{id}/registries/{registryId}:
    put:
      consumes:
      - application/json
      description: '**Access policy**: authenticated'
      operationId: endpointRegistryAccess
      parameters:
      - description: Environment(Endpoint) identifier
        in: path
        name: id
        required: true
        type: integer
      - description: Registry identifier
        in: path
        name: registryId
        required: true
        type: integer
      - description: details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/endpoints.registryAccessPayload'
      produces:
      - application/json
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: Endpoint not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: update registry access for environment
      tags:
      - endpoints
  /endpoints/{id}/settings:
    put:
      consumes:
      - application/json
      description: |-
        Update settings for an environment(endpoint).
        **Access policy**: authenticated
      operationId: EndpointSettingsUpdate
      parameters:
      - description: Environment(Endpoint) identifier
        in: path
        name: id
        required: true
        type: integer
      - description: Environment(Endpoint) details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/endpoints.endpointSettingsUpdatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portaineree.Endpoint'
        "400":
          description: Invalid request
        "404":
          description: Environment(Endpoint) not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Update settings for an environment(endpoint)
      tags:
      - endpoints
  /endpoints/{id}/snapshot:
    post:
      description: |-
        Snapshots an environment(endpoint)
        **Access policy**: administrator
      operationId: EndpointSnapshot
      parameters:
      - description: Environment(Endpoint) identifier
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "404":
          description: Environment(Endpoint) not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Snapshots an environment(endpoint)
      tags:
      - endpoints
  /endpoints/edge/async:
    post:
      description: |-
        Environment(Endpoint) for edge agent to check status of environment(endpoint)
        **Access policy**: restricted only to Edge environments(endpoints)
      operationId: endpointEdgeAsync
      parameters:
      - description: Environment(Endpoint) identifier
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/endpointedge.EdgeAsyncResponse'
        "400":
          description: Invalid request
        "403":
          description: Permission denied to access environment(endpoint)
        "404":
          description: Environment(Endpoint) not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Get environment(endpoint) status
      tags:
      - endpoints
  /endpoints/global-key:
    post:
      operationId: EndpointCreateGlobalKey
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/endpoints.endpointCreateGlobalKeyResponse'
        "400":
          description: Invalid request
        "500":
          description: Server error
      summary: Create or retrieve the endpoint for an EdgeID
      tags:
      - endpoints
  /endpoints/snapshot:
    post:
      description: |-
        Snapshot all environments(endpoints)
        **Access policy**: administrator
      operationId: EndpointSnapshots
      responses:
        "204":
          description: Success
        "500":
          description: Server Error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Snapshot all environment(endpoint)
      tags:
      - endpoints
  /fdo:
    post:
      consumes:
      - application/json
      description: |-
        Enable Portainer's FDO capabilities
        **Access policy**: administrator
      operationId: fdoConfigure
      parameters:
      - description: FDO Settings
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/fdo.fdoConfigurePayload'
      produces:
      - application/json
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Permission denied to access settings
        "500":
          description: Server error
      security:
      - jwt: []
      summary: Enable Portainer's FDO capabilities
      tags:
      - intel
  /fdo/configure/{guid}:
    post:
      description: |-
        configures an FDO device
        **Access policy**: administrator
      operationId: fdoConfigureDevice
      parameters:
      - description: Device Configuration
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/fdo.deviceConfigurePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Permission denied to access settings
        "500":
          description: Server error
      security:
      - jwt: []
      summary: configures an FDO device
      tags:
      - intel
  /fdo/list:
    get:
      description: |-
        List all known FDO vouchers
        **Access policy**: administrator
      operationId: fdoListAll
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Permission denied to access settings
        "500":
          description: Server error
      security:
      - jwt: []
      summary: List all known FDO vouchers
      tags:
      - intel
  /fdo/profiles:
    get:
      description: |-
        retrieves all FDO profiles
        **Access policy**: administrator
      operationId: fdoProfileList
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Permission denied to access settings
        "500":
          description: Bad gateway
      security:
      - jwt: []
      summary: retrieves all FDO profiles
      tags:
      - intel
    post:
      description: |-
        creates a new FDO Profile
        **Access policy**: administrator
      operationId: createProfile
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "400":
          description: Invalid request
        "409":
          description: Profile name already exists
        "500":
          description: Server error
      security:
      - jwt: []
      summary: creates a new FDO Profile
      tags:
      - intel
  /fdo/profiles/{id}:
    delete:
      description: |-
        deletes a FDO Profile
        **Access policy**: administrator
      operationId: deleteProfile
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "400":
          description: Invalid request
        "500":
          description: Server error
      security:
      - jwt: []
      summary: deletes a FDO Profile
      tags:
      - intel
    get:
      description: |-
        retrieves a given FDO profile information and content
        **Access policy**: administrator
      operationId: fdoProfileInspect
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "400":
          description: Invalid request
        "500":
          description: Server error
      security:
      - jwt: []
      summary: retrieves a given FDO profile information and content
      tags:
      - intel
    put:
      description: |-
        updates an existing FDO Profile
        **Access policy**: administrator
      operationId: updateProfile
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "400":
          description: Invalid request
        "409":
          description: Profile name already exists
        "500":
          description: Server error
      security:
      - jwt: []
      summary: updates an existing FDO Profile
      tags:
      - intel
  /fdo/profiles/{id}/duplicate:
    post:
      description: |-
        duplicated an existing FDO Profile
        **Access policy**: administrator
      operationId: duplicate
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "400":
          description: Invalid request
        "500":
          description: Server error
      security:
      - jwt: []
      summary: duplicated an existing FDO Profile
      tags:
      - intel
  /fdo/register:
    post:
      description: |-
        register an FDO device
        **Access policy**: administrator
      operationId: fdoRegisterDevice
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Permission denied to access settings
        "500":
          description: Server error
      security:
      - jwt: []
      summary: register an FDO device
      tags:
      - intel
  /kubernetes/{endpointId}/opa:
    put:
      consumes:
      - application/json
      description: |-
        Update Pod Security Rule within k8s cluster
        **Access policy**: authenticated
      operationId: updateK8sPodSecurityRule
      parameters:
      - description: Environment(Endpoint) identifier
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "400":
          description: Invalid request
        "404":
          description: Pod Security Rule not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Update Pod Security Rule within k8s cluster
      tags:
      - kubernetes
  /kubernetes/{id}/namespaces/{namespace}/system:
    put:
      consumes:
      - application/json
      description: |-
        Toggle the system state for a namespace
        **Access policy**: administrator or environment(endpoint) admin
      operationId: KubernetesNamespacesToggleSystem
      parameters:
      - description: Environment(Endpoint) identifier
        in: path
        name: id
        required: true
        type: integer
      - description: Namespace name
        in: path
        name: namespace
        required: true
        type: string
      - description: Update details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/kubernetes.namespacesToggleSystemPayload'
      responses:
        "200":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: Environment(Endpoint) not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Toggle the system state for a namespace
      tags:
      - kubernetes
  /kubernetes/{id}/nodes_limits:
    get:
      consumes:
      - application/json
      description: |-
        Get CPU and memory limits of all nodes within k8s cluster
        **Access policy**: authenticated
      operationId: getKubernetesNodesLimits
      parameters:
      - description: Environment(Endpoint) identifier
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portaineree.K8sNodesLimits'
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
        "403":
          description: Permission denied
        "404":
          description: Environment(Endpoint) not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Get CPU and memory limits of all nodes within k8s cluster
      tags:
      - kubernetes
  /kubernetes/{id}/opa:
    get:
      consumes:
      - application/json
      description: |-
        Get Pod Security Rule within k8s cluster
        **Access policy**: authenticated
      operationId: getKubernetesPodSecurityRule
      parameters:
      - description: Environment(Endpoint) identifier
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/podsecurity.PodSecurityRule'
        "400":
          description: Invalid request
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Get Pod Security Rule within k8s cluster, if not found, the frontend
        will create a default
      tags:
      - kubernetes
  /kubernetes/config:
    get:
      consumes:
      - application/json
      description: |-
        Generates kubeconfig file enabling client communication with k8s api server
        **Access policy**: authenticated
      operationId: GetKubernetesConfig
      parameters:
      - description: will include only these environments(endpoints)
        in: query
        items:
          type: integer
        name: ids
        type: array
      - description: will exclude these environments(endpoints)
        in: query
        items:
          type: integer
        name: excludeIds
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
        "403":
          description: Permission denied
        "404":
          description: Environment(Endpoint) or ServiceAccount not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Generates kubeconfig file enabling client communication with k8s api
        server
      tags:
      - kubernetes
  /ldap/admin-groups:
    post:
      consumes:
      - application/json
      description: |-
        Fetch LDAP admin groups from LDAP server based on AdminGroupSearchSettings
        **Access policy**: administrator
      operationId: LDAPAdminGroups
      parameters:
      - description: LDAPSettings
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ldap.adminGroupsPayload'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            items:
              type: string
            type: array
        "400":
          description: Invalid request
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Fetch LDAP admin groups
      tags:
      - ldap
  /ldap/check:
    post:
      consumes:
      - application/json
      description: |-
        Test LDAP connectivity using LDAP details
        **Access policy**: administrator
      operationId: LDAPCheck
      parameters:
      - description: details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ldap.checkPayload'
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Test LDAP connectivity
      tags:
      - ldap
  /ldap/groups:
    post:
      consumes:
      - application/json
      description: '**Access policy**: administrator'
      operationId: LDAPGroups
      parameters:
      - description: details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ldap.groupsPayload'
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: '#/definitions/portaineree.LDAPUser'
            type: array
        "400":
          description: Invalid request
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Search LDAP Groups
      tags:
      - ldap
  /ldap/test:
    post:
      consumes:
      - application/json
      description: '**Access policy**: administrator'
      operationId: LDAPTestLogin
      parameters:
      - description: details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ldap.testLoginPayload'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/ldap.testLoginResponse'
        "400":
          description: Invalid request
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Test Login to ldap server
      tags:
      - ldap
  /ldap/users:
    post:
      consumes:
      - application/json
      description: '**Access policy**: administrator'
      operationId: LDAPUsers
      parameters:
      - description: details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ldap.usersPayload'
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: '#/definitions/portaineree.LDAPUser'
            type: array
        "400":
          description: Invalid request
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Search LDAP Users
      tags:
      - ldap
  /licenses:
    delete:
      consumes:
      - application/json
      description: '**Access policy**: administrator'
      operationId: licensesDelete
      parameters:
      - description: list of license keys to remove
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/licenses.deletePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Failures will be in `body.FailedKeys[key] = error`
          schema:
            $ref: '#/definitions/licenses.deleteResponse'
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: delete license from portainer instance
      tags:
      - license
    get:
      description: '**Access policy**: administrator'
      operationId: licensesList
      produces:
      - application/json
      responses:
        "200":
          description: Licenses
          schema:
            items:
              $ref: '#/definitions/liblicense.PortainerLicense'
            type: array
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: fetches the list of licenses on Portainer
      tags:
      - license
  /licenses/attach:
    post:
      consumes:
      - application/json
      description: '**Access policy**: administrator'
      operationId: licensesAttach
      parameters:
      - description: list of licenses keys to attach
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/licenses.attachPayload'
      produces:
      - application/json
      responses:
        "200":
          description: Success license data will be in `body.Licenses`, Failures will
            be in `body.FailedKeys[key] = error`
          schema:
            $ref: '#/definitions/licenses.attachResponse'
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: attaches a list of licenses to Portainer
      tags:
      - license
  /licenses/info:
    get:
      description: '**Access policy**: administrator'
      operationId: licensesInfo
      produces:
      - application/json
      responses:
        "200":
          description: License info
          schema:
            $ref: '#/definitions/licenses.LicenseInfo'
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: summarizes licenses on Portainer
      tags:
      - license
  /motd:
    get:
      description: '**Access policy**: restricted'
      operationId: MOTD
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/motd.motdResponse'
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: fetches the message of the day
      tags:
      - motd
  /nomad/endpoints/{endpointID}/allocation/{id}/events:
    get:
      description: |-
        Allocation ID, namespace and task name params are required
        **Access policy**: administrator
      operationId: GetTaskEvents
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: '#/definitions/nomad.slimNomadTaskEvent'
            type: array
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Retrieve events for a nomad task
      tags:
      - nomad
  /nomad/endpoints/{endpointID}/allocation/{id}/logs:
    get:
      description: |-
        Allocation ID, namespace, task name and refresh params are required
        **Access policy**: administrator
      operationId: GetTaskLogs
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: '#/definitions/nomad.slimNomadTaskEvent'
            type: array
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Retrieve logs for a nomad task
      tags:
      - nomad
  /nomad/endpoints/{endpointID}/dashboard:
    get:
      description: '**Access policy**: authenticated users'
      operationId: getDashboard
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "404":
          description: Endpoint not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: get basic Nomad information for dashboard
      tags:
      - nomad
  /nomad/endpoints/{endpointID}/jobs:
    get:
      description: |-
        namespace param is required
        **Access policy**: authenticated users
      operationId: listJobs
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "404":
          description: Endpoint not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: List jobs
      tags:
      - nomad
  /nomad/endpoints/{endpointID}/jobs/{id}:
    delete:
      description: |-
        Job ID and namespace params are required
        **Access policy**: administrator
      operationId: deleteJob
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Delete a job
      tags:
      - nomad
  /nomad/endpoints/{endpointID}/status:
    get:
      description: '**Access policy**: authenticated users'
      operationId: getLeader
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "404":
          description: Endpoint not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: returns the address of the current leader in the region
      tags:
      - nomad
  /open_amt:
    post:
      consumes:
      - application/json
      description: |-
        Enable Portainer's OpenAMT capabilities
        **Access policy**: administrator
      operationId: OpenAMTConfigure
      parameters:
      - description: OpenAMT Settings
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/openamt.openAMTConfigurePayload'
      produces:
      - application/json
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Permission denied to access settings
        "500":
          description: Server error
      security:
      - jwt: []
      summary: Enable Portainer's OpenAMT capabilities
      tags:
      - intel
  /open_amt/{id}/activate:
    post:
      description: |-
        Activate OpenAMT device and associate to agent endpoint
        **Access policy**: administrator
      operationId: openAMTActivate
      parameters:
      - description: Environment(Endpoint) identifier
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Permission denied to access settings
        "500":
          description: Server error
      security:
      - jwt: []
      summary: Activate OpenAMT device and associate to agent endpoint
      tags:
      - intel
  /open_amt/{id}/devices:
    get:
      description: |-
        Fetch OpenAMT managed devices information for endpoint
        **Access policy**: administrator
      operationId: OpenAMTDevices
      parameters:
      - description: Environment(Endpoint) identifier
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Permission denied to access settings
        "500":
          description: Server error
      security:
      - jwt: []
      summary: Fetch OpenAMT managed devices information for endpoint
      tags:
      - intel
  /open_amt/{id}/devices/{deviceId}/action:
    post:
      consumes:
      - application/json
      description: |-
        Execute out of band action on an AMT managed device
        **Access policy**: administrator
      operationId: DeviceAction
      parameters:
      - description: Device Action
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/openamt.deviceActionPayload'
      produces:
      - application/json
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Permission denied to access settings
        "500":
          description: Server error
      security:
      - jwt: []
      summary: Execute out of band action on an AMT managed device
      tags:
      - intel
  /open_amt/{id}/devices_features/{deviceId}:
    post:
      consumes:
      - application/json
      description: |-
        Enable features on an AMT managed device
        **Access policy**: administrator
      operationId: DeviceFeatures
      parameters:
      - description: Device Features
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/openamt.deviceFeaturesPayload'
      produces:
      - application/json
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Permission denied to access settings
        "500":
          description: Server error
      security:
      - jwt: []
      summary: Enable features on an AMT managed device
      tags:
      - intel
  /open_amt/{id}/info:
    get:
      description: |-
        Request OpenAMT info from a node
        **Access policy**: administrator
      operationId: OpenAMTHostInfo
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Permission denied to access settings
        "500":
          description: Server error
      security:
      - jwt: []
      summary: Request OpenAMT info from a node
      tags:
      - intel
  /registries:
    get:
      description: |-
        List all registries based on the current user authorizations.
        Will return all registries if using an administrator account otherwise it
        will only return authorized registries.
        **Access policy**: restricted
      operationId: RegistryList
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: '#/definitions/portaineree.Registry'
            type: array
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: List Registries
      tags:
      - registries
    post:
      consumes:
      - application/json
      description: |-
        Create a new registry.
        **Access policy**: restricted
      operationId: RegistryCreate
      parameters:
      - description: Registry details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/registries.registryCreatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portaineree.Registry'
        "400":
          description: Invalid request
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Create a new registry
      tags:
      - registries
  /registries/{id}:
    delete:
      description: |-
        Remove a registry
        **Access policy**: restricted
      operationId: RegistryDelete
      parameters:
      - description: Registry identifier
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "404":
          description: Registry not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Remove a registry
      tags:
      - registries
    get:
      description: |-
        Retrieve details about a registry.
        **Access policy**: restricted
      operationId: RegistryInspect
      parameters:
      - description: Registry identifier
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portaineree.Registry'
        "400":
          description: Invalid request
        "403":
          description: Permission denied to access registry
        "404":
          description: Registry not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Inspect a registry
      tags:
      - registries
    put:
      consumes:
      - application/json
      description: |-
        Update a registry
        **Access policy**: restricted
      operationId: RegistryUpdate
      parameters:
      - description: Registry identifier
        in: path
        name: id
        required: true
        type: integer
      - description: Registry details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/registries.registryUpdatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portaineree.Registry'
        "400":
          description: Invalid request
        "404":
          description: Registry not found
        "409":
          description: Another registry with the same URL already exists
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Update a registry
      tags:
      - registries
  /registries/{id}/configure:
    post:
      consumes:
      - application/json
      description: |-
        Configures a registry.
        **Access policy**: restricted
      operationId: RegistryConfigure
      parameters:
      - description: Registry identifier
        in: path
        name: id
        required: true
        type: integer
      - description: Registry configuration
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/registries.registryConfigurePayload'
      produces:
      - application/json
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: Registry not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Configures a registry
      tags:
      - registries
  /registries/{id}/ecr/repositories/{repositoryName}:
    delete:
      description: |-
        Delete ECR repository.
        **Access policy**: restricted
      operationId: ecrDeleteRepository
      parameters:
      - description: Registry identifier
        in: path
        name: id
        required: true
        type: integer
      - description: Repository name
        in: path
        name: repositoryName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Permission denied to access registry
        "404":
          description: Registry not found
        "500":
          description: Server error
      security:
      - jwt: []
      summary: Delete ECR repository
      tags:
      - registries
  /registries/{id}/ecr/repositories/{repositoryName}/tags:
    delete:
      description: |-
        Delete tags for a given ECR repository
        **Access policy**: restricted
      operationId: ecrDeleteTags
      parameters:
      - description: Registry identifier
        in: path
        name: id
        required: true
        type: integer
      - description: Tag Array
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/registries.deleteTagsPayload'
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Permission denied to access registry
        "404":
          description: Registry not found
        "500":
          description: Server error
      security:
      - jwt: []
      summary: Delete tags
      tags:
      - registries
  /resource_controls:
    post:
      consumes:
      - application/json
      description: |-
        Create a new resource control to restrict access to a Docker resource.
        **Access policy**: administrator
      operationId: ResourceControlCreate
      parameters:
      - description: Resource control details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/resourcecontrols.resourceControlCreatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portaineree.ResourceControl'
        "400":
          description: Invalid request
        "409":
          description: Resource control already exists
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Create a new resource control
      tags:
      - resource_controls
  /resource_controls/{id}:
    delete:
      description: |-
        Remove a resource control.
        **Access policy**: administrator
      operationId: ResourceControlDelete
      parameters:
      - description: Resource control identifier
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "404":
          description: Resource control not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Remove a resource control
      tags:
      - resource_controls
    put:
      consumes:
      - application/json
      description: |-
        Update a resource control
        **Access policy**: authenticated
      operationId: ResourceControlUpdate
      parameters:
      - description: Resource control identifier
        in: path
        name: id
        required: true
        type: integer
      - description: Resource control details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/resourcecontrols.resourceControlUpdatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portaineree.ResourceControl'
        "400":
          description: Invalid request
        "403":
          description: Unauthorized
        "404":
          description: Resource control not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Update a resource control
      tags:
      - resource_controls
  /restore:
    post:
      consumes:
      - application/json
      description: |-
        Triggers a system restore using provided backup file
        **Access policy**: public
      operationId: Restore
      parameters:
      - description: Restore request payload
        in: body
        name: restorePayload
        required: true
        schema:
          $ref: '#/definitions/backup.restorePayload'
      responses:
        "200":
          description: Success
        "400":
          description: Invalid request
        "500":
          description: Server error
      summary: Triggers a system restore using provided backup file
      tags:
      - backup
  /roles:
    get:
      description: |-
        List all roles available for use
        **Access policy**: administrator
      operationId: RoleList
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: '#/definitions/portaineree.Role'
            type: array
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: List roles
      tags:
      - roles
  /settings:
    get:
      description: |-
        Retrieve Portainer settings.
        **Access policy**: administrator
      operationId: SettingsInspect
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portaineree.Settings'
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Retrieve Portainer settings
      tags:
      - settings
    put:
      consumes:
      - application/json
      description: |-
        Update Portainer settings.
        **Access policy**: administrator
      operationId: SettingsUpdate
      parameters:
      - description: New settings
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/settings.settingsUpdatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portaineree.Settings'
        "400":
          description: Invalid request
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Update Portainer settings
      tags:
      - settings
  /settings/public:
    get:
      description: |-
        Retrieve public settings. Returns a small set of settings that are not reserved to administrators only.
        **Access policy**: public
      operationId: SettingsPublic
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/settings.publicSettingsResponse'
        "500":
          description: Server error
      summary: Retrieve Portainer public settings
      tags:
      - settings
  /ssl:
    get:
      description: |-
        Retrieve the ssl settings.
        **Access policy**: administrator
      operationId: SSLInspect
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portaineree.SSLSettings'
        "400":
          description: Invalid request
        "403":
          description: Permission denied to access settings
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Inspect the ssl settings
      tags:
      - ssl
    put:
      consumes:
      - application/json
      description: |-
        Update the ssl settings.
        **Access policy**: administrator
      operationId: SSLUpdate
      parameters:
      - description: SSL Settings
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ssl.sslUpdatePayload'
      produces:
      - application/json
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Permission denied to access settings
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Update the ssl settings
      tags:
      - ssl
  /stacks:
    get:
      description: |-
        List all stacks based on the current user authorizations.
        Will return all stacks if using an administrator account otherwise it
        will only return the list of stacks the user have access to.
        **Access policy**: authenticated
      operationId: StackList
      parameters:
      - description: 'Filters to process on the stack list. Encoded as JSON (a map[string]string).
          For example, {''SwarmID'': ''jpofkc0i9uo9wtx1zesuk649w''} will only return
          stacks that are part of the specified Swarm cluster. Available filters:
          EndpointID, SwarmID.'
        in: query
        name: filters
        type: string
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: '#/definitions/portaineree.Stack'
            type: array
        "204":
          description: Success
        "400":
          description: Invalid request
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: List stacks
      tags:
      - stacks
    post:
      consumes:
      - application/json
      - multipart/form-data
      description: |-
        Deploy a new stack into a Docker environment(endpoint) specified via the environment(endpoint) identifier.
        **Access policy**: authenticated
      operationId: StackCreate
      parameters:
      - description: 'Stack deployment type. Possible values: 1 (Swarm stack) or 2
          (Compose stack).'
        enum:
        - 1
        - 2
        in: query
        name: type
        required: true
        type: integer
      - description: 'Stack deployment method. Possible values: file, string or repository.'
        enum:
        - string
        - file
        - repository
        in: query
        name: method
        required: true
        type: string
      - description: Identifier of the environment(endpoint) that will be used to
          deploy the stack
        in: query
        name: endpointId
        required: true
        type: integer
      - description: Required when using method=string and type=1
        in: body
        name: body_swarm_string
        schema:
          $ref: '#/definitions/stacks.swarmStackFromFileContentPayload'
      - description: Required when using method=repository and type=1
        in: body
        name: body_swarm_repository
        schema:
          $ref: '#/definitions/stacks.swarmStackFromGitRepositoryPayload'
      - description: Required when using method=string and type=2
        in: body
        name: body_compose_string
        schema:
          $ref: '#/definitions/stacks.composeStackFromFileContentPayload'
      - description: Required when using method=repository and type=2
        in: body
        name: body_compose_repository
        schema:
          $ref: '#/definitions/stacks.composeStackFromGitRepositoryPayload'
      - description: Name of the stack. required when method is file
        in: formData
        name: Name
        type: string
      - description: Swarm cluster identifier. Required when method equals file and
          type equals 1. required when method is file
        in: formData
        name: SwarmID
        type: string
      - description: 'Environment(Endpoint) variables passed during deployment, represented
          as a JSON array [{''name'': ''name'', ''value'': ''value''}]. Optional,
          used when method equals file and type equals 1.'
        in: formData
        name: Env
        type: string
      - description: Stack file. required when method is file
        in: formData
        name: file
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portaineree.Stack'
        "400":
          description: Invalid request
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Deploy a new stack
      tags:
      - stacks
  /stacks/{id}:
    delete:
      description: |-
        Remove a stack.
        **Access policy**: restricted
      operationId: StackDelete
      parameters:
      - description: Stack identifier
        in: path
        name: id
        required: true
        type: integer
      - description: Set to true to delete an external stack. Only external Swarm
          stacks are supported
        in: query
        name: external
        type: boolean
      - description: Environment(Endpoint) identifier used to remove an external stack
          (required when external is set to true)
        in: query
        name: endpointId
        type: integer
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: Not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Remove a stack
      tags:
      - stacks
    get:
      description: |-
        Retrieve details about a stack.
        **Access policy**: restricted
      operationId: StackInspect
      parameters:
      - description: Stack identifier
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portaineree.Stack'
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: Stack not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Inspect a stack
      tags:
      - stacks
    put:
      consumes:
      - application/json
      description: |-
        Update a stack, only for file based stacks.
        **Access policy**: authenticated
      operationId: StackUpdate
      parameters:
      - description: Stack identifier
        in: path
        name: id
        required: true
        type: integer
      - description: Stacks created before version 1.18.0 might not have an associated
          environment(endpoint) identifier. Use this optional parameter to set the
          environment(endpoint) identifier used by the stack.
        in: query
        name: endpointId
        type: integer
      - description: Stack details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/stacks.updateSwarmStackPayload'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portaineree.Stack'
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: Not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Update a stack
      tags:
      - stacks
  /stacks/{id}/associate:
    put:
      description: '**Access policy**: administrator'
      operationId: StackAssociate
      parameters:
      - description: Stack identifier
        in: path
        name: id
        required: true
        type: integer
      - description: Stacks created before version 1.18.0 might not have an associated
          environment(endpoint) identifier. Use this optional parameter to set the
          environment(endpoint) identifier used by the stack.
        in: query
        name: endpointId
        required: true
        type: integer
      - description: Swarm identifier
        in: query
        name: swarmId
        required: true
        type: integer
      - description: Indicates whether the stack is orphaned
        in: query
        name: orphanedRunning
        required: true
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portaineree.Stack'
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: Stack not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Associate an orphaned stack to a new environment(endpoint)
      tags:
      - stacks
  /stacks/{id}/file:
    get:
      description: |-
        Get Stack file content.
        **Access policy**: restricted
      operationId: StackFileInspect
      parameters:
      - description: Stack identifier
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/stacks.stackFileResponse'
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: Stack not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Retrieve the content of the Stack file for the specified stack
      tags:
      - stacks
  /stacks/{id}/git:
    post:
      consumes:
      - application/json
      description: |-
        Update the Git settings in a stack, e.g., RepositoryReferenceName and AutoUpdate
        **Access policy**: authenticated
      operationId: StackUpdateGit
      parameters:
      - description: Stack identifier
        in: path
        name: id
        required: true
        type: integer
      - description: Stacks created before version 1.18.0 might not have an associated
          environment(endpoint) identifier. Use this optional parameter to set the
          environment(endpoint) identifier used by the stack.
        in: query
        name: endpointId
        type: integer
      - description: Git configs for pull and redeploy a stack
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/stacks.stackGitUpdatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portaineree.Stack'
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: Not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Update a stack's Git configs
      tags:
      - stacks
  /stacks/{id}/git/redeploy:
    put:
      consumes:
      - application/json
      description: |-
        Pull and redeploy a stack via Git
        **Access policy**: authenticated
      operationId: StackGitRedeploy
      parameters:
      - description: Stack identifier
        in: path
        name: id
        required: true
        type: integer
      - description: Stacks created before version 1.18.0 might not have an associated
          environment(endpoint) identifier. Use this optional parameter to set the
          environment(endpoint) identifier used by the stack.
        in: query
        name: endpointId
        type: integer
      - description: Git configs for pull and redeploy a stack
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/stacks.stackGitRedployPayload'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portaineree.Stack'
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: Not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Redeploy a stack
      tags:
      - stacks
  /stacks/{id}/migrate:
    post:
      description: |-
        Migrate a stack from an environment(endpoint) to another environment(endpoint). It will re-create the stack inside the target environment(endpoint) before removing the original stack.
        **Access policy**: authenticated
      operationId: StackMigrate
      parameters:
      - description: Stack identifier
        in: path
        name: id
        required: true
        type: integer
      - description: Stacks created before version 1.18.0 might not have an associated
          environment(endpoint) identifier. Use this optional parameter to set the
          environment(endpoint) identifier used by the stack.
        in: query
        name: endpointId
        type: integer
      - description: Stack migration details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/stacks.stackMigratePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portaineree.Stack'
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: Stack not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Migrate a stack to another environment(endpoint)
      tags:
      - stacks
  /stacks/{id}/start:
    post:
      description: |-
        Starts a stopped Stack.
        **Access policy**: authenticated
      operationId: StackStart
      parameters:
      - description: Stack identifier
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portaineree.Stack'
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: Not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Starts a stopped Stack
      tags:
      - stacks
  /stacks/{id}/stop:
    post:
      description: |-
        Stops a stopped Stack.
        **Access policy**: authenticated
      operationId: StackStop
      parameters:
      - description: Stack identifier
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portaineree.Stack'
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: Not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Stops a stopped Stack
      tags:
      - stacks
  /stacks/webhooks/{webhookID}:
    post:
      description: '**Access policy**: public'
      operationId: WebhookInvoke
      parameters:
      - description: Stack identifier
        in: path
        name: webhookID
        required: true
        type: string
      responses:
        "200":
          description: Success
        "400":
          description: Invalid request
        "409":
          description: Conflict
        "500":
          description: Server error
      summary: Webhook for triggering stack updates from git
      tags:
      - stacks
  /status:
    get:
      description: |-
        Retrieve Portainer status
        **Access policy**: public
      operationId: StatusInspect
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/status.status'
      summary: Check Portainer status
      tags:
      - status
  /status/nodes:
    get:
      description: '**Access policy**: authenticated'
      operationId: statusNodesCount
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/status.nodesCountResponse'
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Retrieve the count of nodes
      tags:
      - status
  /status/version:
    get:
      description: |-
        Check if portainer has an update available
        **Access policy**: authenticated
      operationId: Version
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/status.versionResponse'
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Check for portainer updates
      tags:
      - status
  /tags:
    get:
      description: |-
        List tags.
        **Access policy**: authenticated
      operationId: TagList
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: '#/definitions/portaineree.Tag'
            type: array
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: List tags
      tags:
      - tags
    post:
      consumes:
      - application/json
      description: |-
        Create a new tag.
        **Access policy**: administrator
      operationId: TagCreate
      parameters:
      - description: Tag details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/tags.tagCreatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portaineree.Tag'
        "409":
          description: Tag name exists
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Create a new tag
      tags:
      - tags
  /tags/{id}:
    delete:
      description: |-
        Remove a tag.
        **Access policy**: administrator
      operationId: TagDelete
      parameters:
      - description: Tag identifier
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: Tag not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Remove a tag
      tags:
      - tags
  /team:
    post:
      consumes:
      - application/json
      description: |-
        Create a new team.
        **Access policy**: administrator
      operationId: TeamCreate
      parameters:
      - description: details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/teams.teamCreatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portaineree.Team'
        "400":
          description: Invalid request
        "409":
          description: Team already exists
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Create a new team
      tags:
      - teams
  /team/{id}:
    put:
      consumes:
      - application/json
      description: |-
        Update a team.
        **Access policy**: administrator
      operationId: TeamUpdate
      parameters:
      - description: Team identifier
        in: path
        name: id
        required: true
        type: integer
      - description: Team details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/teams.teamUpdatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portaineree.Team'
        "204":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: Team not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Update a team
      tags:
      - teams
  /team_memberships:
    get:
      description: |-
        List team memberships. Access is only available to administrators and team leaders.
        **Access policy**: administrator
      operationId: TeamMembershipList
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: '#/definitions/portaineree.TeamMembership'
            type: array
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: List team memberships
      tags:
      - team_memberships
    post:
      consumes:
      - application/json
      description: |-
        Create a new team memberships. Access is only available to administrators leaders of the associated team.
        **Access policy**: administrator
      operationId: TeamMembershipCreate
      parameters:
      - description: Team membership details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/teammemberships.teamMembershipCreatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portaineree.TeamMembership'
        "204":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Permission denied to manage memberships
        "409":
          description: Team membership already registered
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Create a new team membership
      tags:
      - team_memberships
  /team_memberships/{id}:
    delete:
      description: |-
        Remove a team membership. Access is only available to administrators leaders of the associated team.
        **Access policy**: administrator
      operationId: TeamMembershipDelete
      parameters:
      - description: TeamMembership identifier
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: TeamMembership not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Remove a team membership
      tags:
      - team_memberships
    put:
      consumes:
      - application/json
      description: |-
        Update a team membership. Access is only available to administrators or leaders of the associated team.
        **Access policy**: administrator or leaders of the associated team
      operationId: TeamMembershipUpdate
      parameters:
      - description: Team membership identifier
        in: path
        name: id
        required: true
        type: integer
      - description: Team membership details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/teammemberships.teamMembershipUpdatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portaineree.TeamMembership'
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: TeamMembership not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Update a team membership
      tags:
      - team_memberships
  /teams:
    get:
      description: |-
        List teams. For non-administrator users, will only list the teams they are member of.
        **Access policy**: restricted
      operationId: TeamList
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: '#/definitions/portaineree.Team'
            type: array
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: List teams
      tags:
      - teams
  /teams/{id}:
    delete:
      description: |-
        Remove a team.
        **Access policy**: administrator
      operationId: TeamDelete
      parameters:
      - description: Team Id
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: Team not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Remove a team
      tags:
      - teams
    get:
      description: |-
        Retrieve details about a team. Access is only available for administrator and leaders of that team.
        **Access policy**: administrator or team leader
      operationId: TeamInspect
      parameters:
      - description: Team identifier
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portaineree.Team'
        "204":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: Team not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Inspect a team
      tags:
      - teams
  /teams/{id}/memberships:
    get:
      description: |-
        List team memberships. Access is only available to administrators and team leaders.
        **Access policy**: restricted
      operationId: TeamMemberships
      parameters:
      - description: Team Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: '#/definitions/portaineree.TeamMembership'
            type: array
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: List team memberships
      tags:
      - team_memberships
  /templates:
    get:
      description: |-
        List available templates.
        **Access policy**: authenticated
      operationId: TemplateList
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/templates.listResponse'
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: List available templates
      tags:
      - templates
  /templates/file:
    post:
      consumes:
      - application/json
      description: |-
        Get a template's file
        **Access policy**: authenticated
      operationId: TemplateFile
      parameters:
      - description: File details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/templates.filePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/templates.fileResponse'
        "400":
          description: Invalid request
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Get a template's file
      tags:
      - templates
  /templates/helm:
    get:
      description: '**Access policy**: authenticated'
      operationId: HelmRepoSearch
      parameters:
      - description: Helm repository URL
        in: query
        name: repo
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            type: string
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Search Helm Charts
      tags:
      - helm
  /templates/helm/{command}:
    get:
      consumes:
      - application/json
      description: '**Access policy**: authenticated'
      operationId: HelmShow
      parameters:
      - description: Helm repository URL
        in: query
        name: repo
        required: true
        type: string
      - description: Chart name
        in: query
        name: chart
        required: true
        type: string
      - description: chart/values/readme
        in: path
        name: command
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: Success
          schema:
            type: string
        "401":
          description: Unauthorized
        "404":
          description: Environment(Endpoint) or ServiceAccount not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Show Helm Chart Information
      tags:
      - helm
  /upload/tls/{certificate}:
    post:
      consumes:
      - multipart/form-data
      description: |-
        Use this environment(endpoint) to upload TLS files.
        **Access policy**: administrator
      operationId: UploadTLS
      parameters:
      - description: TLS file type. Valid values are 'ca', 'cert' or 'key'.
        enum:
        - ca
        - cert
        - key
        in: path
        name: certificate
        required: true
        type: string
      - description: Folder where the TLS file will be stored. Will be created if
          not existing
        in: formData
        name: folder
        required: true
        type: string
      - description: The file to upload
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Upload TLS files
      tags:
      - upload
  /useractivity/authlogs:
    get:
      description: |-
        List logs by provided query
        **Access policy**: admin
      operationId: AuthLogsList
      parameters:
      - description: Pagination offset
        in: query
        name: offset
        type: integer
      - description: Limit results
        in: query
        name: limit
        type: integer
      - description: Results before timestamp (unix)
        in: query
        name: before
        type: integer
      - description: Results after timestamp (unix)
        in: query
        name: after
        type: integer
      - description: Sort by this column
        in: query
        name: sortBy
        type: string
      - description: Sort order, if true will return results by descending order
        in: query
        name: sortDesc
        type: boolean
      - description: Query logs by this keyword
        in: query
        name: keyword
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: '#/definitions/portaineree.AuthActivityLog'
            type: array
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: List auth activity logs
      tags:
      - useractivity
  /useractivity/authlogs.csv:
    get:
      description: |-
        Download auth logs as CSV by provided query
        **Access policy**: admin
      operationId: AuthLogsCSV
      parameters:
      - description: Results before timestamp (unix)
        in: query
        name: before
        type: integer
      - description: Results after timestamp (unix)
        in: query
        name: after
        type: integer
      - description: Sort by this column
        in: query
        name: sortBy
        type: string
      - description: Sort order, if true will return results by descending order
        in: query
        name: sortDesc
        type: boolean
      - description: Limit results
        in: query
        name: limit
        type: integer
      - description: Query logs by this keyword
        in: query
        name: keyword
        type: string
      produces:
      - text/csv
      responses:
        "200":
          description: Success
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Download auth logs as CSV
      tags:
      - useractivity
  /useractivity/logs:
    get:
      description: |-
        List logs by provided query
        **Access policy**: admin
      operationId: LogsList
      parameters:
      - description: Pagination offset
        in: query
        name: offset
        type: integer
      - description: Limit results
        in: query
        name: limit
        type: integer
      - description: Results before timestamp (unix)
        in: query
        name: before
        type: integer
      - description: Results after timestamp (unix)
        in: query
        name: after
        type: integer
      - description: Sort by this column
        in: query
        name: sortBy
        type: string
      - description: Sort order, if true will return results by descending order
        in: query
        name: sortDesc
        type: boolean
      - description: Query logs by this keyword
        in: query
        name: keyword
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/useractivity.logsListResponse'
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: List user activity logs
      tags:
      - useractivity
  /useractivity/logs.csv:
    get:
      description: |-
        Download user activity logs as CSV by provided query
        **Access policy**: admin
      operationId: LogsCSV
      parameters:
      - description: Results before timestamp (unix)
        in: query
        name: before
        type: integer
      - description: Results after timestamp (unix)
        in: query
        name: after
        type: integer
      - description: Sort by this column
        in: query
        name: sortBy
        type: string
      - description: Sort order, if true will return results by descending order
        in: query
        name: sortDesc
        type: boolean
      - description: Limit results
        in: query
        name: limit
        type: integer
      - description: Query logs by this keyword
        in: query
        name: keyword
        type: string
      produces:
      - text/csv
      responses:
        "200":
          description: Success
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Download user activity logs as CSV
      tags:
      - useractivity
  /users:
    get:
      description: |-
        List Portainer users.
        Non-administrator users will only be able to list other non-administrator user accounts.
        User passwords are filtered out, and should never be accessible.
        **Access policy**: restricted
      operationId: UserList
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: '#/definitions/portaineree.User'
            type: array
        "400":
          description: Invalid request
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: List users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: |-
        Create a new Portainer user.
        Only administrators can create users.
        **Access policy**: restricted
      operationId: UserCreate
      parameters:
      - description: User details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/users.userCreatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portaineree.User'
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "409":
          description: User already exists
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Create a new user
      tags:
      - users
  /users/{id}:
    delete:
      description: |-
        Remove a user.
        **Access policy**: administrator
      operationId: UserDelete
      parameters:
      - description: User identifier
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: User not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Remove a user
      tags:
      - users
    get:
      description: |-
        Retrieve details about a user.
        User passwords are filtered out, and should never be accessible.
        **Access policy**: authenticated
      operationId: UserInspect
      parameters:
      - description: User identifier
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portaineree.User'
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: User not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Inspect a user
      tags:
      - users
    put:
      consumes:
      - application/json
      description: |-
        Update user details. A regular user account can only update his details.
        **Access policy**: authenticated
      operationId: UserUpdate
      parameters:
      - description: User identifier
        in: path
        name: id
        required: true
        type: integer
      - description: User details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/users.userUpdatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portaineree.User'
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: User not found
        "409":
          description: Username already exist
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Update a user
      tags:
      - users
  /users/{id}/memberships:
    get:
      description: |-
        Inspect a user memberships.
        **Access policy**: restricted
      operationId: UserMembershipsInspect
      parameters:
      - description: User identifier
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portaineree.TeamMembership'
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Inspect a user memberships
      tags:
      - users
  /users/{id}/namespaces:
    get:
      description: |-
        Retrieves user's role authorizations of all namespaces in all k8s environments(endpoints)
        **Access policy**: restricted
      operationId: UserNamespaces
      parameters:
      - description: User identifier
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/users.namespaceMapping'
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: User not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Retrieves all k8s namespaces for an user
      tags:
      - users
  /users/{id}/passwd:
    put:
      consumes:
      - application/json
      description: |-
        Update password for the specified user.
        **Access policy**: authenticated
      operationId: UserUpdatePassword
      parameters:
      - description: identifier
        in: path
        name: id
        required: true
        type: integer
      - description: details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/users.userUpdatePasswordPayload'
      produces:
      - application/json
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: User not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Update password for a user
      tags:
      - users
  /users/{id}/tokens:
    get:
      description: |-
        Gets all API keys for a user.
        Only the calling user or admin can retrieve api-keys.
        **Access policy**: authenticated
      operationId: UserGetAPIKeys
      parameters:
      - description: User identifier
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: '#/definitions/portaineree.APIKey'
            type: array
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: User not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Get all API keys for a user
      tags:
      - users
    post:
      consumes:
      - application/json
      description: |-
        Generates an API key for a user.
        Only the calling user can generate a token for themselves.
        **Access policy**: restricted
      operationId: UserGenerateAPIKey
      parameters:
      - description: User identifier
        in: path
        name: id
        required: true
        type: integer
      - description: details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/users.userAccessTokenCreatePayload'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/users.accessTokenResponse'
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
        "403":
          description: Permission denied
        "404":
          description: User not found
        "500":
          description: Server error
      security:
      - jwt: []
      summary: Generate an API key for a user
      tags:
      - users
  /users/{id}/tokens/{keyID}:
    delete:
      description: |-
        Remove an api-key associated to a user..
        Only the calling user or admin can remove api-key.
        **Access policy**: authenticated
      operationId: UserRemoveAPIKey
      parameters:
      - description: User identifier
        in: path
        name: id
        required: true
        type: integer
      - description: Api Key identifier
        in: path
        name: keyID
        required: true
        type: integer
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: Not found
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Remove an api-key associated to a user
      tags:
      - users
  /users/admin/check:
    get:
      description: |-
        Check if an administrator account exists in the database.
        **Access policy**: public
      operationId: UserAdminCheck
      responses:
        "204":
          description: Success
        "404":
          description: User not found
      summary: Check administrator account existence
      tags:
      - users
  /users/admin/init:
    post:
      consumes:
      - application/json
      description: |-
        Initialize the 'admin' user account.
        **Access policy**: public
      operationId: UserAdminInit
      parameters:
      - description: User details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/users.adminInitPayload'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portaineree.User'
        "400":
          description: Invalid request
        "409":
          description: Admin user already initialized
        "500":
          description: Server error
      summary: Initialize administrator account
      tags:
      - users
  /webhooks:
    get:
      consumes:
      - application/json
      description: '**Access policy**: authenticated'
      parameters:
      - in: query
        name: EndpointID
        type: integer
      - in: query
        name: ResourceID
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/portaineree.Webhook'
            type: array
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: List webhooks
      tags:
      - webhooks
    post:
      consumes:
      - application/json
      description: '**Access policy**: authenticated'
      parameters:
      - description: Webhook data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/webhooks.webhookCreatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portaineree.Webhook'
        "400":
          description: Bad Request
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Create a webhook
      tags:
      - webhooks
  /webhooks/{id}:
    delete:
      description: '**Access policy**: authenticated'
      parameters:
      - description: Webhook id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "202":
          description: Webhook deleted
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Delete a webhook
      tags:
      - webhooks
    put:
      consumes:
      - application/json
      description: '**Access policy**: authenticated'
      parameters:
      - description: Webhook data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/webhooks.webhookUpdatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portaineree.Webhook'
        "400":
          description: Bad Request
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Update a webhook
      tags:
      - webhooks
  /webhooks/{token}:
    post:
      description: |-
        Acts on a passed in token UUID to restart the docker service
        **Access policy**: public
      parameters:
      - description: Webhook token
        in: path
        name: token
        required: true
        type: string
      responses:
        "202":
          description: Webhook executed
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Execute a webhook
      tags:
      - webhooks
  /websocket/attach:
    get:
      consumes:
      - application/json
      description: |-
        If the nodeName query parameter is present, the request will be proxied to the underlying agent environment(endpoint).
        If the nodeName query parameter is not specified, the request will be upgraded to the websocket protocol and
        an AttachStart operation HTTP request will be created and hijacked.
        **Access policy**: authenticated
      parameters:
      - description: environment(endpoint) ID of the environment(endpoint) where the
          resource is located
        in: query
        name: endpointId
        required: true
        type: integer
      - description: node name
        in: query
        name: nodeName
        type: string
      - description: JWT token used for authentication against this environment(endpoint)
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Attach a websocket
      tags:
      - websocket
  /websocket/exec:
    get:
      consumes:
      - application/json
      description: |-
        If the nodeName query parameter is present, the request will be proxied to the underlying agent environment(endpoint).
        If the nodeName query parameter is not specified, the request will be upgraded to the websocket protocol and
        an ExecStart operation HTTP request will be created and hijacked.
      parameters:
      - description: environment(endpoint) ID of the environment(endpoint) where the
          resource is located
        in: query
        name: endpointId
        required: true
        type: integer
      - description: node name
        in: query
        name: nodeName
        type: string
      - description: JWT token used for authentication against this environment(endpoint)
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Execute a websocket
      tags:
      - websocket
  /websocket/kubernetes-shell:
    get:
      consumes:
      - application/json
      description: |-
        The request will be upgraded to the websocket protocol. The request will proxy input from the client to the pod via long-lived websocket connection.
        **Access policy**: authenticated
      parameters:
      - description: environment(endpoint) ID of the environment(endpoint) where the
          resource is located
        in: query
        name: endpointId
        required: true
        type: integer
      - description: JWT token used for authentication against this environment(endpoint)
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "500":
          description: Server error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Execute a websocket on kubectl shell pod
      tags:
      - websocket
  /websocket/pod:
    get:
      consumes:
      - application/json
      description: |-
        The request will be upgraded to the websocket protocol.
        **Access policy**: authenticated
      parameters:
      - description: environment(endpoint) ID of the environment(endpoint) where the
          resource is located
        in: query
        name: endpointId
        required: true
        type: integer
      - description: namespace where the container is located
        in: query
        name: namespace
        required: true
        type: string
      - description: name of the pod containing the container
        in: query
        name: podName
        required: true
        type: string
      - description: name of the container
        in: query
        name: containerName
        required: true
        type: string
      - description: command to execute in the container
        in: query
        name: command
        required: true
        type: string
      - description: JWT token used for authentication against this environment(endpoint)
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - jwt: []
      summary: Execute a websocket on pod
      tags:
      - websocket
schemes:
- http
- https
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  jwt:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
tags:
- description: Authenticate against Portainer HTTP API
  name: auth
- description: Manage Custom Templates
  name: custom_templates
- description: Manage how Portainer connects to the DockerHub
  name: dockerhub
- description: Manage Edge Groups
  name: edge_groups
- description: Manage Edge Jobs
  name: edge_jobs
- description: Manage Edge Stacks
  name: edge_stacks
- description: Manage Edge Templates
  name: edge_templates
- description: Manage Edge related environment(endpoint) settings
  name: edge
- description: Manage Docker environments(endpoints)
  name: endpoints
- description: Manage environment(endpoint) groups
  name: endpoint_groups
- description: Manage Kubernetes cluster
  name: kubernetes
- description: Fetch the message of the day
  name: motd
- description: Manage Docker registries
  name: registries
- description: Manage access control on Docker resources
  name: resource_controls
- description: Manage roles
  name: roles
- description: Manage Portainer settings
  name: settings
- description: Information about the Portainer instance
  name: status
- description: Manage users
  name: users
- description: Manage tags
  name: tags
- description: Manage teams
  name: teams
- description: Manage team memberships
  name: team_memberships
- description: Manage App Templates
  name: templates
- description: Manage stacks
  name: stacks
- description: Upload files
  name: upload
- description: Manage webhooks
  name: webhooks
- description: Create exec sessions using websockets
  name: websocket