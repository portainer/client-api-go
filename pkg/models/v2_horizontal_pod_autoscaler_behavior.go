// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V2HorizontalPodAutoscalerBehavior v2 horizontal pod autoscaler behavior
//
// swagger:model v2.HorizontalPodAutoscalerBehavior
type V2HorizontalPodAutoscalerBehavior struct {

	// scaleDown is scaling policy for scaling Down.
	// If not set, the default value is to allow to scale down to minReplicas pods, with a
	// 300 second stabilization window (i.e., the highest recommendation for
	// the last 300sec is used).
	// +optional
	ScaleDown *V2HPAScalingRules `json:"scaleDown,omitempty"`

	// scaleUp is scaling policy for scaling Up.
	// If not set, the default value is the higher of:
	//   * increase no more than 4 pods per 60 seconds
	//   * double the number of pods per 60 seconds
	// No stabilization is used.
	// +optional
	ScaleUp *V2HPAScalingRules `json:"scaleUp,omitempty"`
}

// Validate validates this v2 horizontal pod autoscaler behavior
func (m *V2HorizontalPodAutoscalerBehavior) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateScaleDown(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateScaleUp(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V2HorizontalPodAutoscalerBehavior) validateScaleDown(formats strfmt.Registry) error {
	if swag.IsZero(m.ScaleDown) { // not required
		return nil
	}

	if m.ScaleDown != nil {
		if err := m.ScaleDown.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("scaleDown")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("scaleDown")
			}
			return err
		}
	}

	return nil
}

func (m *V2HorizontalPodAutoscalerBehavior) validateScaleUp(formats strfmt.Registry) error {
	if swag.IsZero(m.ScaleUp) { // not required
		return nil
	}

	if m.ScaleUp != nil {
		if err := m.ScaleUp.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("scaleUp")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("scaleUp")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this v2 horizontal pod autoscaler behavior based on the context it is used
func (m *V2HorizontalPodAutoscalerBehavior) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateScaleDown(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateScaleUp(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V2HorizontalPodAutoscalerBehavior) contextValidateScaleDown(ctx context.Context, formats strfmt.Registry) error {

	if m.ScaleDown != nil {

		if swag.IsZero(m.ScaleDown) { // not required
			return nil
		}

		if err := m.ScaleDown.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("scaleDown")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("scaleDown")
			}
			return err
		}
	}

	return nil
}

func (m *V2HorizontalPodAutoscalerBehavior) contextValidateScaleUp(ctx context.Context, formats strfmt.Registry) error {

	if m.ScaleUp != nil {

		if swag.IsZero(m.ScaleUp) { // not required
			return nil
		}

		if err := m.ScaleUp.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("scaleUp")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("scaleUp")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V2HorizontalPodAutoscalerBehavior) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V2HorizontalPodAutoscalerBehavior) UnmarshalBinary(b []byte) error {
	var res V2HorizontalPodAutoscalerBehavior
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
