// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// EdgeDeployerOptionsPayload edge deployer options payload
//
// swagger:model edge.DeployerOptionsPayload
type EdgeDeployerOptionsPayload struct {

	// Prune is a flag indicating if the agent must prune the containers or not when creating/updating an edge stack
	// This flag drives `docker compose up --remove-orphans` and `docker stack up --prune` options
	// Used only for EE
	Prune bool `json:"prune,omitempty"`

	// RemoveVolumes is a flag indicating if the agent must remove the named volumes declared
	// in the compose file and anonymouse volumes attached to containers
	// This flag drives `docker compose down --volumes` option
	// Used only for EE
	RemoveVolumes bool `json:"removeVolumes,omitempty"`
}

// Validate validates this edge deployer options payload
func (m *EdgeDeployerOptionsPayload) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this edge deployer options payload based on context it is used
func (m *EdgeDeployerOptionsPayload) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *EdgeDeployerOptionsPayload) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EdgeDeployerOptionsPayload) UnmarshalBinary(b []byte) error {
	var res EdgeDeployerOptionsPayload
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
