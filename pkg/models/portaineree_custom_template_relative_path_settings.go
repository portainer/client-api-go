// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PortainereeCustomTemplateRelativePathSettings portaineree custom template relative path settings
//
// swagger:model portaineree.CustomTemplateRelativePathSettings
type PortainereeCustomTemplateRelativePathSettings struct {

	// Local filesystem path
	// Example: /tmp
	FilesystemPath string `json:"filesystemPath,omitempty"`

	// Per device configs group match type
	// Example: file
	// Enum: ["file"," dir"]
	PerDeviceConfigsGroupMatchType string `json:"perDeviceConfigsGroupMatchType,omitempty"`

	// Per device configs match type
	// Example: file
	// Enum: ["file"," dir"]
	PerDeviceConfigsMatchType string `json:"perDeviceConfigsMatchType,omitempty"`

	// Per device configs path
	// Example: configs
	PerDeviceConfigsPath string `json:"perDeviceConfigsPath,omitempty"`

	// Whether the edge stack supports per device configs
	// Example: false
	SupportPerDeviceConfigs bool `json:"supportPerDeviceConfigs,omitempty"`

	// Whether the stack supports relative path volume
	// Example: false
	SupportRelativePath bool `json:"supportRelativePath,omitempty"`
}

// Validate validates this portaineree custom template relative path settings
func (m *PortainereeCustomTemplateRelativePathSettings) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePerDeviceConfigsGroupMatchType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePerDeviceConfigsMatchType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var portainereeCustomTemplateRelativePathSettingsTypePerDeviceConfigsGroupMatchTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["file"," dir"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		portainereeCustomTemplateRelativePathSettingsTypePerDeviceConfigsGroupMatchTypePropEnum = append(portainereeCustomTemplateRelativePathSettingsTypePerDeviceConfigsGroupMatchTypePropEnum, v)
	}
}

const (

	// PortainereeCustomTemplateRelativePathSettingsPerDeviceConfigsGroupMatchTypeFile captures enum value "file"
	PortainereeCustomTemplateRelativePathSettingsPerDeviceConfigsGroupMatchTypeFile string = "file"

	// PortainereeCustomTemplateRelativePathSettingsPerDeviceConfigsGroupMatchTypeDir captures enum value " dir"
	PortainereeCustomTemplateRelativePathSettingsPerDeviceConfigsGroupMatchTypeDir string = " dir"
)

// prop value enum
func (m *PortainereeCustomTemplateRelativePathSettings) validatePerDeviceConfigsGroupMatchTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, portainereeCustomTemplateRelativePathSettingsTypePerDeviceConfigsGroupMatchTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *PortainereeCustomTemplateRelativePathSettings) validatePerDeviceConfigsGroupMatchType(formats strfmt.Registry) error {
	if swag.IsZero(m.PerDeviceConfigsGroupMatchType) { // not required
		return nil
	}

	// value enum
	if err := m.validatePerDeviceConfigsGroupMatchTypeEnum("perDeviceConfigsGroupMatchType", "body", m.PerDeviceConfigsGroupMatchType); err != nil {
		return err
	}

	return nil
}

var portainereeCustomTemplateRelativePathSettingsTypePerDeviceConfigsMatchTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["file"," dir"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		portainereeCustomTemplateRelativePathSettingsTypePerDeviceConfigsMatchTypePropEnum = append(portainereeCustomTemplateRelativePathSettingsTypePerDeviceConfigsMatchTypePropEnum, v)
	}
}

const (

	// PortainereeCustomTemplateRelativePathSettingsPerDeviceConfigsMatchTypeFile captures enum value "file"
	PortainereeCustomTemplateRelativePathSettingsPerDeviceConfigsMatchTypeFile string = "file"

	// PortainereeCustomTemplateRelativePathSettingsPerDeviceConfigsMatchTypeDir captures enum value " dir"
	PortainereeCustomTemplateRelativePathSettingsPerDeviceConfigsMatchTypeDir string = " dir"
)

// prop value enum
func (m *PortainereeCustomTemplateRelativePathSettings) validatePerDeviceConfigsMatchTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, portainereeCustomTemplateRelativePathSettingsTypePerDeviceConfigsMatchTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *PortainereeCustomTemplateRelativePathSettings) validatePerDeviceConfigsMatchType(formats strfmt.Registry) error {
	if swag.IsZero(m.PerDeviceConfigsMatchType) { // not required
		return nil
	}

	// value enum
	if err := m.validatePerDeviceConfigsMatchTypeEnum("perDeviceConfigsMatchType", "body", m.PerDeviceConfigsMatchType); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this portaineree custom template relative path settings based on context it is used
func (m *PortainereeCustomTemplateRelativePathSettings) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PortainereeCustomTemplateRelativePathSettings) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PortainereeCustomTemplateRelativePathSettings) UnmarshalBinary(b []byte) error {
	var res PortainereeCustomTemplateRelativePathSettings
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
