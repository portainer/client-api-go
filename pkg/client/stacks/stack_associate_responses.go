// Code generated by go-swagger; DO NOT EDIT.

package stacks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/portainer/client-api-go/v2/pkg/models"
)

// StackAssociateReader is a Reader for the StackAssociate structure.
type StackAssociateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StackAssociateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStackAssociateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStackAssociateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewStackAssociateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewStackAssociateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewStackAssociateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /stacks/{id}/associate] StackAssociate", response, response.Code())
	}
}

// NewStackAssociateOK creates a StackAssociateOK with default headers values
func NewStackAssociateOK() *StackAssociateOK {
	return &StackAssociateOK{}
}

/*
StackAssociateOK describes a response with status code 200, with default header values.

Success
*/
type StackAssociateOK struct {
	Payload *models.PortainereeStack
}

// IsSuccess returns true when this stack associate o k response has a 2xx status code
func (o *StackAssociateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this stack associate o k response has a 3xx status code
func (o *StackAssociateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this stack associate o k response has a 4xx status code
func (o *StackAssociateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this stack associate o k response has a 5xx status code
func (o *StackAssociateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this stack associate o k response a status code equal to that given
func (o *StackAssociateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the stack associate o k response
func (o *StackAssociateOK) Code() int {
	return 200
}

func (o *StackAssociateOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /stacks/{id}/associate][%d] stackAssociateOK %s", 200, payload)
}

func (o *StackAssociateOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /stacks/{id}/associate][%d] stackAssociateOK %s", 200, payload)
}

func (o *StackAssociateOK) GetPayload() *models.PortainereeStack {
	return o.Payload
}

func (o *StackAssociateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PortainereeStack)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStackAssociateBadRequest creates a StackAssociateBadRequest with default headers values
func NewStackAssociateBadRequest() *StackAssociateBadRequest {
	return &StackAssociateBadRequest{}
}

/*
StackAssociateBadRequest describes a response with status code 400, with default header values.

Invalid request
*/
type StackAssociateBadRequest struct {
}

// IsSuccess returns true when this stack associate bad request response has a 2xx status code
func (o *StackAssociateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this stack associate bad request response has a 3xx status code
func (o *StackAssociateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this stack associate bad request response has a 4xx status code
func (o *StackAssociateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this stack associate bad request response has a 5xx status code
func (o *StackAssociateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this stack associate bad request response a status code equal to that given
func (o *StackAssociateBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the stack associate bad request response
func (o *StackAssociateBadRequest) Code() int {
	return 400
}

func (o *StackAssociateBadRequest) Error() string {
	return fmt.Sprintf("[PUT /stacks/{id}/associate][%d] stackAssociateBadRequest", 400)
}

func (o *StackAssociateBadRequest) String() string {
	return fmt.Sprintf("[PUT /stacks/{id}/associate][%d] stackAssociateBadRequest", 400)
}

func (o *StackAssociateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStackAssociateForbidden creates a StackAssociateForbidden with default headers values
func NewStackAssociateForbidden() *StackAssociateForbidden {
	return &StackAssociateForbidden{}
}

/*
StackAssociateForbidden describes a response with status code 403, with default header values.

Permission denied
*/
type StackAssociateForbidden struct {
}

// IsSuccess returns true when this stack associate forbidden response has a 2xx status code
func (o *StackAssociateForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this stack associate forbidden response has a 3xx status code
func (o *StackAssociateForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this stack associate forbidden response has a 4xx status code
func (o *StackAssociateForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this stack associate forbidden response has a 5xx status code
func (o *StackAssociateForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this stack associate forbidden response a status code equal to that given
func (o *StackAssociateForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the stack associate forbidden response
func (o *StackAssociateForbidden) Code() int {
	return 403
}

func (o *StackAssociateForbidden) Error() string {
	return fmt.Sprintf("[PUT /stacks/{id}/associate][%d] stackAssociateForbidden", 403)
}

func (o *StackAssociateForbidden) String() string {
	return fmt.Sprintf("[PUT /stacks/{id}/associate][%d] stackAssociateForbidden", 403)
}

func (o *StackAssociateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStackAssociateNotFound creates a StackAssociateNotFound with default headers values
func NewStackAssociateNotFound() *StackAssociateNotFound {
	return &StackAssociateNotFound{}
}

/*
StackAssociateNotFound describes a response with status code 404, with default header values.

Stack not found
*/
type StackAssociateNotFound struct {
}

// IsSuccess returns true when this stack associate not found response has a 2xx status code
func (o *StackAssociateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this stack associate not found response has a 3xx status code
func (o *StackAssociateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this stack associate not found response has a 4xx status code
func (o *StackAssociateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this stack associate not found response has a 5xx status code
func (o *StackAssociateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this stack associate not found response a status code equal to that given
func (o *StackAssociateNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the stack associate not found response
func (o *StackAssociateNotFound) Code() int {
	return 404
}

func (o *StackAssociateNotFound) Error() string {
	return fmt.Sprintf("[PUT /stacks/{id}/associate][%d] stackAssociateNotFound", 404)
}

func (o *StackAssociateNotFound) String() string {
	return fmt.Sprintf("[PUT /stacks/{id}/associate][%d] stackAssociateNotFound", 404)
}

func (o *StackAssociateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStackAssociateInternalServerError creates a StackAssociateInternalServerError with default headers values
func NewStackAssociateInternalServerError() *StackAssociateInternalServerError {
	return &StackAssociateInternalServerError{}
}

/*
StackAssociateInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type StackAssociateInternalServerError struct {
}

// IsSuccess returns true when this stack associate internal server error response has a 2xx status code
func (o *StackAssociateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this stack associate internal server error response has a 3xx status code
func (o *StackAssociateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this stack associate internal server error response has a 4xx status code
func (o *StackAssociateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this stack associate internal server error response has a 5xx status code
func (o *StackAssociateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this stack associate internal server error response a status code equal to that given
func (o *StackAssociateInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the stack associate internal server error response
func (o *StackAssociateInternalServerError) Code() int {
	return 500
}

func (o *StackAssociateInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /stacks/{id}/associate][%d] stackAssociateInternalServerError", 500)
}

func (o *StackAssociateInternalServerError) String() string {
	return fmt.Sprintf("[PUT /stacks/{id}/associate][%d] stackAssociateInternalServerError", 500)
}

func (o *StackAssociateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
