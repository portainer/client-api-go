// Code generated by go-swagger; DO NOT EDIT.

package edge_stacks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewEdgeStackLogsCollectParams creates a new EdgeStackLogsCollectParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewEdgeStackLogsCollectParams() *EdgeStackLogsCollectParams {
	return &EdgeStackLogsCollectParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewEdgeStackLogsCollectParamsWithTimeout creates a new EdgeStackLogsCollectParams object
// with the ability to set a timeout on a request.
func NewEdgeStackLogsCollectParamsWithTimeout(timeout time.Duration) *EdgeStackLogsCollectParams {
	return &EdgeStackLogsCollectParams{
		timeout: timeout,
	}
}

// NewEdgeStackLogsCollectParamsWithContext creates a new EdgeStackLogsCollectParams object
// with the ability to set a context for a request.
func NewEdgeStackLogsCollectParamsWithContext(ctx context.Context) *EdgeStackLogsCollectParams {
	return &EdgeStackLogsCollectParams{
		Context: ctx,
	}
}

// NewEdgeStackLogsCollectParamsWithHTTPClient creates a new EdgeStackLogsCollectParams object
// with the ability to set a custom HTTPClient for a request.
func NewEdgeStackLogsCollectParamsWithHTTPClient(client *http.Client) *EdgeStackLogsCollectParams {
	return &EdgeStackLogsCollectParams{
		HTTPClient: client,
	}
}

/*
EdgeStackLogsCollectParams contains all the parameters to send to the API endpoint

	for the edge stack logs collect operation.

	Typically these are written to a http.Request.
*/
type EdgeStackLogsCollectParams struct {

	/* ContainerID.

	   Container Id
	*/
	ContainerID *string

	/* EndpointID.

	   Environment Id
	*/
	EndpointID int64

	/* ID.

	   EdgeStack Id
	*/
	ID int64

	/* Since.

	   Start time to request for the logs
	*/
	Since *string

	/* Tail.

	   Number of lines to request for the logs
	*/
	Tail *int64

	/* Until.

	   End time to request for the logs
	*/
	Until *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the edge stack logs collect params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *EdgeStackLogsCollectParams) WithDefaults() *EdgeStackLogsCollectParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the edge stack logs collect params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *EdgeStackLogsCollectParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the edge stack logs collect params
func (o *EdgeStackLogsCollectParams) WithTimeout(timeout time.Duration) *EdgeStackLogsCollectParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the edge stack logs collect params
func (o *EdgeStackLogsCollectParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the edge stack logs collect params
func (o *EdgeStackLogsCollectParams) WithContext(ctx context.Context) *EdgeStackLogsCollectParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the edge stack logs collect params
func (o *EdgeStackLogsCollectParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the edge stack logs collect params
func (o *EdgeStackLogsCollectParams) WithHTTPClient(client *http.Client) *EdgeStackLogsCollectParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the edge stack logs collect params
func (o *EdgeStackLogsCollectParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithContainerID adds the containerID to the edge stack logs collect params
func (o *EdgeStackLogsCollectParams) WithContainerID(containerID *string) *EdgeStackLogsCollectParams {
	o.SetContainerID(containerID)
	return o
}

// SetContainerID adds the containerId to the edge stack logs collect params
func (o *EdgeStackLogsCollectParams) SetContainerID(containerID *string) {
	o.ContainerID = containerID
}

// WithEndpointID adds the endpointID to the edge stack logs collect params
func (o *EdgeStackLogsCollectParams) WithEndpointID(endpointID int64) *EdgeStackLogsCollectParams {
	o.SetEndpointID(endpointID)
	return o
}

// SetEndpointID adds the endpointId to the edge stack logs collect params
func (o *EdgeStackLogsCollectParams) SetEndpointID(endpointID int64) {
	o.EndpointID = endpointID
}

// WithID adds the id to the edge stack logs collect params
func (o *EdgeStackLogsCollectParams) WithID(id int64) *EdgeStackLogsCollectParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the edge stack logs collect params
func (o *EdgeStackLogsCollectParams) SetID(id int64) {
	o.ID = id
}

// WithSince adds the since to the edge stack logs collect params
func (o *EdgeStackLogsCollectParams) WithSince(since *string) *EdgeStackLogsCollectParams {
	o.SetSince(since)
	return o
}

// SetSince adds the since to the edge stack logs collect params
func (o *EdgeStackLogsCollectParams) SetSince(since *string) {
	o.Since = since
}

// WithTail adds the tail to the edge stack logs collect params
func (o *EdgeStackLogsCollectParams) WithTail(tail *int64) *EdgeStackLogsCollectParams {
	o.SetTail(tail)
	return o
}

// SetTail adds the tail to the edge stack logs collect params
func (o *EdgeStackLogsCollectParams) SetTail(tail *int64) {
	o.Tail = tail
}

// WithUntil adds the until to the edge stack logs collect params
func (o *EdgeStackLogsCollectParams) WithUntil(until *string) *EdgeStackLogsCollectParams {
	o.SetUntil(until)
	return o
}

// SetUntil adds the until to the edge stack logs collect params
func (o *EdgeStackLogsCollectParams) SetUntil(until *string) {
	o.Until = until
}

// WriteToRequest writes these params to a swagger request
func (o *EdgeStackLogsCollectParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ContainerID != nil {

		// query param container_id
		var qrContainerID string

		if o.ContainerID != nil {
			qrContainerID = *o.ContainerID
		}
		qContainerID := qrContainerID
		if qContainerID != "" {

			if err := r.SetQueryParam("container_id", qContainerID); err != nil {
				return err
			}
		}
	}

	// path param endpoint_id
	if err := r.SetPathParam("endpoint_id", swag.FormatInt64(o.EndpointID)); err != nil {
		return err
	}

	// path param id
	if err := r.SetPathParam("id", swag.FormatInt64(o.ID)); err != nil {
		return err
	}

	if o.Since != nil {

		// query param since
		var qrSince string

		if o.Since != nil {
			qrSince = *o.Since
		}
		qSince := qrSince
		if qSince != "" {

			if err := r.SetQueryParam("since", qSince); err != nil {
				return err
			}
		}
	}

	if o.Tail != nil {

		// query param tail
		var qrTail int64

		if o.Tail != nil {
			qrTail = *o.Tail
		}
		qTail := swag.FormatInt64(qrTail)
		if qTail != "" {

			if err := r.SetQueryParam("tail", qTail); err != nil {
				return err
			}
		}
	}

	if o.Until != nil {

		// query param until
		var qrUntil string

		if o.Until != nil {
			qrUntil = *o.Until
		}
		qUntil := qrUntil
		if qUntil != "" {

			if err := r.SetQueryParam("until", qUntil); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
