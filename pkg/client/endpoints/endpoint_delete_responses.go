// Code generated by go-swagger; DO NOT EDIT.

package endpoints

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// EndpointDeleteReader is a Reader for the EndpointDelete structure.
type EndpointDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EndpointDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewEndpointDeleteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewEndpointDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewEndpointDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewEndpointDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewEndpointDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /endpoints/{id}] EndpointDelete", response, response.Code())
	}
}

// NewEndpointDeleteNoContent creates a EndpointDeleteNoContent with default headers values
func NewEndpointDeleteNoContent() *EndpointDeleteNoContent {
	return &EndpointDeleteNoContent{}
}

/*
EndpointDeleteNoContent describes a response with status code 204, with default header values.

Environment successfully deleted.
*/
type EndpointDeleteNoContent struct {
}

// IsSuccess returns true when this endpoint delete no content response has a 2xx status code
func (o *EndpointDeleteNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this endpoint delete no content response has a 3xx status code
func (o *EndpointDeleteNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this endpoint delete no content response has a 4xx status code
func (o *EndpointDeleteNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this endpoint delete no content response has a 5xx status code
func (o *EndpointDeleteNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this endpoint delete no content response a status code equal to that given
func (o *EndpointDeleteNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the endpoint delete no content response
func (o *EndpointDeleteNoContent) Code() int {
	return 204
}

func (o *EndpointDeleteNoContent) Error() string {
	return fmt.Sprintf("[DELETE /endpoints/{id}][%d] endpointDeleteNoContent", 204)
}

func (o *EndpointDeleteNoContent) String() string {
	return fmt.Sprintf("[DELETE /endpoints/{id}][%d] endpointDeleteNoContent", 204)
}

func (o *EndpointDeleteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewEndpointDeleteBadRequest creates a EndpointDeleteBadRequest with default headers values
func NewEndpointDeleteBadRequest() *EndpointDeleteBadRequest {
	return &EndpointDeleteBadRequest{}
}

/*
EndpointDeleteBadRequest describes a response with status code 400, with default header values.

Invalid request payload, such as missing required fields or fields not meeting validation criteria.
*/
type EndpointDeleteBadRequest struct {
}

// IsSuccess returns true when this endpoint delete bad request response has a 2xx status code
func (o *EndpointDeleteBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this endpoint delete bad request response has a 3xx status code
func (o *EndpointDeleteBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this endpoint delete bad request response has a 4xx status code
func (o *EndpointDeleteBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this endpoint delete bad request response has a 5xx status code
func (o *EndpointDeleteBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this endpoint delete bad request response a status code equal to that given
func (o *EndpointDeleteBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the endpoint delete bad request response
func (o *EndpointDeleteBadRequest) Code() int {
	return 400
}

func (o *EndpointDeleteBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /endpoints/{id}][%d] endpointDeleteBadRequest", 400)
}

func (o *EndpointDeleteBadRequest) String() string {
	return fmt.Sprintf("[DELETE /endpoints/{id}][%d] endpointDeleteBadRequest", 400)
}

func (o *EndpointDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewEndpointDeleteForbidden creates a EndpointDeleteForbidden with default headers values
func NewEndpointDeleteForbidden() *EndpointDeleteForbidden {
	return &EndpointDeleteForbidden{}
}

/*
EndpointDeleteForbidden describes a response with status code 403, with default header values.

Unauthorized access or operation not allowed.
*/
type EndpointDeleteForbidden struct {
}

// IsSuccess returns true when this endpoint delete forbidden response has a 2xx status code
func (o *EndpointDeleteForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this endpoint delete forbidden response has a 3xx status code
func (o *EndpointDeleteForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this endpoint delete forbidden response has a 4xx status code
func (o *EndpointDeleteForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this endpoint delete forbidden response has a 5xx status code
func (o *EndpointDeleteForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this endpoint delete forbidden response a status code equal to that given
func (o *EndpointDeleteForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the endpoint delete forbidden response
func (o *EndpointDeleteForbidden) Code() int {
	return 403
}

func (o *EndpointDeleteForbidden) Error() string {
	return fmt.Sprintf("[DELETE /endpoints/{id}][%d] endpointDeleteForbidden", 403)
}

func (o *EndpointDeleteForbidden) String() string {
	return fmt.Sprintf("[DELETE /endpoints/{id}][%d] endpointDeleteForbidden", 403)
}

func (o *EndpointDeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewEndpointDeleteNotFound creates a EndpointDeleteNotFound with default headers values
func NewEndpointDeleteNotFound() *EndpointDeleteNotFound {
	return &EndpointDeleteNotFound{}
}

/*
EndpointDeleteNotFound describes a response with status code 404, with default header values.

Unable to find the environment with the specified identifier inside the database.
*/
type EndpointDeleteNotFound struct {
}

// IsSuccess returns true when this endpoint delete not found response has a 2xx status code
func (o *EndpointDeleteNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this endpoint delete not found response has a 3xx status code
func (o *EndpointDeleteNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this endpoint delete not found response has a 4xx status code
func (o *EndpointDeleteNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this endpoint delete not found response has a 5xx status code
func (o *EndpointDeleteNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this endpoint delete not found response a status code equal to that given
func (o *EndpointDeleteNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the endpoint delete not found response
func (o *EndpointDeleteNotFound) Code() int {
	return 404
}

func (o *EndpointDeleteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /endpoints/{id}][%d] endpointDeleteNotFound", 404)
}

func (o *EndpointDeleteNotFound) String() string {
	return fmt.Sprintf("[DELETE /endpoints/{id}][%d] endpointDeleteNotFound", 404)
}

func (o *EndpointDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewEndpointDeleteInternalServerError creates a EndpointDeleteInternalServerError with default headers values
func NewEndpointDeleteInternalServerError() *EndpointDeleteInternalServerError {
	return &EndpointDeleteInternalServerError{}
}

/*
EndpointDeleteInternalServerError describes a response with status code 500, with default header values.

Server error occurred while attempting to delete the environment.
*/
type EndpointDeleteInternalServerError struct {
}

// IsSuccess returns true when this endpoint delete internal server error response has a 2xx status code
func (o *EndpointDeleteInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this endpoint delete internal server error response has a 3xx status code
func (o *EndpointDeleteInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this endpoint delete internal server error response has a 4xx status code
func (o *EndpointDeleteInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this endpoint delete internal server error response has a 5xx status code
func (o *EndpointDeleteInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this endpoint delete internal server error response a status code equal to that given
func (o *EndpointDeleteInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the endpoint delete internal server error response
func (o *EndpointDeleteInternalServerError) Code() int {
	return 500
}

func (o *EndpointDeleteInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /endpoints/{id}][%d] endpointDeleteInternalServerError", 500)
}

func (o *EndpointDeleteInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /endpoints/{id}][%d] endpointDeleteInternalServerError", 500)
}

func (o *EndpointDeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
