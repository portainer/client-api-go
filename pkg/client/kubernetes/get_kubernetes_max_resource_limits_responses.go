// Code generated by go-swagger; DO NOT EDIT.

package kubernetes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/portainer/client-api-go/v2/pkg/models"
)

// GetKubernetesMaxResourceLimitsReader is a Reader for the GetKubernetesMaxResourceLimits structure.
type GetKubernetesMaxResourceLimitsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKubernetesMaxResourceLimitsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetKubernetesMaxResourceLimitsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetKubernetesMaxResourceLimitsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetKubernetesMaxResourceLimitsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetKubernetesMaxResourceLimitsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetKubernetesMaxResourceLimitsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetKubernetesMaxResourceLimitsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /kubernetes/{id}/max_resource_limits] GetKubernetesMaxResourceLimits", response, response.Code())
	}
}

// NewGetKubernetesMaxResourceLimitsOK creates a GetKubernetesMaxResourceLimitsOK with default headers values
func NewGetKubernetesMaxResourceLimitsOK() *GetKubernetesMaxResourceLimitsOK {
	return &GetKubernetesMaxResourceLimitsOK{}
}

/*
GetKubernetesMaxResourceLimitsOK describes a response with status code 200, with default header values.

Success
*/
type GetKubernetesMaxResourceLimitsOK struct {
	Payload models.PortainerK8sNodesLimits
}

// IsSuccess returns true when this get kubernetes max resource limits o k response has a 2xx status code
func (o *GetKubernetesMaxResourceLimitsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get kubernetes max resource limits o k response has a 3xx status code
func (o *GetKubernetesMaxResourceLimitsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kubernetes max resource limits o k response has a 4xx status code
func (o *GetKubernetesMaxResourceLimitsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get kubernetes max resource limits o k response has a 5xx status code
func (o *GetKubernetesMaxResourceLimitsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get kubernetes max resource limits o k response a status code equal to that given
func (o *GetKubernetesMaxResourceLimitsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get kubernetes max resource limits o k response
func (o *GetKubernetesMaxResourceLimitsOK) Code() int {
	return 200
}

func (o *GetKubernetesMaxResourceLimitsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /kubernetes/{id}/max_resource_limits][%d] getKubernetesMaxResourceLimitsOK %s", 200, payload)
}

func (o *GetKubernetesMaxResourceLimitsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /kubernetes/{id}/max_resource_limits][%d] getKubernetesMaxResourceLimitsOK %s", 200, payload)
}

func (o *GetKubernetesMaxResourceLimitsOK) GetPayload() models.PortainerK8sNodesLimits {
	return o.Payload
}

func (o *GetKubernetesMaxResourceLimitsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKubernetesMaxResourceLimitsBadRequest creates a GetKubernetesMaxResourceLimitsBadRequest with default headers values
func NewGetKubernetesMaxResourceLimitsBadRequest() *GetKubernetesMaxResourceLimitsBadRequest {
	return &GetKubernetesMaxResourceLimitsBadRequest{}
}

/*
GetKubernetesMaxResourceLimitsBadRequest describes a response with status code 400, with default header values.

Invalid request
*/
type GetKubernetesMaxResourceLimitsBadRequest struct {
}

// IsSuccess returns true when this get kubernetes max resource limits bad request response has a 2xx status code
func (o *GetKubernetesMaxResourceLimitsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get kubernetes max resource limits bad request response has a 3xx status code
func (o *GetKubernetesMaxResourceLimitsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kubernetes max resource limits bad request response has a 4xx status code
func (o *GetKubernetesMaxResourceLimitsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get kubernetes max resource limits bad request response has a 5xx status code
func (o *GetKubernetesMaxResourceLimitsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get kubernetes max resource limits bad request response a status code equal to that given
func (o *GetKubernetesMaxResourceLimitsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get kubernetes max resource limits bad request response
func (o *GetKubernetesMaxResourceLimitsBadRequest) Code() int {
	return 400
}

func (o *GetKubernetesMaxResourceLimitsBadRequest) Error() string {
	return fmt.Sprintf("[GET /kubernetes/{id}/max_resource_limits][%d] getKubernetesMaxResourceLimitsBadRequest", 400)
}

func (o *GetKubernetesMaxResourceLimitsBadRequest) String() string {
	return fmt.Sprintf("[GET /kubernetes/{id}/max_resource_limits][%d] getKubernetesMaxResourceLimitsBadRequest", 400)
}

func (o *GetKubernetesMaxResourceLimitsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetKubernetesMaxResourceLimitsUnauthorized creates a GetKubernetesMaxResourceLimitsUnauthorized with default headers values
func NewGetKubernetesMaxResourceLimitsUnauthorized() *GetKubernetesMaxResourceLimitsUnauthorized {
	return &GetKubernetesMaxResourceLimitsUnauthorized{}
}

/*
GetKubernetesMaxResourceLimitsUnauthorized describes a response with status code 401, with default header values.

Unauthorized access - the user is not authenticated or does not have the necessary permissions. Ensure that you have provided a valid API key or JWT token, and that you have the required permissions.
*/
type GetKubernetesMaxResourceLimitsUnauthorized struct {
}

// IsSuccess returns true when this get kubernetes max resource limits unauthorized response has a 2xx status code
func (o *GetKubernetesMaxResourceLimitsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get kubernetes max resource limits unauthorized response has a 3xx status code
func (o *GetKubernetesMaxResourceLimitsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kubernetes max resource limits unauthorized response has a 4xx status code
func (o *GetKubernetesMaxResourceLimitsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get kubernetes max resource limits unauthorized response has a 5xx status code
func (o *GetKubernetesMaxResourceLimitsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get kubernetes max resource limits unauthorized response a status code equal to that given
func (o *GetKubernetesMaxResourceLimitsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get kubernetes max resource limits unauthorized response
func (o *GetKubernetesMaxResourceLimitsUnauthorized) Code() int {
	return 401
}

func (o *GetKubernetesMaxResourceLimitsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /kubernetes/{id}/max_resource_limits][%d] getKubernetesMaxResourceLimitsUnauthorized", 401)
}

func (o *GetKubernetesMaxResourceLimitsUnauthorized) String() string {
	return fmt.Sprintf("[GET /kubernetes/{id}/max_resource_limits][%d] getKubernetesMaxResourceLimitsUnauthorized", 401)
}

func (o *GetKubernetesMaxResourceLimitsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetKubernetesMaxResourceLimitsForbidden creates a GetKubernetesMaxResourceLimitsForbidden with default headers values
func NewGetKubernetesMaxResourceLimitsForbidden() *GetKubernetesMaxResourceLimitsForbidden {
	return &GetKubernetesMaxResourceLimitsForbidden{}
}

/*
GetKubernetesMaxResourceLimitsForbidden describes a response with status code 403, with default header values.

Permission denied - the user is authenticated but does not have the necessary permissions to access the requested resource or perform the specified operation. Check your user roles and permissions.
*/
type GetKubernetesMaxResourceLimitsForbidden struct {
}

// IsSuccess returns true when this get kubernetes max resource limits forbidden response has a 2xx status code
func (o *GetKubernetesMaxResourceLimitsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get kubernetes max resource limits forbidden response has a 3xx status code
func (o *GetKubernetesMaxResourceLimitsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kubernetes max resource limits forbidden response has a 4xx status code
func (o *GetKubernetesMaxResourceLimitsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get kubernetes max resource limits forbidden response has a 5xx status code
func (o *GetKubernetesMaxResourceLimitsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get kubernetes max resource limits forbidden response a status code equal to that given
func (o *GetKubernetesMaxResourceLimitsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get kubernetes max resource limits forbidden response
func (o *GetKubernetesMaxResourceLimitsForbidden) Code() int {
	return 403
}

func (o *GetKubernetesMaxResourceLimitsForbidden) Error() string {
	return fmt.Sprintf("[GET /kubernetes/{id}/max_resource_limits][%d] getKubernetesMaxResourceLimitsForbidden", 403)
}

func (o *GetKubernetesMaxResourceLimitsForbidden) String() string {
	return fmt.Sprintf("[GET /kubernetes/{id}/max_resource_limits][%d] getKubernetesMaxResourceLimitsForbidden", 403)
}

func (o *GetKubernetesMaxResourceLimitsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetKubernetesMaxResourceLimitsNotFound creates a GetKubernetesMaxResourceLimitsNotFound with default headers values
func NewGetKubernetesMaxResourceLimitsNotFound() *GetKubernetesMaxResourceLimitsNotFound {
	return &GetKubernetesMaxResourceLimitsNotFound{}
}

/*
GetKubernetesMaxResourceLimitsNotFound describes a response with status code 404, with default header values.

Unable to find an environment with the specified identifier.
*/
type GetKubernetesMaxResourceLimitsNotFound struct {
}

// IsSuccess returns true when this get kubernetes max resource limits not found response has a 2xx status code
func (o *GetKubernetesMaxResourceLimitsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get kubernetes max resource limits not found response has a 3xx status code
func (o *GetKubernetesMaxResourceLimitsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kubernetes max resource limits not found response has a 4xx status code
func (o *GetKubernetesMaxResourceLimitsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get kubernetes max resource limits not found response has a 5xx status code
func (o *GetKubernetesMaxResourceLimitsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get kubernetes max resource limits not found response a status code equal to that given
func (o *GetKubernetesMaxResourceLimitsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get kubernetes max resource limits not found response
func (o *GetKubernetesMaxResourceLimitsNotFound) Code() int {
	return 404
}

func (o *GetKubernetesMaxResourceLimitsNotFound) Error() string {
	return fmt.Sprintf("[GET /kubernetes/{id}/max_resource_limits][%d] getKubernetesMaxResourceLimitsNotFound", 404)
}

func (o *GetKubernetesMaxResourceLimitsNotFound) String() string {
	return fmt.Sprintf("[GET /kubernetes/{id}/max_resource_limits][%d] getKubernetesMaxResourceLimitsNotFound", 404)
}

func (o *GetKubernetesMaxResourceLimitsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetKubernetesMaxResourceLimitsInternalServerError creates a GetKubernetesMaxResourceLimitsInternalServerError with default headers values
func NewGetKubernetesMaxResourceLimitsInternalServerError() *GetKubernetesMaxResourceLimitsInternalServerError {
	return &GetKubernetesMaxResourceLimitsInternalServerError{}
}

/*
GetKubernetesMaxResourceLimitsInternalServerError describes a response with status code 500, with default header values.

Server error occurred while attempting to retrieve nodes limits.
*/
type GetKubernetesMaxResourceLimitsInternalServerError struct {
}

// IsSuccess returns true when this get kubernetes max resource limits internal server error response has a 2xx status code
func (o *GetKubernetesMaxResourceLimitsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get kubernetes max resource limits internal server error response has a 3xx status code
func (o *GetKubernetesMaxResourceLimitsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kubernetes max resource limits internal server error response has a 4xx status code
func (o *GetKubernetesMaxResourceLimitsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get kubernetes max resource limits internal server error response has a 5xx status code
func (o *GetKubernetesMaxResourceLimitsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get kubernetes max resource limits internal server error response a status code equal to that given
func (o *GetKubernetesMaxResourceLimitsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get kubernetes max resource limits internal server error response
func (o *GetKubernetesMaxResourceLimitsInternalServerError) Code() int {
	return 500
}

func (o *GetKubernetesMaxResourceLimitsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /kubernetes/{id}/max_resource_limits][%d] getKubernetesMaxResourceLimitsInternalServerError", 500)
}

func (o *GetKubernetesMaxResourceLimitsInternalServerError) String() string {
	return fmt.Sprintf("[GET /kubernetes/{id}/max_resource_limits][%d] getKubernetesMaxResourceLimitsInternalServerError", 500)
}

func (o *GetKubernetesMaxResourceLimitsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
