// Code generated by go-swagger; DO NOT EDIT.

package kubernetes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/portainer/client-api-go/v2/pkg/models"
)

// UpdateKubernetesNamespaceReader is a Reader for the UpdateKubernetesNamespace structure.
type UpdateKubernetesNamespaceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateKubernetesNamespaceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateKubernetesNamespaceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateKubernetesNamespaceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateKubernetesNamespaceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateKubernetesNamespaceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateKubernetesNamespaceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateKubernetesNamespaceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /kubernetes/{id}/namespaces/{namespace}] UpdateKubernetesNamespace", response, response.Code())
	}
}

// NewUpdateKubernetesNamespaceOK creates a UpdateKubernetesNamespaceOK with default headers values
func NewUpdateKubernetesNamespaceOK() *UpdateKubernetesNamespaceOK {
	return &UpdateKubernetesNamespaceOK{}
}

/*
UpdateKubernetesNamespaceOK describes a response with status code 200, with default header values.

Success
*/
type UpdateKubernetesNamespaceOK struct {
	Payload *models.PortainerK8sNamespaceInfo
}

// IsSuccess returns true when this update kubernetes namespace o k response has a 2xx status code
func (o *UpdateKubernetesNamespaceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update kubernetes namespace o k response has a 3xx status code
func (o *UpdateKubernetesNamespaceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update kubernetes namespace o k response has a 4xx status code
func (o *UpdateKubernetesNamespaceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update kubernetes namespace o k response has a 5xx status code
func (o *UpdateKubernetesNamespaceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update kubernetes namespace o k response a status code equal to that given
func (o *UpdateKubernetesNamespaceOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update kubernetes namespace o k response
func (o *UpdateKubernetesNamespaceOK) Code() int {
	return 200
}

func (o *UpdateKubernetesNamespaceOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /kubernetes/{id}/namespaces/{namespace}][%d] updateKubernetesNamespaceOK %s", 200, payload)
}

func (o *UpdateKubernetesNamespaceOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /kubernetes/{id}/namespaces/{namespace}][%d] updateKubernetesNamespaceOK %s", 200, payload)
}

func (o *UpdateKubernetesNamespaceOK) GetPayload() *models.PortainerK8sNamespaceInfo {
	return o.Payload
}

func (o *UpdateKubernetesNamespaceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PortainerK8sNamespaceInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateKubernetesNamespaceBadRequest creates a UpdateKubernetesNamespaceBadRequest with default headers values
func NewUpdateKubernetesNamespaceBadRequest() *UpdateKubernetesNamespaceBadRequest {
	return &UpdateKubernetesNamespaceBadRequest{}
}

/*
UpdateKubernetesNamespaceBadRequest describes a response with status code 400, with default header values.

Invalid request payload, such as missing required fields or fields not meeting validation criteria.
*/
type UpdateKubernetesNamespaceBadRequest struct {
}

// IsSuccess returns true when this update kubernetes namespace bad request response has a 2xx status code
func (o *UpdateKubernetesNamespaceBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update kubernetes namespace bad request response has a 3xx status code
func (o *UpdateKubernetesNamespaceBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update kubernetes namespace bad request response has a 4xx status code
func (o *UpdateKubernetesNamespaceBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update kubernetes namespace bad request response has a 5xx status code
func (o *UpdateKubernetesNamespaceBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update kubernetes namespace bad request response a status code equal to that given
func (o *UpdateKubernetesNamespaceBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update kubernetes namespace bad request response
func (o *UpdateKubernetesNamespaceBadRequest) Code() int {
	return 400
}

func (o *UpdateKubernetesNamespaceBadRequest) Error() string {
	return fmt.Sprintf("[PUT /kubernetes/{id}/namespaces/{namespace}][%d] updateKubernetesNamespaceBadRequest", 400)
}

func (o *UpdateKubernetesNamespaceBadRequest) String() string {
	return fmt.Sprintf("[PUT /kubernetes/{id}/namespaces/{namespace}][%d] updateKubernetesNamespaceBadRequest", 400)
}

func (o *UpdateKubernetesNamespaceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateKubernetesNamespaceUnauthorized creates a UpdateKubernetesNamespaceUnauthorized with default headers values
func NewUpdateKubernetesNamespaceUnauthorized() *UpdateKubernetesNamespaceUnauthorized {
	return &UpdateKubernetesNamespaceUnauthorized{}
}

/*
UpdateKubernetesNamespaceUnauthorized describes a response with status code 401, with default header values.

Unauthorized access - the user is not authenticated or does not have the necessary permissions. Ensure that you have provided a valid API key or JWT token, and that you have the required permissions.
*/
type UpdateKubernetesNamespaceUnauthorized struct {
}

// IsSuccess returns true when this update kubernetes namespace unauthorized response has a 2xx status code
func (o *UpdateKubernetesNamespaceUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update kubernetes namespace unauthorized response has a 3xx status code
func (o *UpdateKubernetesNamespaceUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update kubernetes namespace unauthorized response has a 4xx status code
func (o *UpdateKubernetesNamespaceUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update kubernetes namespace unauthorized response has a 5xx status code
func (o *UpdateKubernetesNamespaceUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update kubernetes namespace unauthorized response a status code equal to that given
func (o *UpdateKubernetesNamespaceUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update kubernetes namespace unauthorized response
func (o *UpdateKubernetesNamespaceUnauthorized) Code() int {
	return 401
}

func (o *UpdateKubernetesNamespaceUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /kubernetes/{id}/namespaces/{namespace}][%d] updateKubernetesNamespaceUnauthorized", 401)
}

func (o *UpdateKubernetesNamespaceUnauthorized) String() string {
	return fmt.Sprintf("[PUT /kubernetes/{id}/namespaces/{namespace}][%d] updateKubernetesNamespaceUnauthorized", 401)
}

func (o *UpdateKubernetesNamespaceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateKubernetesNamespaceForbidden creates a UpdateKubernetesNamespaceForbidden with default headers values
func NewUpdateKubernetesNamespaceForbidden() *UpdateKubernetesNamespaceForbidden {
	return &UpdateKubernetesNamespaceForbidden{}
}

/*
UpdateKubernetesNamespaceForbidden describes a response with status code 403, with default header values.

Permission denied - the user is authenticated but does not have the necessary permissions to access the requested resource or perform the specified operation. Check your user roles and permissions.
*/
type UpdateKubernetesNamespaceForbidden struct {
}

// IsSuccess returns true when this update kubernetes namespace forbidden response has a 2xx status code
func (o *UpdateKubernetesNamespaceForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update kubernetes namespace forbidden response has a 3xx status code
func (o *UpdateKubernetesNamespaceForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update kubernetes namespace forbidden response has a 4xx status code
func (o *UpdateKubernetesNamespaceForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update kubernetes namespace forbidden response has a 5xx status code
func (o *UpdateKubernetesNamespaceForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update kubernetes namespace forbidden response a status code equal to that given
func (o *UpdateKubernetesNamespaceForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update kubernetes namespace forbidden response
func (o *UpdateKubernetesNamespaceForbidden) Code() int {
	return 403
}

func (o *UpdateKubernetesNamespaceForbidden) Error() string {
	return fmt.Sprintf("[PUT /kubernetes/{id}/namespaces/{namespace}][%d] updateKubernetesNamespaceForbidden", 403)
}

func (o *UpdateKubernetesNamespaceForbidden) String() string {
	return fmt.Sprintf("[PUT /kubernetes/{id}/namespaces/{namespace}][%d] updateKubernetesNamespaceForbidden", 403)
}

func (o *UpdateKubernetesNamespaceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateKubernetesNamespaceNotFound creates a UpdateKubernetesNamespaceNotFound with default headers values
func NewUpdateKubernetesNamespaceNotFound() *UpdateKubernetesNamespaceNotFound {
	return &UpdateKubernetesNamespaceNotFound{}
}

/*
UpdateKubernetesNamespaceNotFound describes a response with status code 404, with default header values.

Unable to find an environment with the specified identifier or unable to find a specific namespace.
*/
type UpdateKubernetesNamespaceNotFound struct {
}

// IsSuccess returns true when this update kubernetes namespace not found response has a 2xx status code
func (o *UpdateKubernetesNamespaceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update kubernetes namespace not found response has a 3xx status code
func (o *UpdateKubernetesNamespaceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update kubernetes namespace not found response has a 4xx status code
func (o *UpdateKubernetesNamespaceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update kubernetes namespace not found response has a 5xx status code
func (o *UpdateKubernetesNamespaceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update kubernetes namespace not found response a status code equal to that given
func (o *UpdateKubernetesNamespaceNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update kubernetes namespace not found response
func (o *UpdateKubernetesNamespaceNotFound) Code() int {
	return 404
}

func (o *UpdateKubernetesNamespaceNotFound) Error() string {
	return fmt.Sprintf("[PUT /kubernetes/{id}/namespaces/{namespace}][%d] updateKubernetesNamespaceNotFound", 404)
}

func (o *UpdateKubernetesNamespaceNotFound) String() string {
	return fmt.Sprintf("[PUT /kubernetes/{id}/namespaces/{namespace}][%d] updateKubernetesNamespaceNotFound", 404)
}

func (o *UpdateKubernetesNamespaceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateKubernetesNamespaceInternalServerError creates a UpdateKubernetesNamespaceInternalServerError with default headers values
func NewUpdateKubernetesNamespaceInternalServerError() *UpdateKubernetesNamespaceInternalServerError {
	return &UpdateKubernetesNamespaceInternalServerError{}
}

/*
UpdateKubernetesNamespaceInternalServerError describes a response with status code 500, with default header values.

Server error occurred while attempting to update the namespace.
*/
type UpdateKubernetesNamespaceInternalServerError struct {
}

// IsSuccess returns true when this update kubernetes namespace internal server error response has a 2xx status code
func (o *UpdateKubernetesNamespaceInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update kubernetes namespace internal server error response has a 3xx status code
func (o *UpdateKubernetesNamespaceInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update kubernetes namespace internal server error response has a 4xx status code
func (o *UpdateKubernetesNamespaceInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update kubernetes namespace internal server error response has a 5xx status code
func (o *UpdateKubernetesNamespaceInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update kubernetes namespace internal server error response a status code equal to that given
func (o *UpdateKubernetesNamespaceInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update kubernetes namespace internal server error response
func (o *UpdateKubernetesNamespaceInternalServerError) Code() int {
	return 500
}

func (o *UpdateKubernetesNamespaceInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /kubernetes/{id}/namespaces/{namespace}][%d] updateKubernetesNamespaceInternalServerError", 500)
}

func (o *UpdateKubernetesNamespaceInternalServerError) String() string {
	return fmt.Sprintf("[PUT /kubernetes/{id}/namespaces/{namespace}][%d] updateKubernetesNamespaceInternalServerError", 500)
}

func (o *UpdateKubernetesNamespaceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
