// Code generated by go-swagger; DO NOT EDIT.

package kubernetes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// RestartKubernetesApplicationReader is a Reader for the RestartKubernetesApplication structure.
type RestartKubernetesApplicationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RestartKubernetesApplicationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewRestartKubernetesApplicationNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRestartKubernetesApplicationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRestartKubernetesApplicationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRestartKubernetesApplicationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRestartKubernetesApplicationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRestartKubernetesApplicationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /kubernetes/{id}/namespaces/{namespace}/applications/{kind}/{name}/restart] restartKubernetesApplication", response, response.Code())
	}
}

// NewRestartKubernetesApplicationNoContent creates a RestartKubernetesApplicationNoContent with default headers values
func NewRestartKubernetesApplicationNoContent() *RestartKubernetesApplicationNoContent {
	return &RestartKubernetesApplicationNoContent{}
}

/*
RestartKubernetesApplicationNoContent describes a response with status code 204, with default header values.

Success
*/
type RestartKubernetesApplicationNoContent struct {
}

// IsSuccess returns true when this restart kubernetes application no content response has a 2xx status code
func (o *RestartKubernetesApplicationNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this restart kubernetes application no content response has a 3xx status code
func (o *RestartKubernetesApplicationNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restart kubernetes application no content response has a 4xx status code
func (o *RestartKubernetesApplicationNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this restart kubernetes application no content response has a 5xx status code
func (o *RestartKubernetesApplicationNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this restart kubernetes application no content response a status code equal to that given
func (o *RestartKubernetesApplicationNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the restart kubernetes application no content response
func (o *RestartKubernetesApplicationNoContent) Code() int {
	return 204
}

func (o *RestartKubernetesApplicationNoContent) Error() string {
	return fmt.Sprintf("[POST /kubernetes/{id}/namespaces/{namespace}/applications/{kind}/{name}/restart][%d] restartKubernetesApplicationNoContent", 204)
}

func (o *RestartKubernetesApplicationNoContent) String() string {
	return fmt.Sprintf("[POST /kubernetes/{id}/namespaces/{namespace}/applications/{kind}/{name}/restart][%d] restartKubernetesApplicationNoContent", 204)
}

func (o *RestartKubernetesApplicationNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRestartKubernetesApplicationBadRequest creates a RestartKubernetesApplicationBadRequest with default headers values
func NewRestartKubernetesApplicationBadRequest() *RestartKubernetesApplicationBadRequest {
	return &RestartKubernetesApplicationBadRequest{}
}

/*
RestartKubernetesApplicationBadRequest describes a response with status code 400, with default header values.

Invalid request, such as missing required fields or fields not meeting validation criteria.
*/
type RestartKubernetesApplicationBadRequest struct {
}

// IsSuccess returns true when this restart kubernetes application bad request response has a 2xx status code
func (o *RestartKubernetesApplicationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restart kubernetes application bad request response has a 3xx status code
func (o *RestartKubernetesApplicationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restart kubernetes application bad request response has a 4xx status code
func (o *RestartKubernetesApplicationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this restart kubernetes application bad request response has a 5xx status code
func (o *RestartKubernetesApplicationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this restart kubernetes application bad request response a status code equal to that given
func (o *RestartKubernetesApplicationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the restart kubernetes application bad request response
func (o *RestartKubernetesApplicationBadRequest) Code() int {
	return 400
}

func (o *RestartKubernetesApplicationBadRequest) Error() string {
	return fmt.Sprintf("[POST /kubernetes/{id}/namespaces/{namespace}/applications/{kind}/{name}/restart][%d] restartKubernetesApplicationBadRequest", 400)
}

func (o *RestartKubernetesApplicationBadRequest) String() string {
	return fmt.Sprintf("[POST /kubernetes/{id}/namespaces/{namespace}/applications/{kind}/{name}/restart][%d] restartKubernetesApplicationBadRequest", 400)
}

func (o *RestartKubernetesApplicationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRestartKubernetesApplicationUnauthorized creates a RestartKubernetesApplicationUnauthorized with default headers values
func NewRestartKubernetesApplicationUnauthorized() *RestartKubernetesApplicationUnauthorized {
	return &RestartKubernetesApplicationUnauthorized{}
}

/*
RestartKubernetesApplicationUnauthorized describes a response with status code 401, with default header values.

Unauthorized access - the user is not authenticated or does not have the necessary permissions. Ensure that you have provided a valid API key or JWT token, and that you have the required permissions.
*/
type RestartKubernetesApplicationUnauthorized struct {
}

// IsSuccess returns true when this restart kubernetes application unauthorized response has a 2xx status code
func (o *RestartKubernetesApplicationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restart kubernetes application unauthorized response has a 3xx status code
func (o *RestartKubernetesApplicationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restart kubernetes application unauthorized response has a 4xx status code
func (o *RestartKubernetesApplicationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this restart kubernetes application unauthorized response has a 5xx status code
func (o *RestartKubernetesApplicationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this restart kubernetes application unauthorized response a status code equal to that given
func (o *RestartKubernetesApplicationUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the restart kubernetes application unauthorized response
func (o *RestartKubernetesApplicationUnauthorized) Code() int {
	return 401
}

func (o *RestartKubernetesApplicationUnauthorized) Error() string {
	return fmt.Sprintf("[POST /kubernetes/{id}/namespaces/{namespace}/applications/{kind}/{name}/restart][%d] restartKubernetesApplicationUnauthorized", 401)
}

func (o *RestartKubernetesApplicationUnauthorized) String() string {
	return fmt.Sprintf("[POST /kubernetes/{id}/namespaces/{namespace}/applications/{kind}/{name}/restart][%d] restartKubernetesApplicationUnauthorized", 401)
}

func (o *RestartKubernetesApplicationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRestartKubernetesApplicationForbidden creates a RestartKubernetesApplicationForbidden with default headers values
func NewRestartKubernetesApplicationForbidden() *RestartKubernetesApplicationForbidden {
	return &RestartKubernetesApplicationForbidden{}
}

/*
RestartKubernetesApplicationForbidden describes a response with status code 403, with default header values.

Permission denied - the user is authenticated but does not have the necessary permissions to access the requested resource or perform the specified operation. Check your user roles and permissions.
*/
type RestartKubernetesApplicationForbidden struct {
}

// IsSuccess returns true when this restart kubernetes application forbidden response has a 2xx status code
func (o *RestartKubernetesApplicationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restart kubernetes application forbidden response has a 3xx status code
func (o *RestartKubernetesApplicationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restart kubernetes application forbidden response has a 4xx status code
func (o *RestartKubernetesApplicationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this restart kubernetes application forbidden response has a 5xx status code
func (o *RestartKubernetesApplicationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this restart kubernetes application forbidden response a status code equal to that given
func (o *RestartKubernetesApplicationForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the restart kubernetes application forbidden response
func (o *RestartKubernetesApplicationForbidden) Code() int {
	return 403
}

func (o *RestartKubernetesApplicationForbidden) Error() string {
	return fmt.Sprintf("[POST /kubernetes/{id}/namespaces/{namespace}/applications/{kind}/{name}/restart][%d] restartKubernetesApplicationForbidden", 403)
}

func (o *RestartKubernetesApplicationForbidden) String() string {
	return fmt.Sprintf("[POST /kubernetes/{id}/namespaces/{namespace}/applications/{kind}/{name}/restart][%d] restartKubernetesApplicationForbidden", 403)
}

func (o *RestartKubernetesApplicationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRestartKubernetesApplicationNotFound creates a RestartKubernetesApplicationNotFound with default headers values
func NewRestartKubernetesApplicationNotFound() *RestartKubernetesApplicationNotFound {
	return &RestartKubernetesApplicationNotFound{}
}

/*
RestartKubernetesApplicationNotFound describes a response with status code 404, with default header values.

Unable to find an environment with the specified identifier or unable to find a specific application.
*/
type RestartKubernetesApplicationNotFound struct {
}

// IsSuccess returns true when this restart kubernetes application not found response has a 2xx status code
func (o *RestartKubernetesApplicationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restart kubernetes application not found response has a 3xx status code
func (o *RestartKubernetesApplicationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restart kubernetes application not found response has a 4xx status code
func (o *RestartKubernetesApplicationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this restart kubernetes application not found response has a 5xx status code
func (o *RestartKubernetesApplicationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this restart kubernetes application not found response a status code equal to that given
func (o *RestartKubernetesApplicationNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the restart kubernetes application not found response
func (o *RestartKubernetesApplicationNotFound) Code() int {
	return 404
}

func (o *RestartKubernetesApplicationNotFound) Error() string {
	return fmt.Sprintf("[POST /kubernetes/{id}/namespaces/{namespace}/applications/{kind}/{name}/restart][%d] restartKubernetesApplicationNotFound", 404)
}

func (o *RestartKubernetesApplicationNotFound) String() string {
	return fmt.Sprintf("[POST /kubernetes/{id}/namespaces/{namespace}/applications/{kind}/{name}/restart][%d] restartKubernetesApplicationNotFound", 404)
}

func (o *RestartKubernetesApplicationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRestartKubernetesApplicationInternalServerError creates a RestartKubernetesApplicationInternalServerError with default headers values
func NewRestartKubernetesApplicationInternalServerError() *RestartKubernetesApplicationInternalServerError {
	return &RestartKubernetesApplicationInternalServerError{}
}

/*
RestartKubernetesApplicationInternalServerError describes a response with status code 500, with default header values.

Server error occurred while attempting to restart application.
*/
type RestartKubernetesApplicationInternalServerError struct {
}

// IsSuccess returns true when this restart kubernetes application internal server error response has a 2xx status code
func (o *RestartKubernetesApplicationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restart kubernetes application internal server error response has a 3xx status code
func (o *RestartKubernetesApplicationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restart kubernetes application internal server error response has a 4xx status code
func (o *RestartKubernetesApplicationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this restart kubernetes application internal server error response has a 5xx status code
func (o *RestartKubernetesApplicationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this restart kubernetes application internal server error response a status code equal to that given
func (o *RestartKubernetesApplicationInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the restart kubernetes application internal server error response
func (o *RestartKubernetesApplicationInternalServerError) Code() int {
	return 500
}

func (o *RestartKubernetesApplicationInternalServerError) Error() string {
	return fmt.Sprintf("[POST /kubernetes/{id}/namespaces/{namespace}/applications/{kind}/{name}/restart][%d] restartKubernetesApplicationInternalServerError", 500)
}

func (o *RestartKubernetesApplicationInternalServerError) String() string {
	return fmt.Sprintf("[POST /kubernetes/{id}/namespaces/{namespace}/applications/{kind}/{name}/restart][%d] restartKubernetesApplicationInternalServerError", 500)
}

func (o *RestartKubernetesApplicationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
