// Code generated by go-swagger; DO NOT EDIT.

package kubernetes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetAllKubernetesConfigMapsCountReader is a Reader for the GetAllKubernetesConfigMapsCount structure.
type GetAllKubernetesConfigMapsCountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllKubernetesConfigMapsCountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllKubernetesConfigMapsCountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAllKubernetesConfigMapsCountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAllKubernetesConfigMapsCountUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllKubernetesConfigMapsCountForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllKubernetesConfigMapsCountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAllKubernetesConfigMapsCountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /kubernetes/{id}/configmaps/count] GetAllKubernetesConfigMapsCount", response, response.Code())
	}
}

// NewGetAllKubernetesConfigMapsCountOK creates a GetAllKubernetesConfigMapsCountOK with default headers values
func NewGetAllKubernetesConfigMapsCountOK() *GetAllKubernetesConfigMapsCountOK {
	return &GetAllKubernetesConfigMapsCountOK{}
}

/*
GetAllKubernetesConfigMapsCountOK describes a response with status code 200, with default header values.

Success
*/
type GetAllKubernetesConfigMapsCountOK struct {
	Payload int64
}

// IsSuccess returns true when this get all kubernetes config maps count o k response has a 2xx status code
func (o *GetAllKubernetesConfigMapsCountOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all kubernetes config maps count o k response has a 3xx status code
func (o *GetAllKubernetesConfigMapsCountOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all kubernetes config maps count o k response has a 4xx status code
func (o *GetAllKubernetesConfigMapsCountOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all kubernetes config maps count o k response has a 5xx status code
func (o *GetAllKubernetesConfigMapsCountOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all kubernetes config maps count o k response a status code equal to that given
func (o *GetAllKubernetesConfigMapsCountOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all kubernetes config maps count o k response
func (o *GetAllKubernetesConfigMapsCountOK) Code() int {
	return 200
}

func (o *GetAllKubernetesConfigMapsCountOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /kubernetes/{id}/configmaps/count][%d] getAllKubernetesConfigMapsCountOK %s", 200, payload)
}

func (o *GetAllKubernetesConfigMapsCountOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /kubernetes/{id}/configmaps/count][%d] getAllKubernetesConfigMapsCountOK %s", 200, payload)
}

func (o *GetAllKubernetesConfigMapsCountOK) GetPayload() int64 {
	return o.Payload
}

func (o *GetAllKubernetesConfigMapsCountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllKubernetesConfigMapsCountBadRequest creates a GetAllKubernetesConfigMapsCountBadRequest with default headers values
func NewGetAllKubernetesConfigMapsCountBadRequest() *GetAllKubernetesConfigMapsCountBadRequest {
	return &GetAllKubernetesConfigMapsCountBadRequest{}
}

/*
GetAllKubernetesConfigMapsCountBadRequest describes a response with status code 400, with default header values.

Invalid request payload, such as missing required fields or fields not meeting validation criteria.
*/
type GetAllKubernetesConfigMapsCountBadRequest struct {
}

// IsSuccess returns true when this get all kubernetes config maps count bad request response has a 2xx status code
func (o *GetAllKubernetesConfigMapsCountBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all kubernetes config maps count bad request response has a 3xx status code
func (o *GetAllKubernetesConfigMapsCountBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all kubernetes config maps count bad request response has a 4xx status code
func (o *GetAllKubernetesConfigMapsCountBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all kubernetes config maps count bad request response has a 5xx status code
func (o *GetAllKubernetesConfigMapsCountBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get all kubernetes config maps count bad request response a status code equal to that given
func (o *GetAllKubernetesConfigMapsCountBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get all kubernetes config maps count bad request response
func (o *GetAllKubernetesConfigMapsCountBadRequest) Code() int {
	return 400
}

func (o *GetAllKubernetesConfigMapsCountBadRequest) Error() string {
	return fmt.Sprintf("[GET /kubernetes/{id}/configmaps/count][%d] getAllKubernetesConfigMapsCountBadRequest", 400)
}

func (o *GetAllKubernetesConfigMapsCountBadRequest) String() string {
	return fmt.Sprintf("[GET /kubernetes/{id}/configmaps/count][%d] getAllKubernetesConfigMapsCountBadRequest", 400)
}

func (o *GetAllKubernetesConfigMapsCountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllKubernetesConfigMapsCountUnauthorized creates a GetAllKubernetesConfigMapsCountUnauthorized with default headers values
func NewGetAllKubernetesConfigMapsCountUnauthorized() *GetAllKubernetesConfigMapsCountUnauthorized {
	return &GetAllKubernetesConfigMapsCountUnauthorized{}
}

/*
GetAllKubernetesConfigMapsCountUnauthorized describes a response with status code 401, with default header values.

Unauthorized access - the user is not authenticated or does not have the necessary permissions. Ensure that you have provided a valid API key or JWT token, and that you have the required permissions.
*/
type GetAllKubernetesConfigMapsCountUnauthorized struct {
}

// IsSuccess returns true when this get all kubernetes config maps count unauthorized response has a 2xx status code
func (o *GetAllKubernetesConfigMapsCountUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all kubernetes config maps count unauthorized response has a 3xx status code
func (o *GetAllKubernetesConfigMapsCountUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all kubernetes config maps count unauthorized response has a 4xx status code
func (o *GetAllKubernetesConfigMapsCountUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all kubernetes config maps count unauthorized response has a 5xx status code
func (o *GetAllKubernetesConfigMapsCountUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get all kubernetes config maps count unauthorized response a status code equal to that given
func (o *GetAllKubernetesConfigMapsCountUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get all kubernetes config maps count unauthorized response
func (o *GetAllKubernetesConfigMapsCountUnauthorized) Code() int {
	return 401
}

func (o *GetAllKubernetesConfigMapsCountUnauthorized) Error() string {
	return fmt.Sprintf("[GET /kubernetes/{id}/configmaps/count][%d] getAllKubernetesConfigMapsCountUnauthorized", 401)
}

func (o *GetAllKubernetesConfigMapsCountUnauthorized) String() string {
	return fmt.Sprintf("[GET /kubernetes/{id}/configmaps/count][%d] getAllKubernetesConfigMapsCountUnauthorized", 401)
}

func (o *GetAllKubernetesConfigMapsCountUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllKubernetesConfigMapsCountForbidden creates a GetAllKubernetesConfigMapsCountForbidden with default headers values
func NewGetAllKubernetesConfigMapsCountForbidden() *GetAllKubernetesConfigMapsCountForbidden {
	return &GetAllKubernetesConfigMapsCountForbidden{}
}

/*
GetAllKubernetesConfigMapsCountForbidden describes a response with status code 403, with default header values.

Permission denied - the user is authenticated but does not have the necessary permissions to access the requested resource or perform the specified operation. Check your user roles and permissions.
*/
type GetAllKubernetesConfigMapsCountForbidden struct {
}

// IsSuccess returns true when this get all kubernetes config maps count forbidden response has a 2xx status code
func (o *GetAllKubernetesConfigMapsCountForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all kubernetes config maps count forbidden response has a 3xx status code
func (o *GetAllKubernetesConfigMapsCountForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all kubernetes config maps count forbidden response has a 4xx status code
func (o *GetAllKubernetesConfigMapsCountForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all kubernetes config maps count forbidden response has a 5xx status code
func (o *GetAllKubernetesConfigMapsCountForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get all kubernetes config maps count forbidden response a status code equal to that given
func (o *GetAllKubernetesConfigMapsCountForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get all kubernetes config maps count forbidden response
func (o *GetAllKubernetesConfigMapsCountForbidden) Code() int {
	return 403
}

func (o *GetAllKubernetesConfigMapsCountForbidden) Error() string {
	return fmt.Sprintf("[GET /kubernetes/{id}/configmaps/count][%d] getAllKubernetesConfigMapsCountForbidden", 403)
}

func (o *GetAllKubernetesConfigMapsCountForbidden) String() string {
	return fmt.Sprintf("[GET /kubernetes/{id}/configmaps/count][%d] getAllKubernetesConfigMapsCountForbidden", 403)
}

func (o *GetAllKubernetesConfigMapsCountForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllKubernetesConfigMapsCountNotFound creates a GetAllKubernetesConfigMapsCountNotFound with default headers values
func NewGetAllKubernetesConfigMapsCountNotFound() *GetAllKubernetesConfigMapsCountNotFound {
	return &GetAllKubernetesConfigMapsCountNotFound{}
}

/*
GetAllKubernetesConfigMapsCountNotFound describes a response with status code 404, with default header values.

Unable to find an environment with the specified identifier.
*/
type GetAllKubernetesConfigMapsCountNotFound struct {
}

// IsSuccess returns true when this get all kubernetes config maps count not found response has a 2xx status code
func (o *GetAllKubernetesConfigMapsCountNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all kubernetes config maps count not found response has a 3xx status code
func (o *GetAllKubernetesConfigMapsCountNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all kubernetes config maps count not found response has a 4xx status code
func (o *GetAllKubernetesConfigMapsCountNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all kubernetes config maps count not found response has a 5xx status code
func (o *GetAllKubernetesConfigMapsCountNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all kubernetes config maps count not found response a status code equal to that given
func (o *GetAllKubernetesConfigMapsCountNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all kubernetes config maps count not found response
func (o *GetAllKubernetesConfigMapsCountNotFound) Code() int {
	return 404
}

func (o *GetAllKubernetesConfigMapsCountNotFound) Error() string {
	return fmt.Sprintf("[GET /kubernetes/{id}/configmaps/count][%d] getAllKubernetesConfigMapsCountNotFound", 404)
}

func (o *GetAllKubernetesConfigMapsCountNotFound) String() string {
	return fmt.Sprintf("[GET /kubernetes/{id}/configmaps/count][%d] getAllKubernetesConfigMapsCountNotFound", 404)
}

func (o *GetAllKubernetesConfigMapsCountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllKubernetesConfigMapsCountInternalServerError creates a GetAllKubernetesConfigMapsCountInternalServerError with default headers values
func NewGetAllKubernetesConfigMapsCountInternalServerError() *GetAllKubernetesConfigMapsCountInternalServerError {
	return &GetAllKubernetesConfigMapsCountInternalServerError{}
}

/*
GetAllKubernetesConfigMapsCountInternalServerError describes a response with status code 500, with default header values.

Server error occurred while attempting to retrieve the count of all configmaps from the cluster.
*/
type GetAllKubernetesConfigMapsCountInternalServerError struct {
}

// IsSuccess returns true when this get all kubernetes config maps count internal server error response has a 2xx status code
func (o *GetAllKubernetesConfigMapsCountInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all kubernetes config maps count internal server error response has a 3xx status code
func (o *GetAllKubernetesConfigMapsCountInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all kubernetes config maps count internal server error response has a 4xx status code
func (o *GetAllKubernetesConfigMapsCountInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all kubernetes config maps count internal server error response has a 5xx status code
func (o *GetAllKubernetesConfigMapsCountInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get all kubernetes config maps count internal server error response a status code equal to that given
func (o *GetAllKubernetesConfigMapsCountInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get all kubernetes config maps count internal server error response
func (o *GetAllKubernetesConfigMapsCountInternalServerError) Code() int {
	return 500
}

func (o *GetAllKubernetesConfigMapsCountInternalServerError) Error() string {
	return fmt.Sprintf("[GET /kubernetes/{id}/configmaps/count][%d] getAllKubernetesConfigMapsCountInternalServerError", 500)
}

func (o *GetAllKubernetesConfigMapsCountInternalServerError) String() string {
	return fmt.Sprintf("[GET /kubernetes/{id}/configmaps/count][%d] getAllKubernetesConfigMapsCountInternalServerError", 500)
}

func (o *GetAllKubernetesConfigMapsCountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
