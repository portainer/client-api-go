// Code generated by go-swagger; DO NOT EDIT.

package kubernetes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/portainer/client-api-go/v2/pkg/models"
)

// GetKubernetesConfigMapReader is a Reader for the GetKubernetesConfigMap structure.
type GetKubernetesConfigMapReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKubernetesConfigMapReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetKubernetesConfigMapOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetKubernetesConfigMapBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetKubernetesConfigMapUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetKubernetesConfigMapForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetKubernetesConfigMapNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetKubernetesConfigMapInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /kubernetes/{id}/namespaces/{namespace}/configmaps/{configmap}] GetKubernetesConfigMap", response, response.Code())
	}
}

// NewGetKubernetesConfigMapOK creates a GetKubernetesConfigMapOK with default headers values
func NewGetKubernetesConfigMapOK() *GetKubernetesConfigMapOK {
	return &GetKubernetesConfigMapOK{}
}

/*
GetKubernetesConfigMapOK describes a response with status code 200, with default header values.

Success
*/
type GetKubernetesConfigMapOK struct {
	Payload *models.KubernetesK8sConfigMap
}

// IsSuccess returns true when this get kubernetes config map o k response has a 2xx status code
func (o *GetKubernetesConfigMapOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get kubernetes config map o k response has a 3xx status code
func (o *GetKubernetesConfigMapOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kubernetes config map o k response has a 4xx status code
func (o *GetKubernetesConfigMapOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get kubernetes config map o k response has a 5xx status code
func (o *GetKubernetesConfigMapOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get kubernetes config map o k response a status code equal to that given
func (o *GetKubernetesConfigMapOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get kubernetes config map o k response
func (o *GetKubernetesConfigMapOK) Code() int {
	return 200
}

func (o *GetKubernetesConfigMapOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /kubernetes/{id}/namespaces/{namespace}/configmaps/{configmap}][%d] getKubernetesConfigMapOK %s", 200, payload)
}

func (o *GetKubernetesConfigMapOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /kubernetes/{id}/namespaces/{namespace}/configmaps/{configmap}][%d] getKubernetesConfigMapOK %s", 200, payload)
}

func (o *GetKubernetesConfigMapOK) GetPayload() *models.KubernetesK8sConfigMap {
	return o.Payload
}

func (o *GetKubernetesConfigMapOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KubernetesK8sConfigMap)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKubernetesConfigMapBadRequest creates a GetKubernetesConfigMapBadRequest with default headers values
func NewGetKubernetesConfigMapBadRequest() *GetKubernetesConfigMapBadRequest {
	return &GetKubernetesConfigMapBadRequest{}
}

/*
GetKubernetesConfigMapBadRequest describes a response with status code 400, with default header values.

Invalid request payload, such as missing required fields or fields not meeting validation criteria.
*/
type GetKubernetesConfigMapBadRequest struct {
}

// IsSuccess returns true when this get kubernetes config map bad request response has a 2xx status code
func (o *GetKubernetesConfigMapBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get kubernetes config map bad request response has a 3xx status code
func (o *GetKubernetesConfigMapBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kubernetes config map bad request response has a 4xx status code
func (o *GetKubernetesConfigMapBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get kubernetes config map bad request response has a 5xx status code
func (o *GetKubernetesConfigMapBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get kubernetes config map bad request response a status code equal to that given
func (o *GetKubernetesConfigMapBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get kubernetes config map bad request response
func (o *GetKubernetesConfigMapBadRequest) Code() int {
	return 400
}

func (o *GetKubernetesConfigMapBadRequest) Error() string {
	return fmt.Sprintf("[GET /kubernetes/{id}/namespaces/{namespace}/configmaps/{configmap}][%d] getKubernetesConfigMapBadRequest", 400)
}

func (o *GetKubernetesConfigMapBadRequest) String() string {
	return fmt.Sprintf("[GET /kubernetes/{id}/namespaces/{namespace}/configmaps/{configmap}][%d] getKubernetesConfigMapBadRequest", 400)
}

func (o *GetKubernetesConfigMapBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetKubernetesConfigMapUnauthorized creates a GetKubernetesConfigMapUnauthorized with default headers values
func NewGetKubernetesConfigMapUnauthorized() *GetKubernetesConfigMapUnauthorized {
	return &GetKubernetesConfigMapUnauthorized{}
}

/*
GetKubernetesConfigMapUnauthorized describes a response with status code 401, with default header values.

Unauthorized access - the user is not authenticated or does not have the necessary permissions. Ensure that you have provided a valid API key or JWT token, and that you have the required permissions.
*/
type GetKubernetesConfigMapUnauthorized struct {
}

// IsSuccess returns true when this get kubernetes config map unauthorized response has a 2xx status code
func (o *GetKubernetesConfigMapUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get kubernetes config map unauthorized response has a 3xx status code
func (o *GetKubernetesConfigMapUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kubernetes config map unauthorized response has a 4xx status code
func (o *GetKubernetesConfigMapUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get kubernetes config map unauthorized response has a 5xx status code
func (o *GetKubernetesConfigMapUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get kubernetes config map unauthorized response a status code equal to that given
func (o *GetKubernetesConfigMapUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get kubernetes config map unauthorized response
func (o *GetKubernetesConfigMapUnauthorized) Code() int {
	return 401
}

func (o *GetKubernetesConfigMapUnauthorized) Error() string {
	return fmt.Sprintf("[GET /kubernetes/{id}/namespaces/{namespace}/configmaps/{configmap}][%d] getKubernetesConfigMapUnauthorized", 401)
}

func (o *GetKubernetesConfigMapUnauthorized) String() string {
	return fmt.Sprintf("[GET /kubernetes/{id}/namespaces/{namespace}/configmaps/{configmap}][%d] getKubernetesConfigMapUnauthorized", 401)
}

func (o *GetKubernetesConfigMapUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetKubernetesConfigMapForbidden creates a GetKubernetesConfigMapForbidden with default headers values
func NewGetKubernetesConfigMapForbidden() *GetKubernetesConfigMapForbidden {
	return &GetKubernetesConfigMapForbidden{}
}

/*
GetKubernetesConfigMapForbidden describes a response with status code 403, with default header values.

Permission denied - the user is authenticated but does not have the necessary permissions to access the requested resource or perform the specified operation. Check your user roles and permissions.
*/
type GetKubernetesConfigMapForbidden struct {
}

// IsSuccess returns true when this get kubernetes config map forbidden response has a 2xx status code
func (o *GetKubernetesConfigMapForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get kubernetes config map forbidden response has a 3xx status code
func (o *GetKubernetesConfigMapForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kubernetes config map forbidden response has a 4xx status code
func (o *GetKubernetesConfigMapForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get kubernetes config map forbidden response has a 5xx status code
func (o *GetKubernetesConfigMapForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get kubernetes config map forbidden response a status code equal to that given
func (o *GetKubernetesConfigMapForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get kubernetes config map forbidden response
func (o *GetKubernetesConfigMapForbidden) Code() int {
	return 403
}

func (o *GetKubernetesConfigMapForbidden) Error() string {
	return fmt.Sprintf("[GET /kubernetes/{id}/namespaces/{namespace}/configmaps/{configmap}][%d] getKubernetesConfigMapForbidden", 403)
}

func (o *GetKubernetesConfigMapForbidden) String() string {
	return fmt.Sprintf("[GET /kubernetes/{id}/namespaces/{namespace}/configmaps/{configmap}][%d] getKubernetesConfigMapForbidden", 403)
}

func (o *GetKubernetesConfigMapForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetKubernetesConfigMapNotFound creates a GetKubernetesConfigMapNotFound with default headers values
func NewGetKubernetesConfigMapNotFound() *GetKubernetesConfigMapNotFound {
	return &GetKubernetesConfigMapNotFound{}
}

/*
GetKubernetesConfigMapNotFound describes a response with status code 404, with default header values.

Unable to find an environment with the specified identifier or a configmap with the specified name in the given namespace.
*/
type GetKubernetesConfigMapNotFound struct {
}

// IsSuccess returns true when this get kubernetes config map not found response has a 2xx status code
func (o *GetKubernetesConfigMapNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get kubernetes config map not found response has a 3xx status code
func (o *GetKubernetesConfigMapNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kubernetes config map not found response has a 4xx status code
func (o *GetKubernetesConfigMapNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get kubernetes config map not found response has a 5xx status code
func (o *GetKubernetesConfigMapNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get kubernetes config map not found response a status code equal to that given
func (o *GetKubernetesConfigMapNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get kubernetes config map not found response
func (o *GetKubernetesConfigMapNotFound) Code() int {
	return 404
}

func (o *GetKubernetesConfigMapNotFound) Error() string {
	return fmt.Sprintf("[GET /kubernetes/{id}/namespaces/{namespace}/configmaps/{configmap}][%d] getKubernetesConfigMapNotFound", 404)
}

func (o *GetKubernetesConfigMapNotFound) String() string {
	return fmt.Sprintf("[GET /kubernetes/{id}/namespaces/{namespace}/configmaps/{configmap}][%d] getKubernetesConfigMapNotFound", 404)
}

func (o *GetKubernetesConfigMapNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetKubernetesConfigMapInternalServerError creates a GetKubernetesConfigMapInternalServerError with default headers values
func NewGetKubernetesConfigMapInternalServerError() *GetKubernetesConfigMapInternalServerError {
	return &GetKubernetesConfigMapInternalServerError{}
}

/*
GetKubernetesConfigMapInternalServerError describes a response with status code 500, with default header values.

Server error occurred while attempting to retrieve a configmap by name within the specified namespace.
*/
type GetKubernetesConfigMapInternalServerError struct {
}

// IsSuccess returns true when this get kubernetes config map internal server error response has a 2xx status code
func (o *GetKubernetesConfigMapInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get kubernetes config map internal server error response has a 3xx status code
func (o *GetKubernetesConfigMapInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kubernetes config map internal server error response has a 4xx status code
func (o *GetKubernetesConfigMapInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get kubernetes config map internal server error response has a 5xx status code
func (o *GetKubernetesConfigMapInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get kubernetes config map internal server error response a status code equal to that given
func (o *GetKubernetesConfigMapInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get kubernetes config map internal server error response
func (o *GetKubernetesConfigMapInternalServerError) Code() int {
	return 500
}

func (o *GetKubernetesConfigMapInternalServerError) Error() string {
	return fmt.Sprintf("[GET /kubernetes/{id}/namespaces/{namespace}/configmaps/{configmap}][%d] getKubernetesConfigMapInternalServerError", 500)
}

func (o *GetKubernetesConfigMapInternalServerError) String() string {
	return fmt.Sprintf("[GET /kubernetes/{id}/namespaces/{namespace}/configmaps/{configmap}][%d] getKubernetesConfigMapInternalServerError", 500)
}

func (o *GetKubernetesConfigMapInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
