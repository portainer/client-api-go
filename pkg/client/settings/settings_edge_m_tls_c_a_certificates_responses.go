// Code generated by go-swagger; DO NOT EDIT.

package settings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/portainer/client-api-go/v2/pkg/models"
)

// SettingsEdgeMTLSCACertificatesReader is a Reader for the SettingsEdgeMTLSCACertificates structure.
type SettingsEdgeMTLSCACertificatesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SettingsEdgeMTLSCACertificatesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSettingsEdgeMTLSCACertificatesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewSettingsEdgeMTLSCACertificatesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /settings/edge/mtls_ca_certificate] SettingsEdgeMTLSCACertificates", response, response.Code())
	}
}

// NewSettingsEdgeMTLSCACertificatesOK creates a SettingsEdgeMTLSCACertificatesOK with default headers values
func NewSettingsEdgeMTLSCACertificatesOK() *SettingsEdgeMTLSCACertificatesOK {
	return &SettingsEdgeMTLSCACertificatesOK{}
}

/*
SettingsEdgeMTLSCACertificatesOK describes a response with status code 200, with default header values.

Success
*/
type SettingsEdgeMTLSCACertificatesOK struct {
	Payload *models.SettingsSettingsCACertResponse
}

// IsSuccess returns true when this settings edge m Tls c a certificates o k response has a 2xx status code
func (o *SettingsEdgeMTLSCACertificatesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this settings edge m Tls c a certificates o k response has a 3xx status code
func (o *SettingsEdgeMTLSCACertificatesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this settings edge m Tls c a certificates o k response has a 4xx status code
func (o *SettingsEdgeMTLSCACertificatesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this settings edge m Tls c a certificates o k response has a 5xx status code
func (o *SettingsEdgeMTLSCACertificatesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this settings edge m Tls c a certificates o k response a status code equal to that given
func (o *SettingsEdgeMTLSCACertificatesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the settings edge m Tls c a certificates o k response
func (o *SettingsEdgeMTLSCACertificatesOK) Code() int {
	return 200
}

func (o *SettingsEdgeMTLSCACertificatesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /settings/edge/mtls_ca_certificate][%d] settingsEdgeMTlsCACertificatesOK %s", 200, payload)
}

func (o *SettingsEdgeMTLSCACertificatesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /settings/edge/mtls_ca_certificate][%d] settingsEdgeMTlsCACertificatesOK %s", 200, payload)
}

func (o *SettingsEdgeMTLSCACertificatesOK) GetPayload() *models.SettingsSettingsCACertResponse {
	return o.Payload
}

func (o *SettingsEdgeMTLSCACertificatesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SettingsSettingsCACertResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSettingsEdgeMTLSCACertificatesInternalServerError creates a SettingsEdgeMTLSCACertificatesInternalServerError with default headers values
func NewSettingsEdgeMTLSCACertificatesInternalServerError() *SettingsEdgeMTLSCACertificatesInternalServerError {
	return &SettingsEdgeMTLSCACertificatesInternalServerError{}
}

/*
SettingsEdgeMTLSCACertificatesInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type SettingsEdgeMTLSCACertificatesInternalServerError struct {
}

// IsSuccess returns true when this settings edge m Tls c a certificates internal server error response has a 2xx status code
func (o *SettingsEdgeMTLSCACertificatesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this settings edge m Tls c a certificates internal server error response has a 3xx status code
func (o *SettingsEdgeMTLSCACertificatesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this settings edge m Tls c a certificates internal server error response has a 4xx status code
func (o *SettingsEdgeMTLSCACertificatesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this settings edge m Tls c a certificates internal server error response has a 5xx status code
func (o *SettingsEdgeMTLSCACertificatesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this settings edge m Tls c a certificates internal server error response a status code equal to that given
func (o *SettingsEdgeMTLSCACertificatesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the settings edge m Tls c a certificates internal server error response
func (o *SettingsEdgeMTLSCACertificatesInternalServerError) Code() int {
	return 500
}

func (o *SettingsEdgeMTLSCACertificatesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /settings/edge/mtls_ca_certificate][%d] settingsEdgeMTlsCACertificatesInternalServerError", 500)
}

func (o *SettingsEdgeMTLSCACertificatesInternalServerError) String() string {
	return fmt.Sprintf("[GET /settings/edge/mtls_ca_certificate][%d] settingsEdgeMTlsCACertificatesInternalServerError", 500)
}

func (o *SettingsEdgeMTLSCACertificatesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
