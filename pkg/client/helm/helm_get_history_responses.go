// Code generated by go-swagger; DO NOT EDIT.

package helm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/portainer/client-api-go/v2/pkg/models"
)

// HelmGetHistoryReader is a Reader for the HelmGetHistory structure.
type HelmGetHistoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *HelmGetHistoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewHelmGetHistoryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewHelmGetHistoryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewHelmGetHistoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewHelmGetHistoryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewHelmGetHistoryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewHelmGetHistoryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /endpoints/{id}/kubernetes/helm/{release}/history] HelmGetHistory", response, response.Code())
	}
}

// NewHelmGetHistoryOK creates a HelmGetHistoryOK with default headers values
func NewHelmGetHistoryOK() *HelmGetHistoryOK {
	return &HelmGetHistoryOK{}
}

/*
HelmGetHistoryOK describes a response with status code 200, with default header values.

Success
*/
type HelmGetHistoryOK struct {
	Payload []*models.ReleaseRelease
}

// IsSuccess returns true when this helm get history o k response has a 2xx status code
func (o *HelmGetHistoryOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this helm get history o k response has a 3xx status code
func (o *HelmGetHistoryOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this helm get history o k response has a 4xx status code
func (o *HelmGetHistoryOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this helm get history o k response has a 5xx status code
func (o *HelmGetHistoryOK) IsServerError() bool {
	return false
}

// IsCode returns true when this helm get history o k response a status code equal to that given
func (o *HelmGetHistoryOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the helm get history o k response
func (o *HelmGetHistoryOK) Code() int {
	return 200
}

func (o *HelmGetHistoryOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /endpoints/{id}/kubernetes/helm/{release}/history][%d] helmGetHistoryOK %s", 200, payload)
}

func (o *HelmGetHistoryOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /endpoints/{id}/kubernetes/helm/{release}/history][%d] helmGetHistoryOK %s", 200, payload)
}

func (o *HelmGetHistoryOK) GetPayload() []*models.ReleaseRelease {
	return o.Payload
}

func (o *HelmGetHistoryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHelmGetHistoryBadRequest creates a HelmGetHistoryBadRequest with default headers values
func NewHelmGetHistoryBadRequest() *HelmGetHistoryBadRequest {
	return &HelmGetHistoryBadRequest{}
}

/*
HelmGetHistoryBadRequest describes a response with status code 400, with default header values.

Invalid request payload, such as missing required fields or fields not meeting validation criteria.
*/
type HelmGetHistoryBadRequest struct {
}

// IsSuccess returns true when this helm get history bad request response has a 2xx status code
func (o *HelmGetHistoryBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this helm get history bad request response has a 3xx status code
func (o *HelmGetHistoryBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this helm get history bad request response has a 4xx status code
func (o *HelmGetHistoryBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this helm get history bad request response has a 5xx status code
func (o *HelmGetHistoryBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this helm get history bad request response a status code equal to that given
func (o *HelmGetHistoryBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the helm get history bad request response
func (o *HelmGetHistoryBadRequest) Code() int {
	return 400
}

func (o *HelmGetHistoryBadRequest) Error() string {
	return fmt.Sprintf("[GET /endpoints/{id}/kubernetes/helm/{release}/history][%d] helmGetHistoryBadRequest", 400)
}

func (o *HelmGetHistoryBadRequest) String() string {
	return fmt.Sprintf("[GET /endpoints/{id}/kubernetes/helm/{release}/history][%d] helmGetHistoryBadRequest", 400)
}

func (o *HelmGetHistoryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHelmGetHistoryUnauthorized creates a HelmGetHistoryUnauthorized with default headers values
func NewHelmGetHistoryUnauthorized() *HelmGetHistoryUnauthorized {
	return &HelmGetHistoryUnauthorized{}
}

/*
HelmGetHistoryUnauthorized describes a response with status code 401, with default header values.

Unauthorized access - the user is not authenticated or does not have the necessary permissions. Ensure that you have provided a valid API key or JWT token, and that you have the required permissions.
*/
type HelmGetHistoryUnauthorized struct {
}

// IsSuccess returns true when this helm get history unauthorized response has a 2xx status code
func (o *HelmGetHistoryUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this helm get history unauthorized response has a 3xx status code
func (o *HelmGetHistoryUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this helm get history unauthorized response has a 4xx status code
func (o *HelmGetHistoryUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this helm get history unauthorized response has a 5xx status code
func (o *HelmGetHistoryUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this helm get history unauthorized response a status code equal to that given
func (o *HelmGetHistoryUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the helm get history unauthorized response
func (o *HelmGetHistoryUnauthorized) Code() int {
	return 401
}

func (o *HelmGetHistoryUnauthorized) Error() string {
	return fmt.Sprintf("[GET /endpoints/{id}/kubernetes/helm/{release}/history][%d] helmGetHistoryUnauthorized", 401)
}

func (o *HelmGetHistoryUnauthorized) String() string {
	return fmt.Sprintf("[GET /endpoints/{id}/kubernetes/helm/{release}/history][%d] helmGetHistoryUnauthorized", 401)
}

func (o *HelmGetHistoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHelmGetHistoryForbidden creates a HelmGetHistoryForbidden with default headers values
func NewHelmGetHistoryForbidden() *HelmGetHistoryForbidden {
	return &HelmGetHistoryForbidden{}
}

/*
HelmGetHistoryForbidden describes a response with status code 403, with default header values.

Permission denied - the user is authenticated but does not have the necessary permissions to access the requested resource or perform the specified operation. Check your user roles and permissions.
*/
type HelmGetHistoryForbidden struct {
}

// IsSuccess returns true when this helm get history forbidden response has a 2xx status code
func (o *HelmGetHistoryForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this helm get history forbidden response has a 3xx status code
func (o *HelmGetHistoryForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this helm get history forbidden response has a 4xx status code
func (o *HelmGetHistoryForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this helm get history forbidden response has a 5xx status code
func (o *HelmGetHistoryForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this helm get history forbidden response a status code equal to that given
func (o *HelmGetHistoryForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the helm get history forbidden response
func (o *HelmGetHistoryForbidden) Code() int {
	return 403
}

func (o *HelmGetHistoryForbidden) Error() string {
	return fmt.Sprintf("[GET /endpoints/{id}/kubernetes/helm/{release}/history][%d] helmGetHistoryForbidden", 403)
}

func (o *HelmGetHistoryForbidden) String() string {
	return fmt.Sprintf("[GET /endpoints/{id}/kubernetes/helm/{release}/history][%d] helmGetHistoryForbidden", 403)
}

func (o *HelmGetHistoryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHelmGetHistoryNotFound creates a HelmGetHistoryNotFound with default headers values
func NewHelmGetHistoryNotFound() *HelmGetHistoryNotFound {
	return &HelmGetHistoryNotFound{}
}

/*
HelmGetHistoryNotFound describes a response with status code 404, with default header values.

Unable to find an environment with the specified identifier.
*/
type HelmGetHistoryNotFound struct {
}

// IsSuccess returns true when this helm get history not found response has a 2xx status code
func (o *HelmGetHistoryNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this helm get history not found response has a 3xx status code
func (o *HelmGetHistoryNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this helm get history not found response has a 4xx status code
func (o *HelmGetHistoryNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this helm get history not found response has a 5xx status code
func (o *HelmGetHistoryNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this helm get history not found response a status code equal to that given
func (o *HelmGetHistoryNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the helm get history not found response
func (o *HelmGetHistoryNotFound) Code() int {
	return 404
}

func (o *HelmGetHistoryNotFound) Error() string {
	return fmt.Sprintf("[GET /endpoints/{id}/kubernetes/helm/{release}/history][%d] helmGetHistoryNotFound", 404)
}

func (o *HelmGetHistoryNotFound) String() string {
	return fmt.Sprintf("[GET /endpoints/{id}/kubernetes/helm/{release}/history][%d] helmGetHistoryNotFound", 404)
}

func (o *HelmGetHistoryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHelmGetHistoryInternalServerError creates a HelmGetHistoryInternalServerError with default headers values
func NewHelmGetHistoryInternalServerError() *HelmGetHistoryInternalServerError {
	return &HelmGetHistoryInternalServerError{}
}

/*
HelmGetHistoryInternalServerError describes a response with status code 500, with default header values.

Server error occurred while attempting to retrieve the historical list of releases.
*/
type HelmGetHistoryInternalServerError struct {
}

// IsSuccess returns true when this helm get history internal server error response has a 2xx status code
func (o *HelmGetHistoryInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this helm get history internal server error response has a 3xx status code
func (o *HelmGetHistoryInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this helm get history internal server error response has a 4xx status code
func (o *HelmGetHistoryInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this helm get history internal server error response has a 5xx status code
func (o *HelmGetHistoryInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this helm get history internal server error response a status code equal to that given
func (o *HelmGetHistoryInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the helm get history internal server error response
func (o *HelmGetHistoryInternalServerError) Code() int {
	return 500
}

func (o *HelmGetHistoryInternalServerError) Error() string {
	return fmt.Sprintf("[GET /endpoints/{id}/kubernetes/helm/{release}/history][%d] helmGetHistoryInternalServerError", 500)
}

func (o *HelmGetHistoryInternalServerError) String() string {
	return fmt.Sprintf("[GET /endpoints/{id}/kubernetes/helm/{release}/history][%d] helmGetHistoryInternalServerError", 500)
}

func (o *HelmGetHistoryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
