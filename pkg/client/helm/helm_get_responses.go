// Code generated by go-swagger; DO NOT EDIT.

package helm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/portainer/client-api-go/v2/pkg/models"
)

// HelmGetReader is a Reader for the HelmGet structure.
type HelmGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *HelmGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewHelmGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewHelmGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewHelmGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewHelmGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewHelmGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewHelmGetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /endpoints/{id}/kubernetes/helm/{name}] HelmGet", response, response.Code())
	}
}

// NewHelmGetOK creates a HelmGetOK with default headers values
func NewHelmGetOK() *HelmGetOK {
	return &HelmGetOK{}
}

/*
HelmGetOK describes a response with status code 200, with default header values.

Success
*/
type HelmGetOK struct {
	Payload *models.ReleaseRelease
}

// IsSuccess returns true when this helm get o k response has a 2xx status code
func (o *HelmGetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this helm get o k response has a 3xx status code
func (o *HelmGetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this helm get o k response has a 4xx status code
func (o *HelmGetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this helm get o k response has a 5xx status code
func (o *HelmGetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this helm get o k response a status code equal to that given
func (o *HelmGetOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the helm get o k response
func (o *HelmGetOK) Code() int {
	return 200
}

func (o *HelmGetOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /endpoints/{id}/kubernetes/helm/{name}][%d] helmGetOK %s", 200, payload)
}

func (o *HelmGetOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /endpoints/{id}/kubernetes/helm/{name}][%d] helmGetOK %s", 200, payload)
}

func (o *HelmGetOK) GetPayload() *models.ReleaseRelease {
	return o.Payload
}

func (o *HelmGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ReleaseRelease)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHelmGetBadRequest creates a HelmGetBadRequest with default headers values
func NewHelmGetBadRequest() *HelmGetBadRequest {
	return &HelmGetBadRequest{}
}

/*
HelmGetBadRequest describes a response with status code 400, with default header values.

Invalid request payload, such as missing required fields or fields not meeting validation criteria.
*/
type HelmGetBadRequest struct {
}

// IsSuccess returns true when this helm get bad request response has a 2xx status code
func (o *HelmGetBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this helm get bad request response has a 3xx status code
func (o *HelmGetBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this helm get bad request response has a 4xx status code
func (o *HelmGetBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this helm get bad request response has a 5xx status code
func (o *HelmGetBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this helm get bad request response a status code equal to that given
func (o *HelmGetBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the helm get bad request response
func (o *HelmGetBadRequest) Code() int {
	return 400
}

func (o *HelmGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /endpoints/{id}/kubernetes/helm/{name}][%d] helmGetBadRequest", 400)
}

func (o *HelmGetBadRequest) String() string {
	return fmt.Sprintf("[GET /endpoints/{id}/kubernetes/helm/{name}][%d] helmGetBadRequest", 400)
}

func (o *HelmGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHelmGetUnauthorized creates a HelmGetUnauthorized with default headers values
func NewHelmGetUnauthorized() *HelmGetUnauthorized {
	return &HelmGetUnauthorized{}
}

/*
HelmGetUnauthorized describes a response with status code 401, with default header values.

Unauthorized access - the user is not authenticated or does not have the necessary permissions. Ensure that you have provided a valid API key or JWT token, and that you have the required permissions.
*/
type HelmGetUnauthorized struct {
}

// IsSuccess returns true when this helm get unauthorized response has a 2xx status code
func (o *HelmGetUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this helm get unauthorized response has a 3xx status code
func (o *HelmGetUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this helm get unauthorized response has a 4xx status code
func (o *HelmGetUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this helm get unauthorized response has a 5xx status code
func (o *HelmGetUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this helm get unauthorized response a status code equal to that given
func (o *HelmGetUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the helm get unauthorized response
func (o *HelmGetUnauthorized) Code() int {
	return 401
}

func (o *HelmGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /endpoints/{id}/kubernetes/helm/{name}][%d] helmGetUnauthorized", 401)
}

func (o *HelmGetUnauthorized) String() string {
	return fmt.Sprintf("[GET /endpoints/{id}/kubernetes/helm/{name}][%d] helmGetUnauthorized", 401)
}

func (o *HelmGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHelmGetForbidden creates a HelmGetForbidden with default headers values
func NewHelmGetForbidden() *HelmGetForbidden {
	return &HelmGetForbidden{}
}

/*
HelmGetForbidden describes a response with status code 403, with default header values.

Permission denied - the user is authenticated but does not have the necessary permissions to access the requested resource or perform the specified operation. Check your user roles and permissions.
*/
type HelmGetForbidden struct {
}

// IsSuccess returns true when this helm get forbidden response has a 2xx status code
func (o *HelmGetForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this helm get forbidden response has a 3xx status code
func (o *HelmGetForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this helm get forbidden response has a 4xx status code
func (o *HelmGetForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this helm get forbidden response has a 5xx status code
func (o *HelmGetForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this helm get forbidden response a status code equal to that given
func (o *HelmGetForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the helm get forbidden response
func (o *HelmGetForbidden) Code() int {
	return 403
}

func (o *HelmGetForbidden) Error() string {
	return fmt.Sprintf("[GET /endpoints/{id}/kubernetes/helm/{name}][%d] helmGetForbidden", 403)
}

func (o *HelmGetForbidden) String() string {
	return fmt.Sprintf("[GET /endpoints/{id}/kubernetes/helm/{name}][%d] helmGetForbidden", 403)
}

func (o *HelmGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHelmGetNotFound creates a HelmGetNotFound with default headers values
func NewHelmGetNotFound() *HelmGetNotFound {
	return &HelmGetNotFound{}
}

/*
HelmGetNotFound describes a response with status code 404, with default header values.

Unable to find an environment with the specified identifier.
*/
type HelmGetNotFound struct {
}

// IsSuccess returns true when this helm get not found response has a 2xx status code
func (o *HelmGetNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this helm get not found response has a 3xx status code
func (o *HelmGetNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this helm get not found response has a 4xx status code
func (o *HelmGetNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this helm get not found response has a 5xx status code
func (o *HelmGetNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this helm get not found response a status code equal to that given
func (o *HelmGetNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the helm get not found response
func (o *HelmGetNotFound) Code() int {
	return 404
}

func (o *HelmGetNotFound) Error() string {
	return fmt.Sprintf("[GET /endpoints/{id}/kubernetes/helm/{name}][%d] helmGetNotFound", 404)
}

func (o *HelmGetNotFound) String() string {
	return fmt.Sprintf("[GET /endpoints/{id}/kubernetes/helm/{name}][%d] helmGetNotFound", 404)
}

func (o *HelmGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHelmGetInternalServerError creates a HelmGetInternalServerError with default headers values
func NewHelmGetInternalServerError() *HelmGetInternalServerError {
	return &HelmGetInternalServerError{}
}

/*
HelmGetInternalServerError describes a response with status code 500, with default header values.

Server error occurred while attempting to retrieve the release.
*/
type HelmGetInternalServerError struct {
}

// IsSuccess returns true when this helm get internal server error response has a 2xx status code
func (o *HelmGetInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this helm get internal server error response has a 3xx status code
func (o *HelmGetInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this helm get internal server error response has a 4xx status code
func (o *HelmGetInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this helm get internal server error response has a 5xx status code
func (o *HelmGetInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this helm get internal server error response a status code equal to that given
func (o *HelmGetInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the helm get internal server error response
func (o *HelmGetInternalServerError) Code() int {
	return 500
}

func (o *HelmGetInternalServerError) Error() string {
	return fmt.Sprintf("[GET /endpoints/{id}/kubernetes/helm/{name}][%d] helmGetInternalServerError", 500)
}

func (o *HelmGetInternalServerError) String() string {
	return fmt.Sprintf("[GET /endpoints/{id}/kubernetes/helm/{name}][%d] helmGetInternalServerError", 500)
}

func (o *HelmGetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
