// Code generated by go-swagger; DO NOT EDIT.

package backup

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/portainer/client-api-go/ee/v2/models"
)

// NewUpdateS3SettingsParams creates a new UpdateS3SettingsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateS3SettingsParams() *UpdateS3SettingsParams {
	return &UpdateS3SettingsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateS3SettingsParamsWithTimeout creates a new UpdateS3SettingsParams object
// with the ability to set a timeout on a request.
func NewUpdateS3SettingsParamsWithTimeout(timeout time.Duration) *UpdateS3SettingsParams {
	return &UpdateS3SettingsParams{
		timeout: timeout,
	}
}

// NewUpdateS3SettingsParamsWithContext creates a new UpdateS3SettingsParams object
// with the ability to set a context for a request.
func NewUpdateS3SettingsParamsWithContext(ctx context.Context) *UpdateS3SettingsParams {
	return &UpdateS3SettingsParams{
		Context: ctx,
	}
}

// NewUpdateS3SettingsParamsWithHTTPClient creates a new UpdateS3SettingsParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateS3SettingsParamsWithHTTPClient(client *http.Client) *UpdateS3SettingsParams {
	return &UpdateS3SettingsParams{
		HTTPClient: client,
	}
}

/*
UpdateS3SettingsParams contains all the parameters to send to the API endpoint

	for the update s3 settings operation.

	Typically these are written to a http.Request.
*/
type UpdateS3SettingsParams struct {

	/* S3BackupSettings.

	   S3 backup settings
	*/
	S3BackupSettings *models.PortainereeS3BackupSettings

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update s3 settings params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateS3SettingsParams) WithDefaults() *UpdateS3SettingsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update s3 settings params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateS3SettingsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update s3 settings params
func (o *UpdateS3SettingsParams) WithTimeout(timeout time.Duration) *UpdateS3SettingsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update s3 settings params
func (o *UpdateS3SettingsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update s3 settings params
func (o *UpdateS3SettingsParams) WithContext(ctx context.Context) *UpdateS3SettingsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update s3 settings params
func (o *UpdateS3SettingsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update s3 settings params
func (o *UpdateS3SettingsParams) WithHTTPClient(client *http.Client) *UpdateS3SettingsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update s3 settings params
func (o *UpdateS3SettingsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithS3BackupSettings adds the s3BackupSettings to the update s3 settings params
func (o *UpdateS3SettingsParams) WithS3BackupSettings(s3BackupSettings *models.PortainereeS3BackupSettings) *UpdateS3SettingsParams {
	o.SetS3BackupSettings(s3BackupSettings)
	return o
}

// SetS3BackupSettings adds the s3BackupSettings to the update s3 settings params
func (o *UpdateS3SettingsParams) SetS3BackupSettings(s3BackupSettings *models.PortainereeS3BackupSettings) {
	o.S3BackupSettings = s3BackupSettings
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateS3SettingsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.S3BackupSettings != nil {
		if err := r.SetBodyParam(o.S3BackupSettings); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
