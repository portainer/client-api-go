// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// OpenamtOpenAMTConfigurePayload openamt open a m t configure payload
//
// swagger:model openamt.openAMTConfigurePayload
type OpenamtOpenAMTConfigurePayload struct {

	// cert file content
	CertFileContent string `json:"certFileContent,omitempty"`

	// cert file name
	CertFileName string `json:"certFileName,omitempty"`

	// cert file password
	CertFilePassword string `json:"certFilePassword,omitempty"`

	// domain name
	DomainName string `json:"domainName,omitempty"`

	// enabled
	Enabled *bool `json:"enabled,omitempty"`

	// mpspassword
	Mpspassword string `json:"mpspassword,omitempty"`

	// mpsserver
	Mpsserver string `json:"mpsserver,omitempty"`

	// mpsuser
	Mpsuser string `json:"mpsuser,omitempty"`
}

// Validate validates this openamt open a m t configure payload
func (m *OpenamtOpenAMTConfigurePayload) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this openamt open a m t configure payload based on context it is used
func (m *OpenamtOpenAMTConfigurePayload) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OpenamtOpenAMTConfigurePayload) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OpenamtOpenAMTConfigurePayload) UnmarshalBinary(b []byte) error {
	var res OpenamtOpenAMTConfigurePayload
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
