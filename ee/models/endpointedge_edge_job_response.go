// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// EndpointedgeEdgeJobResponse endpointedge edge job response
//
// swagger:model endpointedge.edgeJobResponse
type EndpointedgeEdgeJobResponse struct {

	// Whether to collect logs
	// Example: true
	CollectLogs *bool `json:"CollectLogs,omitempty"`

	// A cron expression to schedule this job
	// Example: * * * * *
	CronExpression string `json:"CronExpression,omitempty"`

	// EdgeJob Identifier
	// Example: 2
	ID int64 `json:"Id,omitempty"`

	// Script to run
	// Example: echo hello
	Script string `json:"Script,omitempty"`

	// Version of this EdgeJob
	// Example: 2
	Version int64 `json:"Version,omitempty"`
}

// Validate validates this endpointedge edge job response
func (m *EndpointedgeEdgeJobResponse) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this endpointedge edge job response based on context it is used
func (m *EndpointedgeEdgeJobResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *EndpointedgeEdgeJobResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EndpointedgeEdgeJobResponse) UnmarshalBinary(b []byte) error {
	var res EndpointedgeEdgeJobResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
