// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// LdapAdminGroupsPayload ldap admin groups payload
//
// swagger:model ldap.adminGroupsPayload
type LdapAdminGroupsPayload struct {

	// ldapsettings
	Ldapsettings *PortainereeLDAPSettings `json:"ldapsettings,omitempty"`
}

// Validate validates this ldap admin groups payload
func (m *LdapAdminGroupsPayload) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLdapsettings(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LdapAdminGroupsPayload) validateLdapsettings(formats strfmt.Registry) error {
	if swag.IsZero(m.Ldapsettings) { // not required
		return nil
	}

	if m.Ldapsettings != nil {
		if err := m.Ldapsettings.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("ldapsettings")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("ldapsettings")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this ldap admin groups payload based on the context it is used
func (m *LdapAdminGroupsPayload) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateLdapsettings(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LdapAdminGroupsPayload) contextValidateLdapsettings(ctx context.Context, formats strfmt.Registry) error {

	if m.Ldapsettings != nil {
		if err := m.Ldapsettings.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("ldapsettings")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("ldapsettings")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *LdapAdminGroupsPayload) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LdapAdminGroupsPayload) UnmarshalBinary(b []byte) error {
	var res LdapAdminGroupsPayload
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
