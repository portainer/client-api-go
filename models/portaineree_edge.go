// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PortainereeEdge portaineree edge
//
// swagger:model portaineree.Edge
type PortainereeEdge struct {

	// The command list interval for edge agent - used in edge async mode (in seconds)
	// Example: 5
	CommandInterval int64 `json:"CommandInterval,omitempty"`

	// The ping interval for edge agent - used in edge async mode (in seconds)
	// Example: 5
	PingInterval int64 `json:"PingInterval,omitempty"`

	// The snapshot interval for edge agent - used in edge async mode (in seconds)
	// Example: 5
	SnapshotInterval int64 `json:"SnapshotInterval,omitempty"`

	// The address where the tunneling server can be reached by Edge agents
	// Example: portainer.domain.tld
	TunnelServerAddress string `json:"TunnelServerAddress,omitempty"`

	// Deprecated 2.18
	AsyncMode bool `json:"asyncMode,omitempty"`

	// mtls
	Mtls *PortainereeMTLSSettings `json:"mtls,omitempty"`
}

// Validate validates this portaineree edge
func (m *PortainereeEdge) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMtls(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PortainereeEdge) validateMtls(formats strfmt.Registry) error {
	if swag.IsZero(m.Mtls) { // not required
		return nil
	}

	if m.Mtls != nil {
		if err := m.Mtls.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("mtls")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("mtls")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this portaineree edge based on the context it is used
func (m *PortainereeEdge) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateMtls(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PortainereeEdge) contextValidateMtls(ctx context.Context, formats strfmt.Registry) error {

	if m.Mtls != nil {
		if err := m.Mtls.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("mtls")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("mtls")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PortainereeEdge) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PortainereeEdge) UnmarshalBinary(b []byte) error {
	var res PortainereeEdge
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
