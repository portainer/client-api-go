// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// EndpointsEndpointSettingsUpdatePayload endpoints endpoint settings update payload
//
// swagger:model endpoints.endpointSettingsUpdatePayload
type EndpointsEndpointSettingsUpdatePayload struct {

	// Whether non-administrator should be able to use bind mounts when creating containers
	// Example: false
	AllowBindMountsForRegularUsers *bool `json:"allowBindMountsForRegularUsers,omitempty"`

	// Whether non-administrator should be able to use container capabilities
	// Example: true
	AllowContainerCapabilitiesForRegularUsers *bool `json:"allowContainerCapabilitiesForRegularUsers,omitempty"`

	// Whether non-administrator should be able to use device mapping
	// Example: true
	AllowDeviceMappingForRegularUsers *bool `json:"allowDeviceMappingForRegularUsers,omitempty"`

	// Whether non-administrator should be able to use the host pid
	// Example: true
	AllowHostNamespaceForRegularUsers *bool `json:"allowHostNamespaceForRegularUsers,omitempty"`

	// Whether non-administrator should be able to use privileged mode when creating containers
	// Example: false
	AllowPrivilegedModeForRegularUsers *bool `json:"allowPrivilegedModeForRegularUsers,omitempty"`

	// Whether non-administrator should be able to manage stacks
	// Example: true
	AllowStackManagementForRegularUsers *bool `json:"allowStackManagementForRegularUsers,omitempty"`

	// Whether non-administrator should be able to use sysctl settings
	// Example: true
	AllowSysctlSettingForRegularUsers *bool `json:"allowSysctlSettingForRegularUsers,omitempty"`

	// Whether non-administrator should be able to browse volumes
	// Example: true
	AllowVolumeBrowserForRegularUsers *bool `json:"allowVolumeBrowserForRegularUsers,omitempty"`

	// Whether host management features are enabled
	// Example: true
	EnableHostManagementFeatures *bool `json:"enableHostManagementFeatures,omitempty"`
}

// Validate validates this endpoints endpoint settings update payload
func (m *EndpointsEndpointSettingsUpdatePayload) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this endpoints endpoint settings update payload based on context it is used
func (m *EndpointsEndpointSettingsUpdatePayload) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *EndpointsEndpointSettingsUpdatePayload) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EndpointsEndpointSettingsUpdatePayload) UnmarshalBinary(b []byte) error {
	var res EndpointsEndpointSettingsUpdatePayload
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
