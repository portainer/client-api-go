// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// EdgeupdateschedulesDecoratedUpdateSchedule edgeupdateschedules decorated update schedule
//
// swagger:model edgeupdateschedules.decoratedUpdateSchedule
type EdgeupdateschedulesDecoratedUpdateSchedule struct {

	// Created timestamp
	// Example: 1564897200
	Created int64 `json:"created,omitempty"`

	// Created by user id
	// Example: 1
	CreatedBy int64 `json:"createdBy,omitempty"`

	// edge group ids
	EdgeGroupIds []int64 `json:"edgeGroupIds"`

	// EdgeStack Identifier
	// Example: 1
	EdgeStackID int64 `json:"edgeStackId,omitempty"`

	// environments previous versions
	EnvironmentsPreviousVersions map[string]string `json:"environmentsPreviousVersions,omitempty"`

	// EdgeUpdateSchedule Identifier
	// Example: 1
	ID int64 `json:"id,omitempty"`

	// Name of the schedule
	// Example: Update Schedule
	Name string `json:"name,omitempty"`

	// ID of registry
	// Example: 1
	RegistryID int64 `json:"registryId,omitempty"`

	// scheduled time
	ScheduledTime string `json:"scheduledTime,omitempty"`

	// status
	Status int64 `json:"status,omitempty"`

	// status message
	StatusMessage string `json:"statusMessage,omitempty"`

	// Type of the update (1 - update, 2 - rollback)
	// Example: 1
	// Enum: [1 2]
	Type int64 `json:"type,omitempty"`

	// version
	// Example: 1.0.0
	Version string `json:"version,omitempty"`
}

// Validate validates this edgeupdateschedules decorated update schedule
func (m *EdgeupdateschedulesDecoratedUpdateSchedule) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var edgeupdateschedulesDecoratedUpdateScheduleTypeTypePropEnum []interface{}

func init() {
	var res []int64
	if err := json.Unmarshal([]byte(`[1,2]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		edgeupdateschedulesDecoratedUpdateScheduleTypeTypePropEnum = append(edgeupdateschedulesDecoratedUpdateScheduleTypeTypePropEnum, v)
	}
}

// prop value enum
func (m *EdgeupdateschedulesDecoratedUpdateSchedule) validateTypeEnum(path, location string, value int64) error {
	if err := validate.EnumCase(path, location, value, edgeupdateschedulesDecoratedUpdateScheduleTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *EdgeupdateschedulesDecoratedUpdateSchedule) validateType(formats strfmt.Registry) error {
	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this edgeupdateschedules decorated update schedule based on context it is used
func (m *EdgeupdateschedulesDecoratedUpdateSchedule) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *EdgeupdateschedulesDecoratedUpdateSchedule) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EdgeupdateschedulesDecoratedUpdateSchedule) UnmarshalBinary(b []byte) error {
	var res EdgeupdateschedulesDecoratedUpdateSchedule
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
