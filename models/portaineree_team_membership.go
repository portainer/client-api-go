// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PortainereeTeamMembership portaineree team membership
//
// swagger:model portaineree.TeamMembership
type PortainereeTeamMembership struct {

	// Membership Identifier
	// Example: 1
	ID int64 `json:"Id,omitempty"`

	// Team role (1 for team leader and 2 for team member)
	// Example: 1
	Role struct {
		PortainereeMembershipRole
	} `json:"Role,omitempty"`

	// Team identifier
	// Example: 1
	TeamID int64 `json:"TeamID,omitempty"`

	// User identifier
	// Example: 1
	UserID int64 `json:"UserID,omitempty"`
}

// Validate validates this portaineree team membership
func (m *PortainereeTeamMembership) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRole(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PortainereeTeamMembership) validateRole(formats strfmt.Registry) error {
	if swag.IsZero(m.Role) { // not required
		return nil
	}

	return nil
}

// ContextValidate validate this portaineree team membership based on the context it is used
func (m *PortainereeTeamMembership) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateRole(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PortainereeTeamMembership) contextValidateRole(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

// MarshalBinary interface implementation
func (m *PortainereeTeamMembership) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PortainereeTeamMembership) UnmarshalBinary(b []byte) error {
	var res PortainereeTeamMembership
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
