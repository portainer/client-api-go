// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PortainereeCustomTemplateEdgeSettings portaineree custom template edge settings
//
// swagger:model portaineree.CustomTemplateEdgeSettings
type PortainereeCustomTemplateEdgeSettings struct {

	// private registry Id
	PrivateRegistryID int64 `json:"PrivateRegistryId,omitempty"`

	// Pre Pull Image
	PrePullImage bool `json:"prePullImage,omitempty"`

	// relative path settings
	RelativePathSettings *PortainereeCustomTemplateRelativePathSettings `json:"relativePathSettings,omitempty"`

	// Retry deploy
	// Example: false
	RetryDeploy bool `json:"retryDeploy,omitempty"`

	// retry period
	RetryPeriod int64 `json:"retryPeriod,omitempty"`

	// StaggerConfig is the configuration for staggered update
	StaggerConfig *PortainereeEdgeStaggerConfig `json:"staggerConfig,omitempty"`
}

// Validate validates this portaineree custom template edge settings
func (m *PortainereeCustomTemplateEdgeSettings) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRelativePathSettings(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStaggerConfig(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PortainereeCustomTemplateEdgeSettings) validateRelativePathSettings(formats strfmt.Registry) error {
	if swag.IsZero(m.RelativePathSettings) { // not required
		return nil
	}

	if m.RelativePathSettings != nil {
		if err := m.RelativePathSettings.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("relativePathSettings")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("relativePathSettings")
			}
			return err
		}
	}

	return nil
}

func (m *PortainereeCustomTemplateEdgeSettings) validateStaggerConfig(formats strfmt.Registry) error {
	if swag.IsZero(m.StaggerConfig) { // not required
		return nil
	}

	if m.StaggerConfig != nil {
		if err := m.StaggerConfig.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("staggerConfig")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("staggerConfig")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this portaineree custom template edge settings based on the context it is used
func (m *PortainereeCustomTemplateEdgeSettings) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateRelativePathSettings(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateStaggerConfig(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PortainereeCustomTemplateEdgeSettings) contextValidateRelativePathSettings(ctx context.Context, formats strfmt.Registry) error {

	if m.RelativePathSettings != nil {

		if swag.IsZero(m.RelativePathSettings) { // not required
			return nil
		}

		if err := m.RelativePathSettings.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("relativePathSettings")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("relativePathSettings")
			}
			return err
		}
	}

	return nil
}

func (m *PortainereeCustomTemplateEdgeSettings) contextValidateStaggerConfig(ctx context.Context, formats strfmt.Registry) error {

	if m.StaggerConfig != nil {

		if swag.IsZero(m.StaggerConfig) { // not required
			return nil
		}

		if err := m.StaggerConfig.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("staggerConfig")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("staggerConfig")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PortainereeCustomTemplateEdgeSettings) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PortainereeCustomTemplateEdgeSettings) UnmarshalBinary(b []byte) error {
	var res PortainereeCustomTemplateEdgeSettings
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
