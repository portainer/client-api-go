// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// EdgeupdateschedulesUpdatePayload edgeupdateschedules update payload
//
// swagger:model edgeupdateschedules.updatePayload
type EdgeupdateschedulesUpdatePayload struct {

	// default to "" == portainer/agent:<current_server_version>
	AgentImage string `json:"agentImage,omitempty"`

	// group i ds
	GroupIDs []int64 `json:"groupIDs"`

	// name
	Name string `json:"name,omitempty"`

	// ID of registry
	// Example: 1
	RegistryID int64 `json:"registryID,omitempty"`

	// scheduled time
	ScheduledTime string `json:"scheduledTime,omitempty"`

	// Type of the update (1 - update, 2 - rollback)
	// Example: 1
	// Enum: [1,2]
	Type int64 `json:"type,omitempty"`

	// default to "" == portainer/portainer-updater:latest
	UpdaterImage string `json:"updaterImage,omitempty"`
}

// Validate validates this edgeupdateschedules update payload
func (m *EdgeupdateschedulesUpdatePayload) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var edgeupdateschedulesUpdatePayloadTypeTypePropEnum []interface{}

func init() {
	var res []int64
	if err := json.Unmarshal([]byte(`[1,2]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		edgeupdateschedulesUpdatePayloadTypeTypePropEnum = append(edgeupdateschedulesUpdatePayloadTypeTypePropEnum, v)
	}
}

// prop value enum
func (m *EdgeupdateschedulesUpdatePayload) validateTypeEnum(path, location string, value int64) error {
	if err := validate.EnumCase(path, location, value, edgeupdateschedulesUpdatePayloadTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *EdgeupdateschedulesUpdatePayload) validateType(formats strfmt.Registry) error {
	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this edgeupdateschedules update payload based on context it is used
func (m *EdgeupdateschedulesUpdatePayload) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *EdgeupdateschedulesUpdatePayload) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EdgeupdateschedulesUpdatePayload) UnmarshalBinary(b []byte) error {
	var res EdgeupdateschedulesUpdatePayload
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
