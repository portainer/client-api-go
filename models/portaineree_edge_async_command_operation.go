// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// PortainereeEdgeAsyncCommandOperation portaineree edge async command operation
//
// swagger:model portaineree.EdgeAsyncCommandOperation
type PortainereeEdgeAsyncCommandOperation string

func NewPortainereeEdgeAsyncCommandOperation(value PortainereeEdgeAsyncCommandOperation) *PortainereeEdgeAsyncCommandOperation {
	return &value
}

// Pointer returns a pointer to a freshly-allocated PortainereeEdgeAsyncCommandOperation.
func (m PortainereeEdgeAsyncCommandOperation) Pointer() *PortainereeEdgeAsyncCommandOperation {
	return &m
}

const (

	// PortainereeEdgeAsyncCommandOperationAdd captures enum value "add"
	PortainereeEdgeAsyncCommandOperationAdd PortainereeEdgeAsyncCommandOperation = "add"

	// PortainereeEdgeAsyncCommandOperationRemove captures enum value "remove"
	PortainereeEdgeAsyncCommandOperationRemove PortainereeEdgeAsyncCommandOperation = "remove"

	// PortainereeEdgeAsyncCommandOperationReplace captures enum value "replace"
	PortainereeEdgeAsyncCommandOperationReplace PortainereeEdgeAsyncCommandOperation = "replace"
)

// for schema
var portainereeEdgeAsyncCommandOperationEnum []interface{}

func init() {
	var res []PortainereeEdgeAsyncCommandOperation
	if err := json.Unmarshal([]byte(`["add","remove","replace"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		portainereeEdgeAsyncCommandOperationEnum = append(portainereeEdgeAsyncCommandOperationEnum, v)
	}
}

func (m PortainereeEdgeAsyncCommandOperation) validatePortainereeEdgeAsyncCommandOperationEnum(path, location string, value PortainereeEdgeAsyncCommandOperation) error {
	if err := validate.EnumCase(path, location, value, portainereeEdgeAsyncCommandOperationEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this portaineree edge async command operation
func (m PortainereeEdgeAsyncCommandOperation) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validatePortainereeEdgeAsyncCommandOperationEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this portaineree edge async command operation based on context it is used
func (m PortainereeEdgeAsyncCommandOperation) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
