// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// EdgetypesUpdateScheduleStatus edgetypes update schedule status
//
// swagger:model edgetypes.UpdateScheduleStatus
type EdgetypesUpdateScheduleStatus struct {

	// Current version of the edge agent
	// Example: 1
	CurrentVersion string `json:"currentVersion,omitempty"`

	// Error message if status is failed
	Error string `json:"error,omitempty"`

	// Status of the schedule (0 - pending, 1 - failed, 2 - success)
	// Example: 1
	// Enum: [1 2 3]
	Status int64 `json:"status,omitempty"`

	// Target version of the edge agent
	// Example: 1
	TargetVersion string `json:"targetVersion,omitempty"`
}

// Validate validates this edgetypes update schedule status
func (m *EdgetypesUpdateScheduleStatus) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var edgetypesUpdateScheduleStatusTypeStatusPropEnum []interface{}

func init() {
	var res []int64
	if err := json.Unmarshal([]byte(`[1,2,3]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		edgetypesUpdateScheduleStatusTypeStatusPropEnum = append(edgetypesUpdateScheduleStatusTypeStatusPropEnum, v)
	}
}

// prop value enum
func (m *EdgetypesUpdateScheduleStatus) validateStatusEnum(path, location string, value int64) error {
	if err := validate.EnumCase(path, location, value, edgetypesUpdateScheduleStatusTypeStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *EdgetypesUpdateScheduleStatus) validateStatus(formats strfmt.Registry) error {
	if swag.IsZero(m.Status) { // not required
		return nil
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", m.Status); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this edgetypes update schedule status based on context it is used
func (m *EdgetypesUpdateScheduleStatus) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *EdgetypesUpdateScheduleStatus) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EdgetypesUpdateScheduleStatus) UnmarshalBinary(b []byte) error {
	var res EdgetypesUpdateScheduleStatus
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
