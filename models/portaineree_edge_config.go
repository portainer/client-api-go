// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PortainereeEdgeConfig portaineree edge config
//
// swagger:model portaineree.EdgeConfig
type PortainereeEdgeConfig struct {

	// base dir
	BaseDir string `json:"baseDir,omitempty"`

	// category
	Category string `json:"category,omitempty"`

	// created
	Created int64 `json:"created,omitempty"`

	// Deprecated fields
	// Deprecated in DBVersion == 2
	CreatedBy int64 `json:"createdBy,omitempty"`

	// edge group i ds
	EdgeGroupIDs []int64 `json:"edgeGroupIDs"`

	// id
	ID int64 `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// prev
	Prev *PortainereeEdgeConfig `json:"prev,omitempty"`

	// progress
	Progress *PortainereeEdgeConfigProgress `json:"progress,omitempty"`

	// state
	State int64 `json:"state,omitempty"`

	// type
	Type int64 `json:"type,omitempty"`

	// updated
	Updated int64 `json:"updated,omitempty"`

	// Deprecated fields
	// Deprecated in DBVersion == 2
	UpdatedBy int64 `json:"updatedBy,omitempty"`
}

// Validate validates this portaineree edge config
func (m *PortainereeEdgeConfig) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePrev(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProgress(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PortainereeEdgeConfig) validatePrev(formats strfmt.Registry) error {
	if swag.IsZero(m.Prev) { // not required
		return nil
	}

	if m.Prev != nil {
		if err := m.Prev.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("prev")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("prev")
			}
			return err
		}
	}

	return nil
}

func (m *PortainereeEdgeConfig) validateProgress(formats strfmt.Registry) error {
	if swag.IsZero(m.Progress) { // not required
		return nil
	}

	if m.Progress != nil {
		if err := m.Progress.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("progress")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("progress")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this portaineree edge config based on the context it is used
func (m *PortainereeEdgeConfig) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidatePrev(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateProgress(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PortainereeEdgeConfig) contextValidatePrev(ctx context.Context, formats strfmt.Registry) error {

	if m.Prev != nil {

		if swag.IsZero(m.Prev) { // not required
			return nil
		}

		if err := m.Prev.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("prev")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("prev")
			}
			return err
		}
	}

	return nil
}

func (m *PortainereeEdgeConfig) contextValidateProgress(ctx context.Context, formats strfmt.Registry) error {

	if m.Progress != nil {

		if swag.IsZero(m.Progress) { // not required
			return nil
		}

		if err := m.Progress.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("progress")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("progress")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PortainereeEdgeConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PortainereeEdgeConfig) UnmarshalBinary(b []byte) error {
	var res PortainereeEdgeConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
