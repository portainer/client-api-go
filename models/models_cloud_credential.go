// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ModelsCloudCredential models cloud credential
//
// swagger:model models.CloudCredential
type ModelsCloudCredential struct {

	// created
	// Example: 1650000000
	Created int64 `json:"created,omitempty"`

	// credentials
	Credentials ModelsCloudCredentialMap `json:"credentials,omitempty"`

	// id
	// Example: 1
	ID int64 `json:"id,omitempty"`

	// name
	// Example: test-env
	Name string `json:"name,omitempty"`

	// provider
	// Example: aws
	Provider string `json:"provider,omitempty"`
}

// Validate validates this models cloud credential
func (m *ModelsCloudCredential) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCredentials(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ModelsCloudCredential) validateCredentials(formats strfmt.Registry) error {
	if swag.IsZero(m.Credentials) { // not required
		return nil
	}

	if m.Credentials != nil {
		if err := m.Credentials.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("credentials")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("credentials")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this models cloud credential based on the context it is used
func (m *ModelsCloudCredential) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateCredentials(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ModelsCloudCredential) contextValidateCredentials(ctx context.Context, formats strfmt.Registry) error {

	if err := m.Credentials.ContextValidate(ctx, formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("credentials")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("credentials")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ModelsCloudCredential) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ModelsCloudCredential) UnmarshalBinary(b []byte) error {
	var res ModelsCloudCredential
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
