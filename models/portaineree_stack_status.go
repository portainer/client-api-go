// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// PortainereeStackStatus portaineree stack status
//
// swagger:model portaineree.StackStatus
type PortainereeStackStatus int64

// for schema
var portainereeStackStatusEnum []interface{}

func init() {
	var res []PortainereeStackStatus
	if err := json.Unmarshal([]byte(`[0,1,2]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		portainereeStackStatusEnum = append(portainereeStackStatusEnum, v)
	}
}

func (m PortainereeStackStatus) validatePortainereeStackStatusEnum(path, location string, value PortainereeStackStatus) error {
	if err := validate.EnumCase(path, location, value, portainereeStackStatusEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this portaineree stack status
func (m PortainereeStackStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validatePortainereeStackStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this portaineree stack status based on context it is used
func (m PortainereeStackStatus) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
