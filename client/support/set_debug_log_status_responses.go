// Code generated by go-swagger; DO NOT EDIT.

package support

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/portainer/client-api-go/v2/models"
)

// SetDebugLogStatusReader is a Reader for the SetDebugLogStatus structure.
type SetDebugLogStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SetDebugLogStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSetDebugLogStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSetDebugLogStatusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSetDebugLogStatusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /support/debug_log] SetDebugLogStatus", response, response.Code())
	}
}

// NewSetDebugLogStatusOK creates a SetDebugLogStatusOK with default headers values
func NewSetDebugLogStatusOK() *SetDebugLogStatusOK {
	return &SetDebugLogStatusOK{}
}

/*
SetDebugLogStatusOK describes a response with status code 200, with default header values.

Success
*/
type SetDebugLogStatusOK struct {
	Payload *models.SupportDebugLogPayload
}

// IsSuccess returns true when this set debug log status o k response has a 2xx status code
func (o *SetDebugLogStatusOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this set debug log status o k response has a 3xx status code
func (o *SetDebugLogStatusOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set debug log status o k response has a 4xx status code
func (o *SetDebugLogStatusOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this set debug log status o k response has a 5xx status code
func (o *SetDebugLogStatusOK) IsServerError() bool {
	return false
}

// IsCode returns true when this set debug log status o k response a status code equal to that given
func (o *SetDebugLogStatusOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the set debug log status o k response
func (o *SetDebugLogStatusOK) Code() int {
	return 200
}

func (o *SetDebugLogStatusOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /support/debug_log][%d] setDebugLogStatusOK %s", 200, payload)
}

func (o *SetDebugLogStatusOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /support/debug_log][%d] setDebugLogStatusOK %s", 200, payload)
}

func (o *SetDebugLogStatusOK) GetPayload() *models.SupportDebugLogPayload {
	return o.Payload
}

func (o *SetDebugLogStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SupportDebugLogPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetDebugLogStatusBadRequest creates a SetDebugLogStatusBadRequest with default headers values
func NewSetDebugLogStatusBadRequest() *SetDebugLogStatusBadRequest {
	return &SetDebugLogStatusBadRequest{}
}

/*
SetDebugLogStatusBadRequest describes a response with status code 400, with default header values.

Invalid request payload
*/
type SetDebugLogStatusBadRequest struct {
}

// IsSuccess returns true when this set debug log status bad request response has a 2xx status code
func (o *SetDebugLogStatusBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set debug log status bad request response has a 3xx status code
func (o *SetDebugLogStatusBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set debug log status bad request response has a 4xx status code
func (o *SetDebugLogStatusBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this set debug log status bad request response has a 5xx status code
func (o *SetDebugLogStatusBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this set debug log status bad request response a status code equal to that given
func (o *SetDebugLogStatusBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the set debug log status bad request response
func (o *SetDebugLogStatusBadRequest) Code() int {
	return 400
}

func (o *SetDebugLogStatusBadRequest) Error() string {
	return fmt.Sprintf("[PUT /support/debug_log][%d] setDebugLogStatusBadRequest", 400)
}

func (o *SetDebugLogStatusBadRequest) String() string {
	return fmt.Sprintf("[PUT /support/debug_log][%d] setDebugLogStatusBadRequest", 400)
}

func (o *SetDebugLogStatusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSetDebugLogStatusInternalServerError creates a SetDebugLogStatusInternalServerError with default headers values
func NewSetDebugLogStatusInternalServerError() *SetDebugLogStatusInternalServerError {
	return &SetDebugLogStatusInternalServerError{}
}

/*
SetDebugLogStatusInternalServerError describes a response with status code 500, with default header values.

Server error occurred.
*/
type SetDebugLogStatusInternalServerError struct {
}

// IsSuccess returns true when this set debug log status internal server error response has a 2xx status code
func (o *SetDebugLogStatusInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set debug log status internal server error response has a 3xx status code
func (o *SetDebugLogStatusInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set debug log status internal server error response has a 4xx status code
func (o *SetDebugLogStatusInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this set debug log status internal server error response has a 5xx status code
func (o *SetDebugLogStatusInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this set debug log status internal server error response a status code equal to that given
func (o *SetDebugLogStatusInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the set debug log status internal server error response
func (o *SetDebugLogStatusInternalServerError) Code() int {
	return 500
}

func (o *SetDebugLogStatusInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /support/debug_log][%d] setDebugLogStatusInternalServerError", 500)
}

func (o *SetDebugLogStatusInternalServerError) String() string {
	return fmt.Sprintf("[PUT /support/debug_log][%d] setDebugLogStatusInternalServerError", 500)
}

func (o *SetDebugLogStatusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
