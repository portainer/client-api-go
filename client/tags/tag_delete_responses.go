// Code generated by go-swagger; DO NOT EDIT.

package tags

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// TagDeleteReader is a Reader for the TagDelete structure.
type TagDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TagDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewTagDeleteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewTagDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewTagDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewTagDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewTagDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewTagDeleteNoContent creates a TagDeleteNoContent with default headers values
func NewTagDeleteNoContent() *TagDeleteNoContent {
	return &TagDeleteNoContent{}
}

/* TagDeleteNoContent describes a response with status code 204, with default header values.

Success
*/
type TagDeleteNoContent struct {
}

func (o *TagDeleteNoContent) Error() string {
	return fmt.Sprintf("[DELETE /tags/{id}][%d] tagDeleteNoContent ", 204)
}

func (o *TagDeleteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTagDeleteBadRequest creates a TagDeleteBadRequest with default headers values
func NewTagDeleteBadRequest() *TagDeleteBadRequest {
	return &TagDeleteBadRequest{}
}

/* TagDeleteBadRequest describes a response with status code 400, with default header values.

Invalid request
*/
type TagDeleteBadRequest struct {
}

func (o *TagDeleteBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /tags/{id}][%d] tagDeleteBadRequest ", 400)
}

func (o *TagDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTagDeleteForbidden creates a TagDeleteForbidden with default headers values
func NewTagDeleteForbidden() *TagDeleteForbidden {
	return &TagDeleteForbidden{}
}

/* TagDeleteForbidden describes a response with status code 403, with default header values.

Permission denied
*/
type TagDeleteForbidden struct {
}

func (o *TagDeleteForbidden) Error() string {
	return fmt.Sprintf("[DELETE /tags/{id}][%d] tagDeleteForbidden ", 403)
}

func (o *TagDeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTagDeleteNotFound creates a TagDeleteNotFound with default headers values
func NewTagDeleteNotFound() *TagDeleteNotFound {
	return &TagDeleteNotFound{}
}

/* TagDeleteNotFound describes a response with status code 404, with default header values.

Tag not found
*/
type TagDeleteNotFound struct {
}

func (o *TagDeleteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /tags/{id}][%d] tagDeleteNotFound ", 404)
}

func (o *TagDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTagDeleteInternalServerError creates a TagDeleteInternalServerError with default headers values
func NewTagDeleteInternalServerError() *TagDeleteInternalServerError {
	return &TagDeleteInternalServerError{}
}

/* TagDeleteInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type TagDeleteInternalServerError struct {
}

func (o *TagDeleteInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /tags/{id}][%d] tagDeleteInternalServerError ", 500)
}

func (o *TagDeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
