// Code generated by go-swagger; DO NOT EDIT.

package teams

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/portainer/client-api-go/v2/models"
)

// TeamInspectReader is a Reader for the TeamInspect structure.
type TeamInspectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TeamInspectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTeamInspectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewTeamInspectNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewTeamInspectBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewTeamInspectForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewTeamInspectNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewTeamInspectInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewTeamInspectOK creates a TeamInspectOK with default headers values
func NewTeamInspectOK() *TeamInspectOK {
	return &TeamInspectOK{}
}

/*
TeamInspectOK describes a response with status code 200, with default header values.

Success
*/
type TeamInspectOK struct {
	Payload *models.PortainerTeam
}

// IsSuccess returns true when this team inspect o k response has a 2xx status code
func (o *TeamInspectOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this team inspect o k response has a 3xx status code
func (o *TeamInspectOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this team inspect o k response has a 4xx status code
func (o *TeamInspectOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this team inspect o k response has a 5xx status code
func (o *TeamInspectOK) IsServerError() bool {
	return false
}

// IsCode returns true when this team inspect o k response a status code equal to that given
func (o *TeamInspectOK) IsCode(code int) bool {
	return code == 200
}

func (o *TeamInspectOK) Error() string {
	return fmt.Sprintf("[GET /teams/{id}][%d] teamInspectOK  %+v", 200, o.Payload)
}

func (o *TeamInspectOK) String() string {
	return fmt.Sprintf("[GET /teams/{id}][%d] teamInspectOK  %+v", 200, o.Payload)
}

func (o *TeamInspectOK) GetPayload() *models.PortainerTeam {
	return o.Payload
}

func (o *TeamInspectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PortainerTeam)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTeamInspectNoContent creates a TeamInspectNoContent with default headers values
func NewTeamInspectNoContent() *TeamInspectNoContent {
	return &TeamInspectNoContent{}
}

/*
TeamInspectNoContent describes a response with status code 204, with default header values.

Success
*/
type TeamInspectNoContent struct {
}

// IsSuccess returns true when this team inspect no content response has a 2xx status code
func (o *TeamInspectNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this team inspect no content response has a 3xx status code
func (o *TeamInspectNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this team inspect no content response has a 4xx status code
func (o *TeamInspectNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this team inspect no content response has a 5xx status code
func (o *TeamInspectNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this team inspect no content response a status code equal to that given
func (o *TeamInspectNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *TeamInspectNoContent) Error() string {
	return fmt.Sprintf("[GET /teams/{id}][%d] teamInspectNoContent ", 204)
}

func (o *TeamInspectNoContent) String() string {
	return fmt.Sprintf("[GET /teams/{id}][%d] teamInspectNoContent ", 204)
}

func (o *TeamInspectNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTeamInspectBadRequest creates a TeamInspectBadRequest with default headers values
func NewTeamInspectBadRequest() *TeamInspectBadRequest {
	return &TeamInspectBadRequest{}
}

/*
TeamInspectBadRequest describes a response with status code 400, with default header values.

Invalid request
*/
type TeamInspectBadRequest struct {
}

// IsSuccess returns true when this team inspect bad request response has a 2xx status code
func (o *TeamInspectBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this team inspect bad request response has a 3xx status code
func (o *TeamInspectBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this team inspect bad request response has a 4xx status code
func (o *TeamInspectBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this team inspect bad request response has a 5xx status code
func (o *TeamInspectBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this team inspect bad request response a status code equal to that given
func (o *TeamInspectBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *TeamInspectBadRequest) Error() string {
	return fmt.Sprintf("[GET /teams/{id}][%d] teamInspectBadRequest ", 400)
}

func (o *TeamInspectBadRequest) String() string {
	return fmt.Sprintf("[GET /teams/{id}][%d] teamInspectBadRequest ", 400)
}

func (o *TeamInspectBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTeamInspectForbidden creates a TeamInspectForbidden with default headers values
func NewTeamInspectForbidden() *TeamInspectForbidden {
	return &TeamInspectForbidden{}
}

/*
TeamInspectForbidden describes a response with status code 403, with default header values.

Permission denied
*/
type TeamInspectForbidden struct {
}

// IsSuccess returns true when this team inspect forbidden response has a 2xx status code
func (o *TeamInspectForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this team inspect forbidden response has a 3xx status code
func (o *TeamInspectForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this team inspect forbidden response has a 4xx status code
func (o *TeamInspectForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this team inspect forbidden response has a 5xx status code
func (o *TeamInspectForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this team inspect forbidden response a status code equal to that given
func (o *TeamInspectForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *TeamInspectForbidden) Error() string {
	return fmt.Sprintf("[GET /teams/{id}][%d] teamInspectForbidden ", 403)
}

func (o *TeamInspectForbidden) String() string {
	return fmt.Sprintf("[GET /teams/{id}][%d] teamInspectForbidden ", 403)
}

func (o *TeamInspectForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTeamInspectNotFound creates a TeamInspectNotFound with default headers values
func NewTeamInspectNotFound() *TeamInspectNotFound {
	return &TeamInspectNotFound{}
}

/*
TeamInspectNotFound describes a response with status code 404, with default header values.

Team not found
*/
type TeamInspectNotFound struct {
}

// IsSuccess returns true when this team inspect not found response has a 2xx status code
func (o *TeamInspectNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this team inspect not found response has a 3xx status code
func (o *TeamInspectNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this team inspect not found response has a 4xx status code
func (o *TeamInspectNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this team inspect not found response has a 5xx status code
func (o *TeamInspectNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this team inspect not found response a status code equal to that given
func (o *TeamInspectNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *TeamInspectNotFound) Error() string {
	return fmt.Sprintf("[GET /teams/{id}][%d] teamInspectNotFound ", 404)
}

func (o *TeamInspectNotFound) String() string {
	return fmt.Sprintf("[GET /teams/{id}][%d] teamInspectNotFound ", 404)
}

func (o *TeamInspectNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTeamInspectInternalServerError creates a TeamInspectInternalServerError with default headers values
func NewTeamInspectInternalServerError() *TeamInspectInternalServerError {
	return &TeamInspectInternalServerError{}
}

/*
TeamInspectInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type TeamInspectInternalServerError struct {
}

// IsSuccess returns true when this team inspect internal server error response has a 2xx status code
func (o *TeamInspectInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this team inspect internal server error response has a 3xx status code
func (o *TeamInspectInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this team inspect internal server error response has a 4xx status code
func (o *TeamInspectInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this team inspect internal server error response has a 5xx status code
func (o *TeamInspectInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this team inspect internal server error response a status code equal to that given
func (o *TeamInspectInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *TeamInspectInternalServerError) Error() string {
	return fmt.Sprintf("[GET /teams/{id}][%d] teamInspectInternalServerError ", 500)
}

func (o *TeamInspectInternalServerError) String() string {
	return fmt.Sprintf("[GET /teams/{id}][%d] teamInspectInternalServerError ", 500)
}

func (o *TeamInspectInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
