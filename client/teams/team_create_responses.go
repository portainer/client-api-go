// Code generated by go-swagger; DO NOT EDIT.

package teams

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/portainer/client-api-go/v2/models"
)

// TeamCreateReader is a Reader for the TeamCreate structure.
type TeamCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TeamCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTeamCreateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewTeamCreateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewTeamCreateConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewTeamCreateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /teams] TeamCreate", response, response.Code())
	}
}

// NewTeamCreateOK creates a TeamCreateOK with default headers values
func NewTeamCreateOK() *TeamCreateOK {
	return &TeamCreateOK{}
}

/*
TeamCreateOK describes a response with status code 200, with default header values.

Success
*/
type TeamCreateOK struct {
	Payload *models.PortainereeTeam
}

// IsSuccess returns true when this team create o k response has a 2xx status code
func (o *TeamCreateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this team create o k response has a 3xx status code
func (o *TeamCreateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this team create o k response has a 4xx status code
func (o *TeamCreateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this team create o k response has a 5xx status code
func (o *TeamCreateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this team create o k response a status code equal to that given
func (o *TeamCreateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the team create o k response
func (o *TeamCreateOK) Code() int {
	return 200
}

func (o *TeamCreateOK) Error() string {
	return fmt.Sprintf("[POST /teams][%d] teamCreateOK  %+v", 200, o.Payload)
}

func (o *TeamCreateOK) String() string {
	return fmt.Sprintf("[POST /teams][%d] teamCreateOK  %+v", 200, o.Payload)
}

func (o *TeamCreateOK) GetPayload() *models.PortainereeTeam {
	return o.Payload
}

func (o *TeamCreateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PortainereeTeam)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTeamCreateBadRequest creates a TeamCreateBadRequest with default headers values
func NewTeamCreateBadRequest() *TeamCreateBadRequest {
	return &TeamCreateBadRequest{}
}

/*
TeamCreateBadRequest describes a response with status code 400, with default header values.

Invalid request
*/
type TeamCreateBadRequest struct {
}

// IsSuccess returns true when this team create bad request response has a 2xx status code
func (o *TeamCreateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this team create bad request response has a 3xx status code
func (o *TeamCreateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this team create bad request response has a 4xx status code
func (o *TeamCreateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this team create bad request response has a 5xx status code
func (o *TeamCreateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this team create bad request response a status code equal to that given
func (o *TeamCreateBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the team create bad request response
func (o *TeamCreateBadRequest) Code() int {
	return 400
}

func (o *TeamCreateBadRequest) Error() string {
	return fmt.Sprintf("[POST /teams][%d] teamCreateBadRequest ", 400)
}

func (o *TeamCreateBadRequest) String() string {
	return fmt.Sprintf("[POST /teams][%d] teamCreateBadRequest ", 400)
}

func (o *TeamCreateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTeamCreateConflict creates a TeamCreateConflict with default headers values
func NewTeamCreateConflict() *TeamCreateConflict {
	return &TeamCreateConflict{}
}

/*
TeamCreateConflict describes a response with status code 409, with default header values.

Team already exists
*/
type TeamCreateConflict struct {
}

// IsSuccess returns true when this team create conflict response has a 2xx status code
func (o *TeamCreateConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this team create conflict response has a 3xx status code
func (o *TeamCreateConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this team create conflict response has a 4xx status code
func (o *TeamCreateConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this team create conflict response has a 5xx status code
func (o *TeamCreateConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this team create conflict response a status code equal to that given
func (o *TeamCreateConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the team create conflict response
func (o *TeamCreateConflict) Code() int {
	return 409
}

func (o *TeamCreateConflict) Error() string {
	return fmt.Sprintf("[POST /teams][%d] teamCreateConflict ", 409)
}

func (o *TeamCreateConflict) String() string {
	return fmt.Sprintf("[POST /teams][%d] teamCreateConflict ", 409)
}

func (o *TeamCreateConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTeamCreateInternalServerError creates a TeamCreateInternalServerError with default headers values
func NewTeamCreateInternalServerError() *TeamCreateInternalServerError {
	return &TeamCreateInternalServerError{}
}

/*
TeamCreateInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type TeamCreateInternalServerError struct {
}

// IsSuccess returns true when this team create internal server error response has a 2xx status code
func (o *TeamCreateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this team create internal server error response has a 3xx status code
func (o *TeamCreateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this team create internal server error response has a 4xx status code
func (o *TeamCreateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this team create internal server error response has a 5xx status code
func (o *TeamCreateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this team create internal server error response a status code equal to that given
func (o *TeamCreateInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the team create internal server error response
func (o *TeamCreateInternalServerError) Code() int {
	return 500
}

func (o *TeamCreateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /teams][%d] teamCreateInternalServerError ", 500)
}

func (o *TeamCreateInternalServerError) String() string {
	return fmt.Sprintf("[POST /teams][%d] teamCreateInternalServerError ", 500)
}

func (o *TeamCreateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
