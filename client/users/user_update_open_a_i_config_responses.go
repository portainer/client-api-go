// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UserUpdateOpenAIConfigReader is a Reader for the UserUpdateOpenAIConfig structure.
type UserUpdateOpenAIConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserUpdateOpenAIConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUserUpdateOpenAIConfigNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUserUpdateOpenAIConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUserUpdateOpenAIConfigForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUserUpdateOpenAIConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUserUpdateOpenAIConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUserUpdateOpenAIConfigNoContent creates a UserUpdateOpenAIConfigNoContent with default headers values
func NewUserUpdateOpenAIConfigNoContent() *UserUpdateOpenAIConfigNoContent {
	return &UserUpdateOpenAIConfigNoContent{}
}

/*
UserUpdateOpenAIConfigNoContent describes a response with status code 204, with default header values.

Success
*/
type UserUpdateOpenAIConfigNoContent struct {
}

// IsSuccess returns true when this user update open a i config no content response has a 2xx status code
func (o *UserUpdateOpenAIConfigNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this user update open a i config no content response has a 3xx status code
func (o *UserUpdateOpenAIConfigNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user update open a i config no content response has a 4xx status code
func (o *UserUpdateOpenAIConfigNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this user update open a i config no content response has a 5xx status code
func (o *UserUpdateOpenAIConfigNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this user update open a i config no content response a status code equal to that given
func (o *UserUpdateOpenAIConfigNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *UserUpdateOpenAIConfigNoContent) Error() string {
	return fmt.Sprintf("[PUT /users/{id}/openai][%d] userUpdateOpenAIConfigNoContent ", 204)
}

func (o *UserUpdateOpenAIConfigNoContent) String() string {
	return fmt.Sprintf("[PUT /users/{id}/openai][%d] userUpdateOpenAIConfigNoContent ", 204)
}

func (o *UserUpdateOpenAIConfigNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUserUpdateOpenAIConfigBadRequest creates a UserUpdateOpenAIConfigBadRequest with default headers values
func NewUserUpdateOpenAIConfigBadRequest() *UserUpdateOpenAIConfigBadRequest {
	return &UserUpdateOpenAIConfigBadRequest{}
}

/*
UserUpdateOpenAIConfigBadRequest describes a response with status code 400, with default header values.

Invalid request
*/
type UserUpdateOpenAIConfigBadRequest struct {
}

// IsSuccess returns true when this user update open a i config bad request response has a 2xx status code
func (o *UserUpdateOpenAIConfigBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user update open a i config bad request response has a 3xx status code
func (o *UserUpdateOpenAIConfigBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user update open a i config bad request response has a 4xx status code
func (o *UserUpdateOpenAIConfigBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this user update open a i config bad request response has a 5xx status code
func (o *UserUpdateOpenAIConfigBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this user update open a i config bad request response a status code equal to that given
func (o *UserUpdateOpenAIConfigBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *UserUpdateOpenAIConfigBadRequest) Error() string {
	return fmt.Sprintf("[PUT /users/{id}/openai][%d] userUpdateOpenAIConfigBadRequest ", 400)
}

func (o *UserUpdateOpenAIConfigBadRequest) String() string {
	return fmt.Sprintf("[PUT /users/{id}/openai][%d] userUpdateOpenAIConfigBadRequest ", 400)
}

func (o *UserUpdateOpenAIConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUserUpdateOpenAIConfigForbidden creates a UserUpdateOpenAIConfigForbidden with default headers values
func NewUserUpdateOpenAIConfigForbidden() *UserUpdateOpenAIConfigForbidden {
	return &UserUpdateOpenAIConfigForbidden{}
}

/*
UserUpdateOpenAIConfigForbidden describes a response with status code 403, with default header values.

Permission denied
*/
type UserUpdateOpenAIConfigForbidden struct {
}

// IsSuccess returns true when this user update open a i config forbidden response has a 2xx status code
func (o *UserUpdateOpenAIConfigForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user update open a i config forbidden response has a 3xx status code
func (o *UserUpdateOpenAIConfigForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user update open a i config forbidden response has a 4xx status code
func (o *UserUpdateOpenAIConfigForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this user update open a i config forbidden response has a 5xx status code
func (o *UserUpdateOpenAIConfigForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this user update open a i config forbidden response a status code equal to that given
func (o *UserUpdateOpenAIConfigForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *UserUpdateOpenAIConfigForbidden) Error() string {
	return fmt.Sprintf("[PUT /users/{id}/openai][%d] userUpdateOpenAIConfigForbidden ", 403)
}

func (o *UserUpdateOpenAIConfigForbidden) String() string {
	return fmt.Sprintf("[PUT /users/{id}/openai][%d] userUpdateOpenAIConfigForbidden ", 403)
}

func (o *UserUpdateOpenAIConfigForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUserUpdateOpenAIConfigNotFound creates a UserUpdateOpenAIConfigNotFound with default headers values
func NewUserUpdateOpenAIConfigNotFound() *UserUpdateOpenAIConfigNotFound {
	return &UserUpdateOpenAIConfigNotFound{}
}

/*
UserUpdateOpenAIConfigNotFound describes a response with status code 404, with default header values.

User not found
*/
type UserUpdateOpenAIConfigNotFound struct {
}

// IsSuccess returns true when this user update open a i config not found response has a 2xx status code
func (o *UserUpdateOpenAIConfigNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user update open a i config not found response has a 3xx status code
func (o *UserUpdateOpenAIConfigNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user update open a i config not found response has a 4xx status code
func (o *UserUpdateOpenAIConfigNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this user update open a i config not found response has a 5xx status code
func (o *UserUpdateOpenAIConfigNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this user update open a i config not found response a status code equal to that given
func (o *UserUpdateOpenAIConfigNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *UserUpdateOpenAIConfigNotFound) Error() string {
	return fmt.Sprintf("[PUT /users/{id}/openai][%d] userUpdateOpenAIConfigNotFound ", 404)
}

func (o *UserUpdateOpenAIConfigNotFound) String() string {
	return fmt.Sprintf("[PUT /users/{id}/openai][%d] userUpdateOpenAIConfigNotFound ", 404)
}

func (o *UserUpdateOpenAIConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUserUpdateOpenAIConfigInternalServerError creates a UserUpdateOpenAIConfigInternalServerError with default headers values
func NewUserUpdateOpenAIConfigInternalServerError() *UserUpdateOpenAIConfigInternalServerError {
	return &UserUpdateOpenAIConfigInternalServerError{}
}

/*
UserUpdateOpenAIConfigInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type UserUpdateOpenAIConfigInternalServerError struct {
}

// IsSuccess returns true when this user update open a i config internal server error response has a 2xx status code
func (o *UserUpdateOpenAIConfigInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user update open a i config internal server error response has a 3xx status code
func (o *UserUpdateOpenAIConfigInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user update open a i config internal server error response has a 4xx status code
func (o *UserUpdateOpenAIConfigInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this user update open a i config internal server error response has a 5xx status code
func (o *UserUpdateOpenAIConfigInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this user update open a i config internal server error response a status code equal to that given
func (o *UserUpdateOpenAIConfigInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *UserUpdateOpenAIConfigInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /users/{id}/openai][%d] userUpdateOpenAIConfigInternalServerError ", 500)
}

func (o *UserUpdateOpenAIConfigInternalServerError) String() string {
	return fmt.Sprintf("[PUT /users/{id}/openai][%d] userUpdateOpenAIConfigInternalServerError ", 500)
}

func (o *UserUpdateOpenAIConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
