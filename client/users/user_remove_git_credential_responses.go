// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UserRemoveGitCredentialReader is a Reader for the UserRemoveGitCredential structure.
type UserRemoveGitCredentialReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserRemoveGitCredentialReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUserRemoveGitCredentialNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUserRemoveGitCredentialBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUserRemoveGitCredentialForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUserRemoveGitCredentialNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUserRemoveGitCredentialInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /users/{id}/gitcredentials/{credentialID}] UserRemoveGitCredential", response, response.Code())
	}
}

// NewUserRemoveGitCredentialNoContent creates a UserRemoveGitCredentialNoContent with default headers values
func NewUserRemoveGitCredentialNoContent() *UserRemoveGitCredentialNoContent {
	return &UserRemoveGitCredentialNoContent{}
}

/*
UserRemoveGitCredentialNoContent describes a response with status code 204, with default header values.

Success
*/
type UserRemoveGitCredentialNoContent struct {
}

// IsSuccess returns true when this user remove git credential no content response has a 2xx status code
func (o *UserRemoveGitCredentialNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this user remove git credential no content response has a 3xx status code
func (o *UserRemoveGitCredentialNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user remove git credential no content response has a 4xx status code
func (o *UserRemoveGitCredentialNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this user remove git credential no content response has a 5xx status code
func (o *UserRemoveGitCredentialNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this user remove git credential no content response a status code equal to that given
func (o *UserRemoveGitCredentialNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the user remove git credential no content response
func (o *UserRemoveGitCredentialNoContent) Code() int {
	return 204
}

func (o *UserRemoveGitCredentialNoContent) Error() string {
	return fmt.Sprintf("[DELETE /users/{id}/gitcredentials/{credentialID}][%d] userRemoveGitCredentialNoContent ", 204)
}

func (o *UserRemoveGitCredentialNoContent) String() string {
	return fmt.Sprintf("[DELETE /users/{id}/gitcredentials/{credentialID}][%d] userRemoveGitCredentialNoContent ", 204)
}

func (o *UserRemoveGitCredentialNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUserRemoveGitCredentialBadRequest creates a UserRemoveGitCredentialBadRequest with default headers values
func NewUserRemoveGitCredentialBadRequest() *UserRemoveGitCredentialBadRequest {
	return &UserRemoveGitCredentialBadRequest{}
}

/*
UserRemoveGitCredentialBadRequest describes a response with status code 400, with default header values.

Invalid request
*/
type UserRemoveGitCredentialBadRequest struct {
}

// IsSuccess returns true when this user remove git credential bad request response has a 2xx status code
func (o *UserRemoveGitCredentialBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user remove git credential bad request response has a 3xx status code
func (o *UserRemoveGitCredentialBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user remove git credential bad request response has a 4xx status code
func (o *UserRemoveGitCredentialBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this user remove git credential bad request response has a 5xx status code
func (o *UserRemoveGitCredentialBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this user remove git credential bad request response a status code equal to that given
func (o *UserRemoveGitCredentialBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the user remove git credential bad request response
func (o *UserRemoveGitCredentialBadRequest) Code() int {
	return 400
}

func (o *UserRemoveGitCredentialBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /users/{id}/gitcredentials/{credentialID}][%d] userRemoveGitCredentialBadRequest ", 400)
}

func (o *UserRemoveGitCredentialBadRequest) String() string {
	return fmt.Sprintf("[DELETE /users/{id}/gitcredentials/{credentialID}][%d] userRemoveGitCredentialBadRequest ", 400)
}

func (o *UserRemoveGitCredentialBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUserRemoveGitCredentialForbidden creates a UserRemoveGitCredentialForbidden with default headers values
func NewUserRemoveGitCredentialForbidden() *UserRemoveGitCredentialForbidden {
	return &UserRemoveGitCredentialForbidden{}
}

/*
UserRemoveGitCredentialForbidden describes a response with status code 403, with default header values.

Permission denied
*/
type UserRemoveGitCredentialForbidden struct {
}

// IsSuccess returns true when this user remove git credential forbidden response has a 2xx status code
func (o *UserRemoveGitCredentialForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user remove git credential forbidden response has a 3xx status code
func (o *UserRemoveGitCredentialForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user remove git credential forbidden response has a 4xx status code
func (o *UserRemoveGitCredentialForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this user remove git credential forbidden response has a 5xx status code
func (o *UserRemoveGitCredentialForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this user remove git credential forbidden response a status code equal to that given
func (o *UserRemoveGitCredentialForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the user remove git credential forbidden response
func (o *UserRemoveGitCredentialForbidden) Code() int {
	return 403
}

func (o *UserRemoveGitCredentialForbidden) Error() string {
	return fmt.Sprintf("[DELETE /users/{id}/gitcredentials/{credentialID}][%d] userRemoveGitCredentialForbidden ", 403)
}

func (o *UserRemoveGitCredentialForbidden) String() string {
	return fmt.Sprintf("[DELETE /users/{id}/gitcredentials/{credentialID}][%d] userRemoveGitCredentialForbidden ", 403)
}

func (o *UserRemoveGitCredentialForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUserRemoveGitCredentialNotFound creates a UserRemoveGitCredentialNotFound with default headers values
func NewUserRemoveGitCredentialNotFound() *UserRemoveGitCredentialNotFound {
	return &UserRemoveGitCredentialNotFound{}
}

/*
UserRemoveGitCredentialNotFound describes a response with status code 404, with default header values.

Not found
*/
type UserRemoveGitCredentialNotFound struct {
}

// IsSuccess returns true when this user remove git credential not found response has a 2xx status code
func (o *UserRemoveGitCredentialNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user remove git credential not found response has a 3xx status code
func (o *UserRemoveGitCredentialNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user remove git credential not found response has a 4xx status code
func (o *UserRemoveGitCredentialNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this user remove git credential not found response has a 5xx status code
func (o *UserRemoveGitCredentialNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this user remove git credential not found response a status code equal to that given
func (o *UserRemoveGitCredentialNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the user remove git credential not found response
func (o *UserRemoveGitCredentialNotFound) Code() int {
	return 404
}

func (o *UserRemoveGitCredentialNotFound) Error() string {
	return fmt.Sprintf("[DELETE /users/{id}/gitcredentials/{credentialID}][%d] userRemoveGitCredentialNotFound ", 404)
}

func (o *UserRemoveGitCredentialNotFound) String() string {
	return fmt.Sprintf("[DELETE /users/{id}/gitcredentials/{credentialID}][%d] userRemoveGitCredentialNotFound ", 404)
}

func (o *UserRemoveGitCredentialNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUserRemoveGitCredentialInternalServerError creates a UserRemoveGitCredentialInternalServerError with default headers values
func NewUserRemoveGitCredentialInternalServerError() *UserRemoveGitCredentialInternalServerError {
	return &UserRemoveGitCredentialInternalServerError{}
}

/*
UserRemoveGitCredentialInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type UserRemoveGitCredentialInternalServerError struct {
}

// IsSuccess returns true when this user remove git credential internal server error response has a 2xx status code
func (o *UserRemoveGitCredentialInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user remove git credential internal server error response has a 3xx status code
func (o *UserRemoveGitCredentialInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user remove git credential internal server error response has a 4xx status code
func (o *UserRemoveGitCredentialInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this user remove git credential internal server error response has a 5xx status code
func (o *UserRemoveGitCredentialInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this user remove git credential internal server error response a status code equal to that given
func (o *UserRemoveGitCredentialInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the user remove git credential internal server error response
func (o *UserRemoveGitCredentialInternalServerError) Code() int {
	return 500
}

func (o *UserRemoveGitCredentialInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /users/{id}/gitcredentials/{credentialID}][%d] userRemoveGitCredentialInternalServerError ", 500)
}

func (o *UserRemoveGitCredentialInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /users/{id}/gitcredentials/{credentialID}][%d] userRemoveGitCredentialInternalServerError ", 500)
}

func (o *UserRemoveGitCredentialInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
