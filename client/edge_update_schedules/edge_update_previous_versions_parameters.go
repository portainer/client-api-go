// Code generated by go-swagger; DO NOT EDIT.

package edge_update_schedules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewEdgeUpdatePreviousVersionsParams creates a new EdgeUpdatePreviousVersionsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewEdgeUpdatePreviousVersionsParams() *EdgeUpdatePreviousVersionsParams {
	return &EdgeUpdatePreviousVersionsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewEdgeUpdatePreviousVersionsParamsWithTimeout creates a new EdgeUpdatePreviousVersionsParams object
// with the ability to set a timeout on a request.
func NewEdgeUpdatePreviousVersionsParamsWithTimeout(timeout time.Duration) *EdgeUpdatePreviousVersionsParams {
	return &EdgeUpdatePreviousVersionsParams{
		timeout: timeout,
	}
}

// NewEdgeUpdatePreviousVersionsParamsWithContext creates a new EdgeUpdatePreviousVersionsParams object
// with the ability to set a context for a request.
func NewEdgeUpdatePreviousVersionsParamsWithContext(ctx context.Context) *EdgeUpdatePreviousVersionsParams {
	return &EdgeUpdatePreviousVersionsParams{
		Context: ctx,
	}
}

// NewEdgeUpdatePreviousVersionsParamsWithHTTPClient creates a new EdgeUpdatePreviousVersionsParams object
// with the ability to set a custom HTTPClient for a request.
func NewEdgeUpdatePreviousVersionsParamsWithHTTPClient(client *http.Client) *EdgeUpdatePreviousVersionsParams {
	return &EdgeUpdatePreviousVersionsParams{
		HTTPClient: client,
	}
}

/*
EdgeUpdatePreviousVersionsParams contains all the parameters to send to the API endpoint

	for the edge update previous versions operation.

	Typically these are written to a http.Request.
*/
type EdgeUpdatePreviousVersionsParams struct {

	/* EnvironmentIds.

	   Environment IDs
	*/
	EnvironmentIds []int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the edge update previous versions params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *EdgeUpdatePreviousVersionsParams) WithDefaults() *EdgeUpdatePreviousVersionsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the edge update previous versions params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *EdgeUpdatePreviousVersionsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the edge update previous versions params
func (o *EdgeUpdatePreviousVersionsParams) WithTimeout(timeout time.Duration) *EdgeUpdatePreviousVersionsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the edge update previous versions params
func (o *EdgeUpdatePreviousVersionsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the edge update previous versions params
func (o *EdgeUpdatePreviousVersionsParams) WithContext(ctx context.Context) *EdgeUpdatePreviousVersionsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the edge update previous versions params
func (o *EdgeUpdatePreviousVersionsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the edge update previous versions params
func (o *EdgeUpdatePreviousVersionsParams) WithHTTPClient(client *http.Client) *EdgeUpdatePreviousVersionsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the edge update previous versions params
func (o *EdgeUpdatePreviousVersionsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEnvironmentIds adds the environmentIds to the edge update previous versions params
func (o *EdgeUpdatePreviousVersionsParams) WithEnvironmentIds(environmentIds []int64) *EdgeUpdatePreviousVersionsParams {
	o.SetEnvironmentIds(environmentIds)
	return o
}

// SetEnvironmentIds adds the environmentIds to the edge update previous versions params
func (o *EdgeUpdatePreviousVersionsParams) SetEnvironmentIds(environmentIds []int64) {
	o.EnvironmentIds = environmentIds
}

// WriteToRequest writes these params to a swagger request
func (o *EdgeUpdatePreviousVersionsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.EnvironmentIds != nil {

		// binding items for environmentIds
		joinedEnvironmentIds := o.bindParamEnvironmentIds(reg)

		// query array param environmentIds
		if err := r.SetQueryParam("environmentIds", joinedEnvironmentIds...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamEdgeUpdatePreviousVersions binds the parameter environmentIds
func (o *EdgeUpdatePreviousVersionsParams) bindParamEnvironmentIds(formats strfmt.Registry) []string {
	environmentIdsIR := o.EnvironmentIds

	var environmentIdsIC []string
	for _, environmentIdsIIR := range environmentIdsIR { // explode []int64

		environmentIdsIIV := swag.FormatInt64(environmentIdsIIR) // int64 as string
		environmentIdsIC = append(environmentIdsIC, environmentIdsIIV)
	}

	// items.CollectionFormat: ""
	environmentIdsIS := swag.JoinByFormat(environmentIdsIC, "")

	return environmentIdsIS
}
