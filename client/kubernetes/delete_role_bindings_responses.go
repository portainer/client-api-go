// Code generated by go-swagger; DO NOT EDIT.

package kubernetes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteRoleBindingsReader is a Reader for the DeleteRoleBindings structure.
type DeleteRoleBindingsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteRoleBindingsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteRoleBindingsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteRoleBindingsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteRoleBindingsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteRoleBindingsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteRoleBindingsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteRoleBindingsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /kubernetes/{id}/role_bindings/delete] DeleteRoleBindings", response, response.Code())
	}
}

// NewDeleteRoleBindingsNoContent creates a DeleteRoleBindingsNoContent with default headers values
func NewDeleteRoleBindingsNoContent() *DeleteRoleBindingsNoContent {
	return &DeleteRoleBindingsNoContent{}
}

/*
DeleteRoleBindingsNoContent describes a response with status code 204, with default header values.

Success
*/
type DeleteRoleBindingsNoContent struct {
}

// IsSuccess returns true when this delete role bindings no content response has a 2xx status code
func (o *DeleteRoleBindingsNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete role bindings no content response has a 3xx status code
func (o *DeleteRoleBindingsNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete role bindings no content response has a 4xx status code
func (o *DeleteRoleBindingsNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete role bindings no content response has a 5xx status code
func (o *DeleteRoleBindingsNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete role bindings no content response a status code equal to that given
func (o *DeleteRoleBindingsNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete role bindings no content response
func (o *DeleteRoleBindingsNoContent) Code() int {
	return 204
}

func (o *DeleteRoleBindingsNoContent) Error() string {
	return fmt.Sprintf("[POST /kubernetes/{id}/role_bindings/delete][%d] deleteRoleBindingsNoContent", 204)
}

func (o *DeleteRoleBindingsNoContent) String() string {
	return fmt.Sprintf("[POST /kubernetes/{id}/role_bindings/delete][%d] deleteRoleBindingsNoContent", 204)
}

func (o *DeleteRoleBindingsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteRoleBindingsBadRequest creates a DeleteRoleBindingsBadRequest with default headers values
func NewDeleteRoleBindingsBadRequest() *DeleteRoleBindingsBadRequest {
	return &DeleteRoleBindingsBadRequest{}
}

/*
DeleteRoleBindingsBadRequest describes a response with status code 400, with default header values.

Invalid request payload, such as missing required fields or fields not meeting validation criteria.
*/
type DeleteRoleBindingsBadRequest struct {
}

// IsSuccess returns true when this delete role bindings bad request response has a 2xx status code
func (o *DeleteRoleBindingsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete role bindings bad request response has a 3xx status code
func (o *DeleteRoleBindingsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete role bindings bad request response has a 4xx status code
func (o *DeleteRoleBindingsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete role bindings bad request response has a 5xx status code
func (o *DeleteRoleBindingsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete role bindings bad request response a status code equal to that given
func (o *DeleteRoleBindingsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete role bindings bad request response
func (o *DeleteRoleBindingsBadRequest) Code() int {
	return 400
}

func (o *DeleteRoleBindingsBadRequest) Error() string {
	return fmt.Sprintf("[POST /kubernetes/{id}/role_bindings/delete][%d] deleteRoleBindingsBadRequest", 400)
}

func (o *DeleteRoleBindingsBadRequest) String() string {
	return fmt.Sprintf("[POST /kubernetes/{id}/role_bindings/delete][%d] deleteRoleBindingsBadRequest", 400)
}

func (o *DeleteRoleBindingsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteRoleBindingsUnauthorized creates a DeleteRoleBindingsUnauthorized with default headers values
func NewDeleteRoleBindingsUnauthorized() *DeleteRoleBindingsUnauthorized {
	return &DeleteRoleBindingsUnauthorized{}
}

/*
DeleteRoleBindingsUnauthorized describes a response with status code 401, with default header values.

Unauthorized access - the user is not authenticated or does not have the necessary permissions. Ensure that you have provided a valid API key or JWT token, and that you have the required permissions.
*/
type DeleteRoleBindingsUnauthorized struct {
}

// IsSuccess returns true when this delete role bindings unauthorized response has a 2xx status code
func (o *DeleteRoleBindingsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete role bindings unauthorized response has a 3xx status code
func (o *DeleteRoleBindingsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete role bindings unauthorized response has a 4xx status code
func (o *DeleteRoleBindingsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete role bindings unauthorized response has a 5xx status code
func (o *DeleteRoleBindingsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete role bindings unauthorized response a status code equal to that given
func (o *DeleteRoleBindingsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete role bindings unauthorized response
func (o *DeleteRoleBindingsUnauthorized) Code() int {
	return 401
}

func (o *DeleteRoleBindingsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /kubernetes/{id}/role_bindings/delete][%d] deleteRoleBindingsUnauthorized", 401)
}

func (o *DeleteRoleBindingsUnauthorized) String() string {
	return fmt.Sprintf("[POST /kubernetes/{id}/role_bindings/delete][%d] deleteRoleBindingsUnauthorized", 401)
}

func (o *DeleteRoleBindingsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteRoleBindingsForbidden creates a DeleteRoleBindingsForbidden with default headers values
func NewDeleteRoleBindingsForbidden() *DeleteRoleBindingsForbidden {
	return &DeleteRoleBindingsForbidden{}
}

/*
DeleteRoleBindingsForbidden describes a response with status code 403, with default header values.

Permission denied - the user is authenticated but does not have the necessary permissions to access the requested resource or perform the specified operation. Check your user roles and permissions.
*/
type DeleteRoleBindingsForbidden struct {
}

// IsSuccess returns true when this delete role bindings forbidden response has a 2xx status code
func (o *DeleteRoleBindingsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete role bindings forbidden response has a 3xx status code
func (o *DeleteRoleBindingsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete role bindings forbidden response has a 4xx status code
func (o *DeleteRoleBindingsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete role bindings forbidden response has a 5xx status code
func (o *DeleteRoleBindingsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete role bindings forbidden response a status code equal to that given
func (o *DeleteRoleBindingsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete role bindings forbidden response
func (o *DeleteRoleBindingsForbidden) Code() int {
	return 403
}

func (o *DeleteRoleBindingsForbidden) Error() string {
	return fmt.Sprintf("[POST /kubernetes/{id}/role_bindings/delete][%d] deleteRoleBindingsForbidden", 403)
}

func (o *DeleteRoleBindingsForbidden) String() string {
	return fmt.Sprintf("[POST /kubernetes/{id}/role_bindings/delete][%d] deleteRoleBindingsForbidden", 403)
}

func (o *DeleteRoleBindingsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteRoleBindingsNotFound creates a DeleteRoleBindingsNotFound with default headers values
func NewDeleteRoleBindingsNotFound() *DeleteRoleBindingsNotFound {
	return &DeleteRoleBindingsNotFound{}
}

/*
DeleteRoleBindingsNotFound describes a response with status code 404, with default header values.

Unable to find an environment with the specified identifier or unable to find a specific role binding.
*/
type DeleteRoleBindingsNotFound struct {
}

// IsSuccess returns true when this delete role bindings not found response has a 2xx status code
func (o *DeleteRoleBindingsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete role bindings not found response has a 3xx status code
func (o *DeleteRoleBindingsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete role bindings not found response has a 4xx status code
func (o *DeleteRoleBindingsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete role bindings not found response has a 5xx status code
func (o *DeleteRoleBindingsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete role bindings not found response a status code equal to that given
func (o *DeleteRoleBindingsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete role bindings not found response
func (o *DeleteRoleBindingsNotFound) Code() int {
	return 404
}

func (o *DeleteRoleBindingsNotFound) Error() string {
	return fmt.Sprintf("[POST /kubernetes/{id}/role_bindings/delete][%d] deleteRoleBindingsNotFound", 404)
}

func (o *DeleteRoleBindingsNotFound) String() string {
	return fmt.Sprintf("[POST /kubernetes/{id}/role_bindings/delete][%d] deleteRoleBindingsNotFound", 404)
}

func (o *DeleteRoleBindingsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteRoleBindingsInternalServerError creates a DeleteRoleBindingsInternalServerError with default headers values
func NewDeleteRoleBindingsInternalServerError() *DeleteRoleBindingsInternalServerError {
	return &DeleteRoleBindingsInternalServerError{}
}

/*
DeleteRoleBindingsInternalServerError describes a response with status code 500, with default header values.

Server error occurred while attempting to delete role bindings.
*/
type DeleteRoleBindingsInternalServerError struct {
}

// IsSuccess returns true when this delete role bindings internal server error response has a 2xx status code
func (o *DeleteRoleBindingsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete role bindings internal server error response has a 3xx status code
func (o *DeleteRoleBindingsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete role bindings internal server error response has a 4xx status code
func (o *DeleteRoleBindingsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete role bindings internal server error response has a 5xx status code
func (o *DeleteRoleBindingsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete role bindings internal server error response a status code equal to that given
func (o *DeleteRoleBindingsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete role bindings internal server error response
func (o *DeleteRoleBindingsInternalServerError) Code() int {
	return 500
}

func (o *DeleteRoleBindingsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /kubernetes/{id}/role_bindings/delete][%d] deleteRoleBindingsInternalServerError", 500)
}

func (o *DeleteRoleBindingsInternalServerError) String() string {
	return fmt.Sprintf("[POST /kubernetes/{id}/role_bindings/delete][%d] deleteRoleBindingsInternalServerError", 500)
}

func (o *DeleteRoleBindingsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
