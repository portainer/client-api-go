// Code generated by go-swagger; DO NOT EDIT.

package kubernetes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetKubernetesNamespacesCountReader is a Reader for the GetKubernetesNamespacesCount structure.
type GetKubernetesNamespacesCountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKubernetesNamespacesCountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetKubernetesNamespacesCountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetKubernetesNamespacesCountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetKubernetesNamespacesCountUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetKubernetesNamespacesCountForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetKubernetesNamespacesCountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetKubernetesNamespacesCountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /kubernetes/{id}/namespaces/count] GetKubernetesNamespacesCount", response, response.Code())
	}
}

// NewGetKubernetesNamespacesCountOK creates a GetKubernetesNamespacesCountOK with default headers values
func NewGetKubernetesNamespacesCountOK() *GetKubernetesNamespacesCountOK {
	return &GetKubernetesNamespacesCountOK{}
}

/*
GetKubernetesNamespacesCountOK describes a response with status code 200, with default header values.

Success
*/
type GetKubernetesNamespacesCountOK struct {
	Payload int64
}

// IsSuccess returns true when this get kubernetes namespaces count o k response has a 2xx status code
func (o *GetKubernetesNamespacesCountOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get kubernetes namespaces count o k response has a 3xx status code
func (o *GetKubernetesNamespacesCountOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kubernetes namespaces count o k response has a 4xx status code
func (o *GetKubernetesNamespacesCountOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get kubernetes namespaces count o k response has a 5xx status code
func (o *GetKubernetesNamespacesCountOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get kubernetes namespaces count o k response a status code equal to that given
func (o *GetKubernetesNamespacesCountOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get kubernetes namespaces count o k response
func (o *GetKubernetesNamespacesCountOK) Code() int {
	return 200
}

func (o *GetKubernetesNamespacesCountOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /kubernetes/{id}/namespaces/count][%d] getKubernetesNamespacesCountOK %s", 200, payload)
}

func (o *GetKubernetesNamespacesCountOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /kubernetes/{id}/namespaces/count][%d] getKubernetesNamespacesCountOK %s", 200, payload)
}

func (o *GetKubernetesNamespacesCountOK) GetPayload() int64 {
	return o.Payload
}

func (o *GetKubernetesNamespacesCountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKubernetesNamespacesCountBadRequest creates a GetKubernetesNamespacesCountBadRequest with default headers values
func NewGetKubernetesNamespacesCountBadRequest() *GetKubernetesNamespacesCountBadRequest {
	return &GetKubernetesNamespacesCountBadRequest{}
}

/*
GetKubernetesNamespacesCountBadRequest describes a response with status code 400, with default header values.

Invalid request payload, such as missing required fields or fields not meeting validation criteria.
*/
type GetKubernetesNamespacesCountBadRequest struct {
}

// IsSuccess returns true when this get kubernetes namespaces count bad request response has a 2xx status code
func (o *GetKubernetesNamespacesCountBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get kubernetes namespaces count bad request response has a 3xx status code
func (o *GetKubernetesNamespacesCountBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kubernetes namespaces count bad request response has a 4xx status code
func (o *GetKubernetesNamespacesCountBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get kubernetes namespaces count bad request response has a 5xx status code
func (o *GetKubernetesNamespacesCountBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get kubernetes namespaces count bad request response a status code equal to that given
func (o *GetKubernetesNamespacesCountBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get kubernetes namespaces count bad request response
func (o *GetKubernetesNamespacesCountBadRequest) Code() int {
	return 400
}

func (o *GetKubernetesNamespacesCountBadRequest) Error() string {
	return fmt.Sprintf("[GET /kubernetes/{id}/namespaces/count][%d] getKubernetesNamespacesCountBadRequest", 400)
}

func (o *GetKubernetesNamespacesCountBadRequest) String() string {
	return fmt.Sprintf("[GET /kubernetes/{id}/namespaces/count][%d] getKubernetesNamespacesCountBadRequest", 400)
}

func (o *GetKubernetesNamespacesCountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetKubernetesNamespacesCountUnauthorized creates a GetKubernetesNamespacesCountUnauthorized with default headers values
func NewGetKubernetesNamespacesCountUnauthorized() *GetKubernetesNamespacesCountUnauthorized {
	return &GetKubernetesNamespacesCountUnauthorized{}
}

/*
GetKubernetesNamespacesCountUnauthorized describes a response with status code 401, with default header values.

Unauthorized access - the user is not authenticated or does not have the necessary permissions. Ensure that you have provided a valid API key or JWT token, and that you have the required permissions.
*/
type GetKubernetesNamespacesCountUnauthorized struct {
}

// IsSuccess returns true when this get kubernetes namespaces count unauthorized response has a 2xx status code
func (o *GetKubernetesNamespacesCountUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get kubernetes namespaces count unauthorized response has a 3xx status code
func (o *GetKubernetesNamespacesCountUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kubernetes namespaces count unauthorized response has a 4xx status code
func (o *GetKubernetesNamespacesCountUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get kubernetes namespaces count unauthorized response has a 5xx status code
func (o *GetKubernetesNamespacesCountUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get kubernetes namespaces count unauthorized response a status code equal to that given
func (o *GetKubernetesNamespacesCountUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get kubernetes namespaces count unauthorized response
func (o *GetKubernetesNamespacesCountUnauthorized) Code() int {
	return 401
}

func (o *GetKubernetesNamespacesCountUnauthorized) Error() string {
	return fmt.Sprintf("[GET /kubernetes/{id}/namespaces/count][%d] getKubernetesNamespacesCountUnauthorized", 401)
}

func (o *GetKubernetesNamespacesCountUnauthorized) String() string {
	return fmt.Sprintf("[GET /kubernetes/{id}/namespaces/count][%d] getKubernetesNamespacesCountUnauthorized", 401)
}

func (o *GetKubernetesNamespacesCountUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetKubernetesNamespacesCountForbidden creates a GetKubernetesNamespacesCountForbidden with default headers values
func NewGetKubernetesNamespacesCountForbidden() *GetKubernetesNamespacesCountForbidden {
	return &GetKubernetesNamespacesCountForbidden{}
}

/*
GetKubernetesNamespacesCountForbidden describes a response with status code 403, with default header values.

Permission denied - the user is authenticated but does not have the necessary permissions to access the requested resource or perform the specified operation. Check your user roles and permissions.
*/
type GetKubernetesNamespacesCountForbidden struct {
}

// IsSuccess returns true when this get kubernetes namespaces count forbidden response has a 2xx status code
func (o *GetKubernetesNamespacesCountForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get kubernetes namespaces count forbidden response has a 3xx status code
func (o *GetKubernetesNamespacesCountForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kubernetes namespaces count forbidden response has a 4xx status code
func (o *GetKubernetesNamespacesCountForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get kubernetes namespaces count forbidden response has a 5xx status code
func (o *GetKubernetesNamespacesCountForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get kubernetes namespaces count forbidden response a status code equal to that given
func (o *GetKubernetesNamespacesCountForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get kubernetes namespaces count forbidden response
func (o *GetKubernetesNamespacesCountForbidden) Code() int {
	return 403
}

func (o *GetKubernetesNamespacesCountForbidden) Error() string {
	return fmt.Sprintf("[GET /kubernetes/{id}/namespaces/count][%d] getKubernetesNamespacesCountForbidden", 403)
}

func (o *GetKubernetesNamespacesCountForbidden) String() string {
	return fmt.Sprintf("[GET /kubernetes/{id}/namespaces/count][%d] getKubernetesNamespacesCountForbidden", 403)
}

func (o *GetKubernetesNamespacesCountForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetKubernetesNamespacesCountNotFound creates a GetKubernetesNamespacesCountNotFound with default headers values
func NewGetKubernetesNamespacesCountNotFound() *GetKubernetesNamespacesCountNotFound {
	return &GetKubernetesNamespacesCountNotFound{}
}

/*
GetKubernetesNamespacesCountNotFound describes a response with status code 404, with default header values.

Unable to find an environment with the specified identifier.
*/
type GetKubernetesNamespacesCountNotFound struct {
}

// IsSuccess returns true when this get kubernetes namespaces count not found response has a 2xx status code
func (o *GetKubernetesNamespacesCountNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get kubernetes namespaces count not found response has a 3xx status code
func (o *GetKubernetesNamespacesCountNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kubernetes namespaces count not found response has a 4xx status code
func (o *GetKubernetesNamespacesCountNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get kubernetes namespaces count not found response has a 5xx status code
func (o *GetKubernetesNamespacesCountNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get kubernetes namespaces count not found response a status code equal to that given
func (o *GetKubernetesNamespacesCountNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get kubernetes namespaces count not found response
func (o *GetKubernetesNamespacesCountNotFound) Code() int {
	return 404
}

func (o *GetKubernetesNamespacesCountNotFound) Error() string {
	return fmt.Sprintf("[GET /kubernetes/{id}/namespaces/count][%d] getKubernetesNamespacesCountNotFound", 404)
}

func (o *GetKubernetesNamespacesCountNotFound) String() string {
	return fmt.Sprintf("[GET /kubernetes/{id}/namespaces/count][%d] getKubernetesNamespacesCountNotFound", 404)
}

func (o *GetKubernetesNamespacesCountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetKubernetesNamespacesCountInternalServerError creates a GetKubernetesNamespacesCountInternalServerError with default headers values
func NewGetKubernetesNamespacesCountInternalServerError() *GetKubernetesNamespacesCountInternalServerError {
	return &GetKubernetesNamespacesCountInternalServerError{}
}

/*
GetKubernetesNamespacesCountInternalServerError describes a response with status code 500, with default header values.

Server error occurred while attempting to compute the namespace count.
*/
type GetKubernetesNamespacesCountInternalServerError struct {
}

// IsSuccess returns true when this get kubernetes namespaces count internal server error response has a 2xx status code
func (o *GetKubernetesNamespacesCountInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get kubernetes namespaces count internal server error response has a 3xx status code
func (o *GetKubernetesNamespacesCountInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kubernetes namespaces count internal server error response has a 4xx status code
func (o *GetKubernetesNamespacesCountInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get kubernetes namespaces count internal server error response has a 5xx status code
func (o *GetKubernetesNamespacesCountInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get kubernetes namespaces count internal server error response a status code equal to that given
func (o *GetKubernetesNamespacesCountInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get kubernetes namespaces count internal server error response
func (o *GetKubernetesNamespacesCountInternalServerError) Code() int {
	return 500
}

func (o *GetKubernetesNamespacesCountInternalServerError) Error() string {
	return fmt.Sprintf("[GET /kubernetes/{id}/namespaces/count][%d] getKubernetesNamespacesCountInternalServerError", 500)
}

func (o *GetKubernetesNamespacesCountInternalServerError) String() string {
	return fmt.Sprintf("[GET /kubernetes/{id}/namespaces/count][%d] getKubernetesNamespacesCountInternalServerError", 500)
}

func (o *GetKubernetesNamespacesCountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
