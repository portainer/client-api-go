// Code generated by go-swagger; DO NOT EDIT.

package kubernetes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetAllKubernetesApplicationsParams creates a new GetAllKubernetesApplicationsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetAllKubernetesApplicationsParams() *GetAllKubernetesApplicationsParams {
	return &GetAllKubernetesApplicationsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetAllKubernetesApplicationsParamsWithTimeout creates a new GetAllKubernetesApplicationsParams object
// with the ability to set a timeout on a request.
func NewGetAllKubernetesApplicationsParamsWithTimeout(timeout time.Duration) *GetAllKubernetesApplicationsParams {
	return &GetAllKubernetesApplicationsParams{
		timeout: timeout,
	}
}

// NewGetAllKubernetesApplicationsParamsWithContext creates a new GetAllKubernetesApplicationsParams object
// with the ability to set a context for a request.
func NewGetAllKubernetesApplicationsParamsWithContext(ctx context.Context) *GetAllKubernetesApplicationsParams {
	return &GetAllKubernetesApplicationsParams{
		Context: ctx,
	}
}

// NewGetAllKubernetesApplicationsParamsWithHTTPClient creates a new GetAllKubernetesApplicationsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetAllKubernetesApplicationsParamsWithHTTPClient(client *http.Client) *GetAllKubernetesApplicationsParams {
	return &GetAllKubernetesApplicationsParams{
		HTTPClient: client,
	}
}

/*
GetAllKubernetesApplicationsParams contains all the parameters to send to the API endpoint

	for the get all kubernetes applications operation.

	Typically these are written to a http.Request.
*/
type GetAllKubernetesApplicationsParams struct {

	/* ID.

	   Environment(Endpoint) identifier
	*/
	ID int64

	/* Namespace.

	   Namespace name
	*/
	Namespace string

	/* NodeName.

	   Node name
	*/
	NodeName string

	/* WithDependencies.

	   Include dependencies in the response
	*/
	WithDependencies *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get all kubernetes applications params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAllKubernetesApplicationsParams) WithDefaults() *GetAllKubernetesApplicationsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get all kubernetes applications params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAllKubernetesApplicationsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get all kubernetes applications params
func (o *GetAllKubernetesApplicationsParams) WithTimeout(timeout time.Duration) *GetAllKubernetesApplicationsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get all kubernetes applications params
func (o *GetAllKubernetesApplicationsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get all kubernetes applications params
func (o *GetAllKubernetesApplicationsParams) WithContext(ctx context.Context) *GetAllKubernetesApplicationsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get all kubernetes applications params
func (o *GetAllKubernetesApplicationsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get all kubernetes applications params
func (o *GetAllKubernetesApplicationsParams) WithHTTPClient(client *http.Client) *GetAllKubernetesApplicationsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get all kubernetes applications params
func (o *GetAllKubernetesApplicationsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the get all kubernetes applications params
func (o *GetAllKubernetesApplicationsParams) WithID(id int64) *GetAllKubernetesApplicationsParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the get all kubernetes applications params
func (o *GetAllKubernetesApplicationsParams) SetID(id int64) {
	o.ID = id
}

// WithNamespace adds the namespace to the get all kubernetes applications params
func (o *GetAllKubernetesApplicationsParams) WithNamespace(namespace string) *GetAllKubernetesApplicationsParams {
	o.SetNamespace(namespace)
	return o
}

// SetNamespace adds the namespace to the get all kubernetes applications params
func (o *GetAllKubernetesApplicationsParams) SetNamespace(namespace string) {
	o.Namespace = namespace
}

// WithNodeName adds the nodeName to the get all kubernetes applications params
func (o *GetAllKubernetesApplicationsParams) WithNodeName(nodeName string) *GetAllKubernetesApplicationsParams {
	o.SetNodeName(nodeName)
	return o
}

// SetNodeName adds the nodeName to the get all kubernetes applications params
func (o *GetAllKubernetesApplicationsParams) SetNodeName(nodeName string) {
	o.NodeName = nodeName
}

// WithWithDependencies adds the withDependencies to the get all kubernetes applications params
func (o *GetAllKubernetesApplicationsParams) WithWithDependencies(withDependencies *bool) *GetAllKubernetesApplicationsParams {
	o.SetWithDependencies(withDependencies)
	return o
}

// SetWithDependencies adds the withDependencies to the get all kubernetes applications params
func (o *GetAllKubernetesApplicationsParams) SetWithDependencies(withDependencies *bool) {
	o.WithDependencies = withDependencies
}

// WriteToRequest writes these params to a swagger request
func (o *GetAllKubernetesApplicationsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", swag.FormatInt64(o.ID)); err != nil {
		return err
	}

	// query param namespace
	qrNamespace := o.Namespace
	qNamespace := qrNamespace
	if qNamespace != "" {

		if err := r.SetQueryParam("namespace", qNamespace); err != nil {
			return err
		}
	}

	// query param nodeName
	qrNodeName := o.NodeName
	qNodeName := qrNodeName
	if qNodeName != "" {

		if err := r.SetQueryParam("nodeName", qNodeName); err != nil {
			return err
		}
	}

	if o.WithDependencies != nil {

		// query param withDependencies
		var qrWithDependencies bool

		if o.WithDependencies != nil {
			qrWithDependencies = *o.WithDependencies
		}
		qWithDependencies := swag.FormatBool(qrWithDependencies)
		if qWithDependencies != "" {

			if err := r.SetQueryParam("withDependencies", qWithDependencies); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
