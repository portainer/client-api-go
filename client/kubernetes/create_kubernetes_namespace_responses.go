// Code generated by go-swagger; DO NOT EDIT.

package kubernetes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/portainer/client-api-go/v2/models"
)

// CreateKubernetesNamespaceReader is a Reader for the CreateKubernetesNamespace structure.
type CreateKubernetesNamespaceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateKubernetesNamespaceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateKubernetesNamespaceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateKubernetesNamespaceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateKubernetesNamespaceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateKubernetesNamespaceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateKubernetesNamespaceConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateKubernetesNamespaceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /kubernetes/{id}/namespaces] CreateKubernetesNamespace", response, response.Code())
	}
}

// NewCreateKubernetesNamespaceOK creates a CreateKubernetesNamespaceOK with default headers values
func NewCreateKubernetesNamespaceOK() *CreateKubernetesNamespaceOK {
	return &CreateKubernetesNamespaceOK{}
}

/*
CreateKubernetesNamespaceOK describes a response with status code 200, with default header values.

Success
*/
type CreateKubernetesNamespaceOK struct {
	Payload *models.PortainerK8sNamespaceInfo
}

// IsSuccess returns true when this create kubernetes namespace o k response has a 2xx status code
func (o *CreateKubernetesNamespaceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create kubernetes namespace o k response has a 3xx status code
func (o *CreateKubernetesNamespaceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create kubernetes namespace o k response has a 4xx status code
func (o *CreateKubernetesNamespaceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create kubernetes namespace o k response has a 5xx status code
func (o *CreateKubernetesNamespaceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create kubernetes namespace o k response a status code equal to that given
func (o *CreateKubernetesNamespaceOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create kubernetes namespace o k response
func (o *CreateKubernetesNamespaceOK) Code() int {
	return 200
}

func (o *CreateKubernetesNamespaceOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /kubernetes/{id}/namespaces][%d] createKubernetesNamespaceOK %s", 200, payload)
}

func (o *CreateKubernetesNamespaceOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /kubernetes/{id}/namespaces][%d] createKubernetesNamespaceOK %s", 200, payload)
}

func (o *CreateKubernetesNamespaceOK) GetPayload() *models.PortainerK8sNamespaceInfo {
	return o.Payload
}

func (o *CreateKubernetesNamespaceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PortainerK8sNamespaceInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateKubernetesNamespaceBadRequest creates a CreateKubernetesNamespaceBadRequest with default headers values
func NewCreateKubernetesNamespaceBadRequest() *CreateKubernetesNamespaceBadRequest {
	return &CreateKubernetesNamespaceBadRequest{}
}

/*
CreateKubernetesNamespaceBadRequest describes a response with status code 400, with default header values.

Invalid request payload, such as missing required fields or fields not meeting validation criteria.
*/
type CreateKubernetesNamespaceBadRequest struct {
}

// IsSuccess returns true when this create kubernetes namespace bad request response has a 2xx status code
func (o *CreateKubernetesNamespaceBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create kubernetes namespace bad request response has a 3xx status code
func (o *CreateKubernetesNamespaceBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create kubernetes namespace bad request response has a 4xx status code
func (o *CreateKubernetesNamespaceBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create kubernetes namespace bad request response has a 5xx status code
func (o *CreateKubernetesNamespaceBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create kubernetes namespace bad request response a status code equal to that given
func (o *CreateKubernetesNamespaceBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create kubernetes namespace bad request response
func (o *CreateKubernetesNamespaceBadRequest) Code() int {
	return 400
}

func (o *CreateKubernetesNamespaceBadRequest) Error() string {
	return fmt.Sprintf("[POST /kubernetes/{id}/namespaces][%d] createKubernetesNamespaceBadRequest", 400)
}

func (o *CreateKubernetesNamespaceBadRequest) String() string {
	return fmt.Sprintf("[POST /kubernetes/{id}/namespaces][%d] createKubernetesNamespaceBadRequest", 400)
}

func (o *CreateKubernetesNamespaceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateKubernetesNamespaceUnauthorized creates a CreateKubernetesNamespaceUnauthorized with default headers values
func NewCreateKubernetesNamespaceUnauthorized() *CreateKubernetesNamespaceUnauthorized {
	return &CreateKubernetesNamespaceUnauthorized{}
}

/*
CreateKubernetesNamespaceUnauthorized describes a response with status code 401, with default header values.

Unauthorized access - the user is not authenticated or does not have the necessary permissions. Ensure that you have provided a valid API key or JWT token, and that you have the required permissions.
*/
type CreateKubernetesNamespaceUnauthorized struct {
}

// IsSuccess returns true when this create kubernetes namespace unauthorized response has a 2xx status code
func (o *CreateKubernetesNamespaceUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create kubernetes namespace unauthorized response has a 3xx status code
func (o *CreateKubernetesNamespaceUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create kubernetes namespace unauthorized response has a 4xx status code
func (o *CreateKubernetesNamespaceUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create kubernetes namespace unauthorized response has a 5xx status code
func (o *CreateKubernetesNamespaceUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create kubernetes namespace unauthorized response a status code equal to that given
func (o *CreateKubernetesNamespaceUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create kubernetes namespace unauthorized response
func (o *CreateKubernetesNamespaceUnauthorized) Code() int {
	return 401
}

func (o *CreateKubernetesNamespaceUnauthorized) Error() string {
	return fmt.Sprintf("[POST /kubernetes/{id}/namespaces][%d] createKubernetesNamespaceUnauthorized", 401)
}

func (o *CreateKubernetesNamespaceUnauthorized) String() string {
	return fmt.Sprintf("[POST /kubernetes/{id}/namespaces][%d] createKubernetesNamespaceUnauthorized", 401)
}

func (o *CreateKubernetesNamespaceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateKubernetesNamespaceForbidden creates a CreateKubernetesNamespaceForbidden with default headers values
func NewCreateKubernetesNamespaceForbidden() *CreateKubernetesNamespaceForbidden {
	return &CreateKubernetesNamespaceForbidden{}
}

/*
CreateKubernetesNamespaceForbidden describes a response with status code 403, with default header values.

Permission denied - the user is authenticated but does not have the necessary permissions to access the requested resource or perform the specified operation. Check your user roles and permissions.
*/
type CreateKubernetesNamespaceForbidden struct {
}

// IsSuccess returns true when this create kubernetes namespace forbidden response has a 2xx status code
func (o *CreateKubernetesNamespaceForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create kubernetes namespace forbidden response has a 3xx status code
func (o *CreateKubernetesNamespaceForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create kubernetes namespace forbidden response has a 4xx status code
func (o *CreateKubernetesNamespaceForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create kubernetes namespace forbidden response has a 5xx status code
func (o *CreateKubernetesNamespaceForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create kubernetes namespace forbidden response a status code equal to that given
func (o *CreateKubernetesNamespaceForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create kubernetes namespace forbidden response
func (o *CreateKubernetesNamespaceForbidden) Code() int {
	return 403
}

func (o *CreateKubernetesNamespaceForbidden) Error() string {
	return fmt.Sprintf("[POST /kubernetes/{id}/namespaces][%d] createKubernetesNamespaceForbidden", 403)
}

func (o *CreateKubernetesNamespaceForbidden) String() string {
	return fmt.Sprintf("[POST /kubernetes/{id}/namespaces][%d] createKubernetesNamespaceForbidden", 403)
}

func (o *CreateKubernetesNamespaceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateKubernetesNamespaceConflict creates a CreateKubernetesNamespaceConflict with default headers values
func NewCreateKubernetesNamespaceConflict() *CreateKubernetesNamespaceConflict {
	return &CreateKubernetesNamespaceConflict{}
}

/*
CreateKubernetesNamespaceConflict describes a response with status code 409, with default header values.

Conflict - the namespace already exists.
*/
type CreateKubernetesNamespaceConflict struct {
}

// IsSuccess returns true when this create kubernetes namespace conflict response has a 2xx status code
func (o *CreateKubernetesNamespaceConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create kubernetes namespace conflict response has a 3xx status code
func (o *CreateKubernetesNamespaceConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create kubernetes namespace conflict response has a 4xx status code
func (o *CreateKubernetesNamespaceConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create kubernetes namespace conflict response has a 5xx status code
func (o *CreateKubernetesNamespaceConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create kubernetes namespace conflict response a status code equal to that given
func (o *CreateKubernetesNamespaceConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the create kubernetes namespace conflict response
func (o *CreateKubernetesNamespaceConflict) Code() int {
	return 409
}

func (o *CreateKubernetesNamespaceConflict) Error() string {
	return fmt.Sprintf("[POST /kubernetes/{id}/namespaces][%d] createKubernetesNamespaceConflict", 409)
}

func (o *CreateKubernetesNamespaceConflict) String() string {
	return fmt.Sprintf("[POST /kubernetes/{id}/namespaces][%d] createKubernetesNamespaceConflict", 409)
}

func (o *CreateKubernetesNamespaceConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateKubernetesNamespaceInternalServerError creates a CreateKubernetesNamespaceInternalServerError with default headers values
func NewCreateKubernetesNamespaceInternalServerError() *CreateKubernetesNamespaceInternalServerError {
	return &CreateKubernetesNamespaceInternalServerError{}
}

/*
CreateKubernetesNamespaceInternalServerError describes a response with status code 500, with default header values.

Server error occurred while attempting to create the namespace.
*/
type CreateKubernetesNamespaceInternalServerError struct {
}

// IsSuccess returns true when this create kubernetes namespace internal server error response has a 2xx status code
func (o *CreateKubernetesNamespaceInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create kubernetes namespace internal server error response has a 3xx status code
func (o *CreateKubernetesNamespaceInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create kubernetes namespace internal server error response has a 4xx status code
func (o *CreateKubernetesNamespaceInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create kubernetes namespace internal server error response has a 5xx status code
func (o *CreateKubernetesNamespaceInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create kubernetes namespace internal server error response a status code equal to that given
func (o *CreateKubernetesNamespaceInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create kubernetes namespace internal server error response
func (o *CreateKubernetesNamespaceInternalServerError) Code() int {
	return 500
}

func (o *CreateKubernetesNamespaceInternalServerError) Error() string {
	return fmt.Sprintf("[POST /kubernetes/{id}/namespaces][%d] createKubernetesNamespaceInternalServerError", 500)
}

func (o *CreateKubernetesNamespaceInternalServerError) String() string {
	return fmt.Sprintf("[POST /kubernetes/{id}/namespaces][%d] createKubernetesNamespaceInternalServerError", 500)
}

func (o *CreateKubernetesNamespaceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
