// Code generated by go-swagger; DO NOT EDIT.

package stacks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/portainer/client-api-go/v2/models"
)

// StackCreateDockerSwarmFileReader is a Reader for the StackCreateDockerSwarmFile structure.
type StackCreateDockerSwarmFileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StackCreateDockerSwarmFileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStackCreateDockerSwarmFileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStackCreateDockerSwarmFileBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewStackCreateDockerSwarmFileConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewStackCreateDockerSwarmFileInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /stacks/create/swarm/file] StackCreateDockerSwarmFile", response, response.Code())
	}
}

// NewStackCreateDockerSwarmFileOK creates a StackCreateDockerSwarmFileOK with default headers values
func NewStackCreateDockerSwarmFileOK() *StackCreateDockerSwarmFileOK {
	return &StackCreateDockerSwarmFileOK{}
}

/*
StackCreateDockerSwarmFileOK describes a response with status code 200, with default header values.

OK
*/
type StackCreateDockerSwarmFileOK struct {
	Payload *models.PortainereeStack
}

// IsSuccess returns true when this stack create docker swarm file o k response has a 2xx status code
func (o *StackCreateDockerSwarmFileOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this stack create docker swarm file o k response has a 3xx status code
func (o *StackCreateDockerSwarmFileOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this stack create docker swarm file o k response has a 4xx status code
func (o *StackCreateDockerSwarmFileOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this stack create docker swarm file o k response has a 5xx status code
func (o *StackCreateDockerSwarmFileOK) IsServerError() bool {
	return false
}

// IsCode returns true when this stack create docker swarm file o k response a status code equal to that given
func (o *StackCreateDockerSwarmFileOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the stack create docker swarm file o k response
func (o *StackCreateDockerSwarmFileOK) Code() int {
	return 200
}

func (o *StackCreateDockerSwarmFileOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /stacks/create/swarm/file][%d] stackCreateDockerSwarmFileOK %s", 200, payload)
}

func (o *StackCreateDockerSwarmFileOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /stacks/create/swarm/file][%d] stackCreateDockerSwarmFileOK %s", 200, payload)
}

func (o *StackCreateDockerSwarmFileOK) GetPayload() *models.PortainereeStack {
	return o.Payload
}

func (o *StackCreateDockerSwarmFileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PortainereeStack)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStackCreateDockerSwarmFileBadRequest creates a StackCreateDockerSwarmFileBadRequest with default headers values
func NewStackCreateDockerSwarmFileBadRequest() *StackCreateDockerSwarmFileBadRequest {
	return &StackCreateDockerSwarmFileBadRequest{}
}

/*
StackCreateDockerSwarmFileBadRequest describes a response with status code 400, with default header values.

Invalid request
*/
type StackCreateDockerSwarmFileBadRequest struct {
}

// IsSuccess returns true when this stack create docker swarm file bad request response has a 2xx status code
func (o *StackCreateDockerSwarmFileBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this stack create docker swarm file bad request response has a 3xx status code
func (o *StackCreateDockerSwarmFileBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this stack create docker swarm file bad request response has a 4xx status code
func (o *StackCreateDockerSwarmFileBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this stack create docker swarm file bad request response has a 5xx status code
func (o *StackCreateDockerSwarmFileBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this stack create docker swarm file bad request response a status code equal to that given
func (o *StackCreateDockerSwarmFileBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the stack create docker swarm file bad request response
func (o *StackCreateDockerSwarmFileBadRequest) Code() int {
	return 400
}

func (o *StackCreateDockerSwarmFileBadRequest) Error() string {
	return fmt.Sprintf("[POST /stacks/create/swarm/file][%d] stackCreateDockerSwarmFileBadRequest", 400)
}

func (o *StackCreateDockerSwarmFileBadRequest) String() string {
	return fmt.Sprintf("[POST /stacks/create/swarm/file][%d] stackCreateDockerSwarmFileBadRequest", 400)
}

func (o *StackCreateDockerSwarmFileBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStackCreateDockerSwarmFileConflict creates a StackCreateDockerSwarmFileConflict with default headers values
func NewStackCreateDockerSwarmFileConflict() *StackCreateDockerSwarmFileConflict {
	return &StackCreateDockerSwarmFileConflict{}
}

/*
StackCreateDockerSwarmFileConflict describes a response with status code 409, with default header values.

Stack name or webhook id is not unique
*/
type StackCreateDockerSwarmFileConflict struct {
}

// IsSuccess returns true when this stack create docker swarm file conflict response has a 2xx status code
func (o *StackCreateDockerSwarmFileConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this stack create docker swarm file conflict response has a 3xx status code
func (o *StackCreateDockerSwarmFileConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this stack create docker swarm file conflict response has a 4xx status code
func (o *StackCreateDockerSwarmFileConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this stack create docker swarm file conflict response has a 5xx status code
func (o *StackCreateDockerSwarmFileConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this stack create docker swarm file conflict response a status code equal to that given
func (o *StackCreateDockerSwarmFileConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the stack create docker swarm file conflict response
func (o *StackCreateDockerSwarmFileConflict) Code() int {
	return 409
}

func (o *StackCreateDockerSwarmFileConflict) Error() string {
	return fmt.Sprintf("[POST /stacks/create/swarm/file][%d] stackCreateDockerSwarmFileConflict", 409)
}

func (o *StackCreateDockerSwarmFileConflict) String() string {
	return fmt.Sprintf("[POST /stacks/create/swarm/file][%d] stackCreateDockerSwarmFileConflict", 409)
}

func (o *StackCreateDockerSwarmFileConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStackCreateDockerSwarmFileInternalServerError creates a StackCreateDockerSwarmFileInternalServerError with default headers values
func NewStackCreateDockerSwarmFileInternalServerError() *StackCreateDockerSwarmFileInternalServerError {
	return &StackCreateDockerSwarmFileInternalServerError{}
}

/*
StackCreateDockerSwarmFileInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type StackCreateDockerSwarmFileInternalServerError struct {
}

// IsSuccess returns true when this stack create docker swarm file internal server error response has a 2xx status code
func (o *StackCreateDockerSwarmFileInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this stack create docker swarm file internal server error response has a 3xx status code
func (o *StackCreateDockerSwarmFileInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this stack create docker swarm file internal server error response has a 4xx status code
func (o *StackCreateDockerSwarmFileInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this stack create docker swarm file internal server error response has a 5xx status code
func (o *StackCreateDockerSwarmFileInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this stack create docker swarm file internal server error response a status code equal to that given
func (o *StackCreateDockerSwarmFileInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the stack create docker swarm file internal server error response
func (o *StackCreateDockerSwarmFileInternalServerError) Code() int {
	return 500
}

func (o *StackCreateDockerSwarmFileInternalServerError) Error() string {
	return fmt.Sprintf("[POST /stacks/create/swarm/file][%d] stackCreateDockerSwarmFileInternalServerError", 500)
}

func (o *StackCreateDockerSwarmFileInternalServerError) String() string {
	return fmt.Sprintf("[POST /stacks/create/swarm/file][%d] stackCreateDockerSwarmFileInternalServerError", 500)
}

func (o *StackCreateDockerSwarmFileInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
