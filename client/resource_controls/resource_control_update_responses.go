// Code generated by go-swagger; DO NOT EDIT.

package resource_controls

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/portainer/client-api-go/v2/models"
)

// ResourceControlUpdateReader is a Reader for the ResourceControlUpdate structure.
type ResourceControlUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ResourceControlUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewResourceControlUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewResourceControlUpdateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewResourceControlUpdateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewResourceControlUpdateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewResourceControlUpdateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /resource_controls/{id}] ResourceControlUpdate", response, response.Code())
	}
}

// NewResourceControlUpdateOK creates a ResourceControlUpdateOK with default headers values
func NewResourceControlUpdateOK() *ResourceControlUpdateOK {
	return &ResourceControlUpdateOK{}
}

/*
ResourceControlUpdateOK describes a response with status code 200, with default header values.

Success
*/
type ResourceControlUpdateOK struct {
	Payload *models.PortainerResourceControl
}

// IsSuccess returns true when this resource control update o k response has a 2xx status code
func (o *ResourceControlUpdateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this resource control update o k response has a 3xx status code
func (o *ResourceControlUpdateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this resource control update o k response has a 4xx status code
func (o *ResourceControlUpdateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this resource control update o k response has a 5xx status code
func (o *ResourceControlUpdateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this resource control update o k response a status code equal to that given
func (o *ResourceControlUpdateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the resource control update o k response
func (o *ResourceControlUpdateOK) Code() int {
	return 200
}

func (o *ResourceControlUpdateOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /resource_controls/{id}][%d] resourceControlUpdateOK %s", 200, payload)
}

func (o *ResourceControlUpdateOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /resource_controls/{id}][%d] resourceControlUpdateOK %s", 200, payload)
}

func (o *ResourceControlUpdateOK) GetPayload() *models.PortainerResourceControl {
	return o.Payload
}

func (o *ResourceControlUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PortainerResourceControl)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResourceControlUpdateBadRequest creates a ResourceControlUpdateBadRequest with default headers values
func NewResourceControlUpdateBadRequest() *ResourceControlUpdateBadRequest {
	return &ResourceControlUpdateBadRequest{}
}

/*
ResourceControlUpdateBadRequest describes a response with status code 400, with default header values.

Invalid request
*/
type ResourceControlUpdateBadRequest struct {
}

// IsSuccess returns true when this resource control update bad request response has a 2xx status code
func (o *ResourceControlUpdateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this resource control update bad request response has a 3xx status code
func (o *ResourceControlUpdateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this resource control update bad request response has a 4xx status code
func (o *ResourceControlUpdateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this resource control update bad request response has a 5xx status code
func (o *ResourceControlUpdateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this resource control update bad request response a status code equal to that given
func (o *ResourceControlUpdateBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the resource control update bad request response
func (o *ResourceControlUpdateBadRequest) Code() int {
	return 400
}

func (o *ResourceControlUpdateBadRequest) Error() string {
	return fmt.Sprintf("[PUT /resource_controls/{id}][%d] resourceControlUpdateBadRequest", 400)
}

func (o *ResourceControlUpdateBadRequest) String() string {
	return fmt.Sprintf("[PUT /resource_controls/{id}][%d] resourceControlUpdateBadRequest", 400)
}

func (o *ResourceControlUpdateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResourceControlUpdateForbidden creates a ResourceControlUpdateForbidden with default headers values
func NewResourceControlUpdateForbidden() *ResourceControlUpdateForbidden {
	return &ResourceControlUpdateForbidden{}
}

/*
ResourceControlUpdateForbidden describes a response with status code 403, with default header values.

Unauthorized
*/
type ResourceControlUpdateForbidden struct {
}

// IsSuccess returns true when this resource control update forbidden response has a 2xx status code
func (o *ResourceControlUpdateForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this resource control update forbidden response has a 3xx status code
func (o *ResourceControlUpdateForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this resource control update forbidden response has a 4xx status code
func (o *ResourceControlUpdateForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this resource control update forbidden response has a 5xx status code
func (o *ResourceControlUpdateForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this resource control update forbidden response a status code equal to that given
func (o *ResourceControlUpdateForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the resource control update forbidden response
func (o *ResourceControlUpdateForbidden) Code() int {
	return 403
}

func (o *ResourceControlUpdateForbidden) Error() string {
	return fmt.Sprintf("[PUT /resource_controls/{id}][%d] resourceControlUpdateForbidden", 403)
}

func (o *ResourceControlUpdateForbidden) String() string {
	return fmt.Sprintf("[PUT /resource_controls/{id}][%d] resourceControlUpdateForbidden", 403)
}

func (o *ResourceControlUpdateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResourceControlUpdateNotFound creates a ResourceControlUpdateNotFound with default headers values
func NewResourceControlUpdateNotFound() *ResourceControlUpdateNotFound {
	return &ResourceControlUpdateNotFound{}
}

/*
ResourceControlUpdateNotFound describes a response with status code 404, with default header values.

Resource control not found
*/
type ResourceControlUpdateNotFound struct {
}

// IsSuccess returns true when this resource control update not found response has a 2xx status code
func (o *ResourceControlUpdateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this resource control update not found response has a 3xx status code
func (o *ResourceControlUpdateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this resource control update not found response has a 4xx status code
func (o *ResourceControlUpdateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this resource control update not found response has a 5xx status code
func (o *ResourceControlUpdateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this resource control update not found response a status code equal to that given
func (o *ResourceControlUpdateNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the resource control update not found response
func (o *ResourceControlUpdateNotFound) Code() int {
	return 404
}

func (o *ResourceControlUpdateNotFound) Error() string {
	return fmt.Sprintf("[PUT /resource_controls/{id}][%d] resourceControlUpdateNotFound", 404)
}

func (o *ResourceControlUpdateNotFound) String() string {
	return fmt.Sprintf("[PUT /resource_controls/{id}][%d] resourceControlUpdateNotFound", 404)
}

func (o *ResourceControlUpdateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResourceControlUpdateInternalServerError creates a ResourceControlUpdateInternalServerError with default headers values
func NewResourceControlUpdateInternalServerError() *ResourceControlUpdateInternalServerError {
	return &ResourceControlUpdateInternalServerError{}
}

/*
ResourceControlUpdateInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type ResourceControlUpdateInternalServerError struct {
}

// IsSuccess returns true when this resource control update internal server error response has a 2xx status code
func (o *ResourceControlUpdateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this resource control update internal server error response has a 3xx status code
func (o *ResourceControlUpdateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this resource control update internal server error response has a 4xx status code
func (o *ResourceControlUpdateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this resource control update internal server error response has a 5xx status code
func (o *ResourceControlUpdateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this resource control update internal server error response a status code equal to that given
func (o *ResourceControlUpdateInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the resource control update internal server error response
func (o *ResourceControlUpdateInternalServerError) Code() int {
	return 500
}

func (o *ResourceControlUpdateInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /resource_controls/{id}][%d] resourceControlUpdateInternalServerError", 500)
}

func (o *ResourceControlUpdateInternalServerError) String() string {
	return fmt.Sprintf("[PUT /resource_controls/{id}][%d] resourceControlUpdateInternalServerError", 500)
}

func (o *ResourceControlUpdateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
