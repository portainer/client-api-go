// Code generated by go-swagger; DO NOT EDIT.

package ssl

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// SSLUpdateReader is a Reader for the SSLUpdate structure.
type SSLUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SSLUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewSSLUpdateNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSSLUpdateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSSLUpdateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSSLUpdateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSSLUpdateNoContent creates a SSLUpdateNoContent with default headers values
func NewSSLUpdateNoContent() *SSLUpdateNoContent {
	return &SSLUpdateNoContent{}
}

/* SSLUpdateNoContent describes a response with status code 204, with default header values.

Success
*/
type SSLUpdateNoContent struct {
}

func (o *SSLUpdateNoContent) Error() string {
	return fmt.Sprintf("[PUT /ssl][%d] sSLUpdateNoContent ", 204)
}

func (o *SSLUpdateNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSSLUpdateBadRequest creates a SSLUpdateBadRequest with default headers values
func NewSSLUpdateBadRequest() *SSLUpdateBadRequest {
	return &SSLUpdateBadRequest{}
}

/* SSLUpdateBadRequest describes a response with status code 400, with default header values.

Invalid request
*/
type SSLUpdateBadRequest struct {
}

func (o *SSLUpdateBadRequest) Error() string {
	return fmt.Sprintf("[PUT /ssl][%d] sSLUpdateBadRequest ", 400)
}

func (o *SSLUpdateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSSLUpdateForbidden creates a SSLUpdateForbidden with default headers values
func NewSSLUpdateForbidden() *SSLUpdateForbidden {
	return &SSLUpdateForbidden{}
}

/* SSLUpdateForbidden describes a response with status code 403, with default header values.

Permission denied to access settings
*/
type SSLUpdateForbidden struct {
}

func (o *SSLUpdateForbidden) Error() string {
	return fmt.Sprintf("[PUT /ssl][%d] sSLUpdateForbidden ", 403)
}

func (o *SSLUpdateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSSLUpdateInternalServerError creates a SSLUpdateInternalServerError with default headers values
func NewSSLUpdateInternalServerError() *SSLUpdateInternalServerError {
	return &SSLUpdateInternalServerError{}
}

/* SSLUpdateInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type SSLUpdateInternalServerError struct {
}

func (o *SSLUpdateInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /ssl][%d] sSLUpdateInternalServerError ", 500)
}

func (o *SSLUpdateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
