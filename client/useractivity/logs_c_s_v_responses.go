// Code generated by go-swagger; DO NOT EDIT.

package useractivity

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// LogsCSVReader is a Reader for the LogsCSV structure.
type LogsCSVReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LogsCSVReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLogsCSVOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewLogsCSVInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /useractivity/logs.csv] LogsCSV", response, response.Code())
	}
}

// NewLogsCSVOK creates a LogsCSVOK with default headers values
func NewLogsCSVOK() *LogsCSVOK {
	return &LogsCSVOK{}
}

/*
LogsCSVOK describes a response with status code 200, with default header values.

Success
*/
type LogsCSVOK struct {
}

// IsSuccess returns true when this logs c s v o k response has a 2xx status code
func (o *LogsCSVOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this logs c s v o k response has a 3xx status code
func (o *LogsCSVOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this logs c s v o k response has a 4xx status code
func (o *LogsCSVOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this logs c s v o k response has a 5xx status code
func (o *LogsCSVOK) IsServerError() bool {
	return false
}

// IsCode returns true when this logs c s v o k response a status code equal to that given
func (o *LogsCSVOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the logs c s v o k response
func (o *LogsCSVOK) Code() int {
	return 200
}

func (o *LogsCSVOK) Error() string {
	return fmt.Sprintf("[GET /useractivity/logs.csv][%d] logsCSVOK ", 200)
}

func (o *LogsCSVOK) String() string {
	return fmt.Sprintf("[GET /useractivity/logs.csv][%d] logsCSVOK ", 200)
}

func (o *LogsCSVOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLogsCSVInternalServerError creates a LogsCSVInternalServerError with default headers values
func NewLogsCSVInternalServerError() *LogsCSVInternalServerError {
	return &LogsCSVInternalServerError{}
}

/*
LogsCSVInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type LogsCSVInternalServerError struct {
}

// IsSuccess returns true when this logs c s v internal server error response has a 2xx status code
func (o *LogsCSVInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this logs c s v internal server error response has a 3xx status code
func (o *LogsCSVInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this logs c s v internal server error response has a 4xx status code
func (o *LogsCSVInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this logs c s v internal server error response has a 5xx status code
func (o *LogsCSVInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this logs c s v internal server error response a status code equal to that given
func (o *LogsCSVInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the logs c s v internal server error response
func (o *LogsCSVInternalServerError) Code() int {
	return 500
}

func (o *LogsCSVInternalServerError) Error() string {
	return fmt.Sprintf("[GET /useractivity/logs.csv][%d] logsCSVInternalServerError ", 500)
}

func (o *LogsCSVInternalServerError) String() string {
	return fmt.Sprintf("[GET /useractivity/logs.csv][%d] logsCSVInternalServerError ", 500)
}

func (o *LogsCSVInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
