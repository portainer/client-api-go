// Code generated by go-swagger; DO NOT EDIT.

package edge_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/portainer/client-api/models"
)

// GetEdgeGroupsReader is a Reader for the GetEdgeGroups structure.
type GetEdgeGroupsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEdgeGroupsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEdgeGroupsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewGetEdgeGroupsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetEdgeGroupsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetEdgeGroupsOK creates a GetEdgeGroupsOK with default headers values
func NewGetEdgeGroupsOK() *GetEdgeGroupsOK {
	return &GetEdgeGroupsOK{}
}

/* GetEdgeGroupsOK describes a response with status code 200, with default header values.

EdgeGroups
*/
type GetEdgeGroupsOK struct {
	Payload []*GetEdgeGroupsOKBodyItems0
}

func (o *GetEdgeGroupsOK) Error() string {
	return fmt.Sprintf("[GET /edge_groups][%d] getEdgeGroupsOK  %+v", 200, o.Payload)
}
func (o *GetEdgeGroupsOK) GetPayload() []*GetEdgeGroupsOKBodyItems0 {
	return o.Payload
}

func (o *GetEdgeGroupsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEdgeGroupsInternalServerError creates a GetEdgeGroupsInternalServerError with default headers values
func NewGetEdgeGroupsInternalServerError() *GetEdgeGroupsInternalServerError {
	return &GetEdgeGroupsInternalServerError{}
}

/* GetEdgeGroupsInternalServerError describes a response with status code 500, with default header values.

GetEdgeGroupsInternalServerError get edge groups internal server error
*/
type GetEdgeGroupsInternalServerError struct {
}

func (o *GetEdgeGroupsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /edge_groups][%d] getEdgeGroupsInternalServerError ", 500)
}

func (o *GetEdgeGroupsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEdgeGroupsServiceUnavailable creates a GetEdgeGroupsServiceUnavailable with default headers values
func NewGetEdgeGroupsServiceUnavailable() *GetEdgeGroupsServiceUnavailable {
	return &GetEdgeGroupsServiceUnavailable{}
}

/* GetEdgeGroupsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable
*/
type GetEdgeGroupsServiceUnavailable struct {
}

func (o *GetEdgeGroupsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /edge_groups][%d] getEdgeGroupsServiceUnavailable ", 503)
}

func (o *GetEdgeGroupsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetEdgeGroupsOKBodyItems0 get edge groups o k body items0
swagger:model GetEdgeGroupsOKBodyItems0
*/
type GetEdgeGroupsOKBodyItems0 struct {
	models.PortainerEdgeGroup

	// has edge stack
	HasEdgeStack bool `json:"HasEdgeStack,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *GetEdgeGroupsOKBodyItems0) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 models.PortainerEdgeGroup
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	o.PortainerEdgeGroup = aO0

	// AO1
	var dataAO1 struct {
		HasEdgeStack bool `json:"HasEdgeStack,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO1); err != nil {
		return err
	}

	o.HasEdgeStack = dataAO1.HasEdgeStack

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o GetEdgeGroupsOKBodyItems0) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	aO0, err := swag.WriteJSON(o.PortainerEdgeGroup)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)
	var dataAO1 struct {
		HasEdgeStack bool `json:"HasEdgeStack,omitempty"`
	}

	dataAO1.HasEdgeStack = o.HasEdgeStack

	jsonDataAO1, errAO1 := swag.WriteJSON(dataAO1)
	if errAO1 != nil {
		return nil, errAO1
	}
	_parts = append(_parts, jsonDataAO1)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this get edge groups o k body items0
func (o *GetEdgeGroupsOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.PortainerEdgeGroup
	if err := o.PortainerEdgeGroup.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validate this get edge groups o k body items0 based on the context it is used
func (o *GetEdgeGroupsOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.PortainerEdgeGroup
	if err := o.PortainerEdgeGroup.ContextValidate(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *GetEdgeGroupsOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetEdgeGroupsOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetEdgeGroupsOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
