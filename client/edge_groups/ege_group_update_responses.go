// Code generated by go-swagger; DO NOT EDIT.

package edge_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/portainer/client-api/models"
)

// EgeGroupUpdateReader is a Reader for the EgeGroupUpdate structure.
type EgeGroupUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EgeGroupUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewEgeGroupUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewEgeGroupUpdateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewEgeGroupUpdateServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewEgeGroupUpdateOK creates a EgeGroupUpdateOK with default headers values
func NewEgeGroupUpdateOK() *EgeGroupUpdateOK {
	return &EgeGroupUpdateOK{}
}

/* EgeGroupUpdateOK describes a response with status code 200, with default header values.

OK
*/
type EgeGroupUpdateOK struct {
	Payload *models.PortainerEdgeGroup
}

func (o *EgeGroupUpdateOK) Error() string {
	return fmt.Sprintf("[PUT /edge_groups/{id}][%d] egeGroupUpdateOK  %+v", 200, o.Payload)
}
func (o *EgeGroupUpdateOK) GetPayload() *models.PortainerEdgeGroup {
	return o.Payload
}

func (o *EgeGroupUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PortainerEdgeGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEgeGroupUpdateInternalServerError creates a EgeGroupUpdateInternalServerError with default headers values
func NewEgeGroupUpdateInternalServerError() *EgeGroupUpdateInternalServerError {
	return &EgeGroupUpdateInternalServerError{}
}

/* EgeGroupUpdateInternalServerError describes a response with status code 500, with default header values.

EgeGroupUpdateInternalServerError ege group update internal server error
*/
type EgeGroupUpdateInternalServerError struct {
}

func (o *EgeGroupUpdateInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /edge_groups/{id}][%d] egeGroupUpdateInternalServerError ", 500)
}

func (o *EgeGroupUpdateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewEgeGroupUpdateServiceUnavailable creates a EgeGroupUpdateServiceUnavailable with default headers values
func NewEgeGroupUpdateServiceUnavailable() *EgeGroupUpdateServiceUnavailable {
	return &EgeGroupUpdateServiceUnavailable{}
}

/* EgeGroupUpdateServiceUnavailable describes a response with status code 503, with default header values.

Edge compute features are disabled
*/
type EgeGroupUpdateServiceUnavailable struct {
}

func (o *EgeGroupUpdateServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /edge_groups/{id}][%d] egeGroupUpdateServiceUnavailable ", 503)
}

func (o *EgeGroupUpdateServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
