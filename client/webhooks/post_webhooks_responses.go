// Code generated by go-swagger; DO NOT EDIT.

package webhooks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/portainer/client-api/models"
)

// PostWebhooksReader is a Reader for the PostWebhooks structure.
type PostWebhooksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostWebhooksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostWebhooksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostWebhooksBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPostWebhooksConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostWebhooksInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostWebhooksOK creates a PostWebhooksOK with default headers values
func NewPostWebhooksOK() *PostWebhooksOK {
	return &PostWebhooksOK{}
}

/* PostWebhooksOK describes a response with status code 200, with default header values.

OK
*/
type PostWebhooksOK struct {
	Payload *models.PortainerWebhook
}

func (o *PostWebhooksOK) Error() string {
	return fmt.Sprintf("[POST /webhooks][%d] postWebhooksOK  %+v", 200, o.Payload)
}
func (o *PostWebhooksOK) GetPayload() *models.PortainerWebhook {
	return o.Payload
}

func (o *PostWebhooksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PortainerWebhook)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostWebhooksBadRequest creates a PostWebhooksBadRequest with default headers values
func NewPostWebhooksBadRequest() *PostWebhooksBadRequest {
	return &PostWebhooksBadRequest{}
}

/* PostWebhooksBadRequest describes a response with status code 400, with default header values.

PostWebhooksBadRequest post webhooks bad request
*/
type PostWebhooksBadRequest struct {
}

func (o *PostWebhooksBadRequest) Error() string {
	return fmt.Sprintf("[POST /webhooks][%d] postWebhooksBadRequest ", 400)
}

func (o *PostWebhooksBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostWebhooksConflict creates a PostWebhooksConflict with default headers values
func NewPostWebhooksConflict() *PostWebhooksConflict {
	return &PostWebhooksConflict{}
}

/* PostWebhooksConflict describes a response with status code 409, with default header values.

PostWebhooksConflict post webhooks conflict
*/
type PostWebhooksConflict struct {
}

func (o *PostWebhooksConflict) Error() string {
	return fmt.Sprintf("[POST /webhooks][%d] postWebhooksConflict ", 409)
}

func (o *PostWebhooksConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostWebhooksInternalServerError creates a PostWebhooksInternalServerError with default headers values
func NewPostWebhooksInternalServerError() *PostWebhooksInternalServerError {
	return &PostWebhooksInternalServerError{}
}

/* PostWebhooksInternalServerError describes a response with status code 500, with default header values.

PostWebhooksInternalServerError post webhooks internal server error
*/
type PostWebhooksInternalServerError struct {
}

func (o *PostWebhooksInternalServerError) Error() string {
	return fmt.Sprintf("[POST /webhooks][%d] postWebhooksInternalServerError ", 500)
}

func (o *PostWebhooksInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
