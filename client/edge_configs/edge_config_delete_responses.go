// Code generated by go-swagger; DO NOT EDIT.

package edge_configs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// EdgeConfigDeleteReader is a Reader for the EdgeConfigDelete structure.
type EdgeConfigDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EdgeConfigDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewEdgeConfigDeleteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewEdgeConfigDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewEdgeConfigDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewEdgeConfigDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewEdgeConfigDeleteNoContent creates a EdgeConfigDeleteNoContent with default headers values
func NewEdgeConfigDeleteNoContent() *EdgeConfigDeleteNoContent {
	return &EdgeConfigDeleteNoContent{}
}

/*
EdgeConfigDeleteNoContent describes a response with status code 204, with default header values.

Success
*/
type EdgeConfigDeleteNoContent struct {
}

// IsSuccess returns true when this edge config delete no content response has a 2xx status code
func (o *EdgeConfigDeleteNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this edge config delete no content response has a 3xx status code
func (o *EdgeConfigDeleteNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edge config delete no content response has a 4xx status code
func (o *EdgeConfigDeleteNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this edge config delete no content response has a 5xx status code
func (o *EdgeConfigDeleteNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this edge config delete no content response a status code equal to that given
func (o *EdgeConfigDeleteNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *EdgeConfigDeleteNoContent) Error() string {
	return fmt.Sprintf("[DELETE /edge_configurations/{id}][%d] edgeConfigDeleteNoContent ", 204)
}

func (o *EdgeConfigDeleteNoContent) String() string {
	return fmt.Sprintf("[DELETE /edge_configurations/{id}][%d] edgeConfigDeleteNoContent ", 204)
}

func (o *EdgeConfigDeleteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewEdgeConfigDeleteBadRequest creates a EdgeConfigDeleteBadRequest with default headers values
func NewEdgeConfigDeleteBadRequest() *EdgeConfigDeleteBadRequest {
	return &EdgeConfigDeleteBadRequest{}
}

/*
EdgeConfigDeleteBadRequest describes a response with status code 400, with default header values.

Invalid request
*/
type EdgeConfigDeleteBadRequest struct {
}

// IsSuccess returns true when this edge config delete bad request response has a 2xx status code
func (o *EdgeConfigDeleteBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edge config delete bad request response has a 3xx status code
func (o *EdgeConfigDeleteBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edge config delete bad request response has a 4xx status code
func (o *EdgeConfigDeleteBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this edge config delete bad request response has a 5xx status code
func (o *EdgeConfigDeleteBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this edge config delete bad request response a status code equal to that given
func (o *EdgeConfigDeleteBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *EdgeConfigDeleteBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /edge_configurations/{id}][%d] edgeConfigDeleteBadRequest ", 400)
}

func (o *EdgeConfigDeleteBadRequest) String() string {
	return fmt.Sprintf("[DELETE /edge_configurations/{id}][%d] edgeConfigDeleteBadRequest ", 400)
}

func (o *EdgeConfigDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewEdgeConfigDeleteNotFound creates a EdgeConfigDeleteNotFound with default headers values
func NewEdgeConfigDeleteNotFound() *EdgeConfigDeleteNotFound {
	return &EdgeConfigDeleteNotFound{}
}

/*
EdgeConfigDeleteNotFound describes a response with status code 404, with default header values.

Edge configuration not found
*/
type EdgeConfigDeleteNotFound struct {
}

// IsSuccess returns true when this edge config delete not found response has a 2xx status code
func (o *EdgeConfigDeleteNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edge config delete not found response has a 3xx status code
func (o *EdgeConfigDeleteNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edge config delete not found response has a 4xx status code
func (o *EdgeConfigDeleteNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this edge config delete not found response has a 5xx status code
func (o *EdgeConfigDeleteNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this edge config delete not found response a status code equal to that given
func (o *EdgeConfigDeleteNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *EdgeConfigDeleteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /edge_configurations/{id}][%d] edgeConfigDeleteNotFound ", 404)
}

func (o *EdgeConfigDeleteNotFound) String() string {
	return fmt.Sprintf("[DELETE /edge_configurations/{id}][%d] edgeConfigDeleteNotFound ", 404)
}

func (o *EdgeConfigDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewEdgeConfigDeleteInternalServerError creates a EdgeConfigDeleteInternalServerError with default headers values
func NewEdgeConfigDeleteInternalServerError() *EdgeConfigDeleteInternalServerError {
	return &EdgeConfigDeleteInternalServerError{}
}

/*
EdgeConfigDeleteInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type EdgeConfigDeleteInternalServerError struct {
}

// IsSuccess returns true when this edge config delete internal server error response has a 2xx status code
func (o *EdgeConfigDeleteInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edge config delete internal server error response has a 3xx status code
func (o *EdgeConfigDeleteInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edge config delete internal server error response has a 4xx status code
func (o *EdgeConfigDeleteInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this edge config delete internal server error response has a 5xx status code
func (o *EdgeConfigDeleteInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this edge config delete internal server error response a status code equal to that given
func (o *EdgeConfigDeleteInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *EdgeConfigDeleteInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /edge_configurations/{id}][%d] edgeConfigDeleteInternalServerError ", 500)
}

func (o *EdgeConfigDeleteInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /edge_configurations/{id}][%d] edgeConfigDeleteInternalServerError ", 500)
}

func (o *EdgeConfigDeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
