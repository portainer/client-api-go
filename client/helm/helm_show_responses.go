// Code generated by go-swagger; DO NOT EDIT.

package helm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// HelmShowReader is a Reader for the HelmShow structure.
type HelmShowReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *HelmShowReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewHelmShowOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewHelmShowUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewHelmShowNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewHelmShowInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /templates/helm/{command}] HelmShow", response, response.Code())
	}
}

// NewHelmShowOK creates a HelmShowOK with default headers values
func NewHelmShowOK() *HelmShowOK {
	return &HelmShowOK{}
}

/*
HelmShowOK describes a response with status code 200, with default header values.

Success
*/
type HelmShowOK struct {
	Payload string
}

// IsSuccess returns true when this helm show o k response has a 2xx status code
func (o *HelmShowOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this helm show o k response has a 3xx status code
func (o *HelmShowOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this helm show o k response has a 4xx status code
func (o *HelmShowOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this helm show o k response has a 5xx status code
func (o *HelmShowOK) IsServerError() bool {
	return false
}

// IsCode returns true when this helm show o k response a status code equal to that given
func (o *HelmShowOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the helm show o k response
func (o *HelmShowOK) Code() int {
	return 200
}

func (o *HelmShowOK) Error() string {
	return fmt.Sprintf("[GET /templates/helm/{command}][%d] helmShowOK  %+v", 200, o.Payload)
}

func (o *HelmShowOK) String() string {
	return fmt.Sprintf("[GET /templates/helm/{command}][%d] helmShowOK  %+v", 200, o.Payload)
}

func (o *HelmShowOK) GetPayload() string {
	return o.Payload
}

func (o *HelmShowOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHelmShowUnauthorized creates a HelmShowUnauthorized with default headers values
func NewHelmShowUnauthorized() *HelmShowUnauthorized {
	return &HelmShowUnauthorized{}
}

/*
HelmShowUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type HelmShowUnauthorized struct {
}

// IsSuccess returns true when this helm show unauthorized response has a 2xx status code
func (o *HelmShowUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this helm show unauthorized response has a 3xx status code
func (o *HelmShowUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this helm show unauthorized response has a 4xx status code
func (o *HelmShowUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this helm show unauthorized response has a 5xx status code
func (o *HelmShowUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this helm show unauthorized response a status code equal to that given
func (o *HelmShowUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the helm show unauthorized response
func (o *HelmShowUnauthorized) Code() int {
	return 401
}

func (o *HelmShowUnauthorized) Error() string {
	return fmt.Sprintf("[GET /templates/helm/{command}][%d] helmShowUnauthorized ", 401)
}

func (o *HelmShowUnauthorized) String() string {
	return fmt.Sprintf("[GET /templates/helm/{command}][%d] helmShowUnauthorized ", 401)
}

func (o *HelmShowUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHelmShowNotFound creates a HelmShowNotFound with default headers values
func NewHelmShowNotFound() *HelmShowNotFound {
	return &HelmShowNotFound{}
}

/*
HelmShowNotFound describes a response with status code 404, with default header values.

Environment(Endpoint) or ServiceAccount not found
*/
type HelmShowNotFound struct {
}

// IsSuccess returns true when this helm show not found response has a 2xx status code
func (o *HelmShowNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this helm show not found response has a 3xx status code
func (o *HelmShowNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this helm show not found response has a 4xx status code
func (o *HelmShowNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this helm show not found response has a 5xx status code
func (o *HelmShowNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this helm show not found response a status code equal to that given
func (o *HelmShowNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the helm show not found response
func (o *HelmShowNotFound) Code() int {
	return 404
}

func (o *HelmShowNotFound) Error() string {
	return fmt.Sprintf("[GET /templates/helm/{command}][%d] helmShowNotFound ", 404)
}

func (o *HelmShowNotFound) String() string {
	return fmt.Sprintf("[GET /templates/helm/{command}][%d] helmShowNotFound ", 404)
}

func (o *HelmShowNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHelmShowInternalServerError creates a HelmShowInternalServerError with default headers values
func NewHelmShowInternalServerError() *HelmShowInternalServerError {
	return &HelmShowInternalServerError{}
}

/*
HelmShowInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type HelmShowInternalServerError struct {
}

// IsSuccess returns true when this helm show internal server error response has a 2xx status code
func (o *HelmShowInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this helm show internal server error response has a 3xx status code
func (o *HelmShowInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this helm show internal server error response has a 4xx status code
func (o *HelmShowInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this helm show internal server error response has a 5xx status code
func (o *HelmShowInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this helm show internal server error response a status code equal to that given
func (o *HelmShowInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the helm show internal server error response
func (o *HelmShowInternalServerError) Code() int {
	return 500
}

func (o *HelmShowInternalServerError) Error() string {
	return fmt.Sprintf("[GET /templates/helm/{command}][%d] helmShowInternalServerError ", 500)
}

func (o *HelmShowInternalServerError) String() string {
	return fmt.Sprintf("[GET /templates/helm/{command}][%d] helmShowInternalServerError ", 500)
}

func (o *HelmShowInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
