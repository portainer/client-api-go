// Code generated by go-swagger; DO NOT EDIT.

package helm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// HelmUserRepositoryDeleteReader is a Reader for the HelmUserRepositoryDelete structure.
type HelmUserRepositoryDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *HelmUserRepositoryDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewHelmUserRepositoryDeleteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewHelmUserRepositoryDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewHelmUserRepositoryDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewHelmUserRepositoryDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /users/{id}/helm/repositories/{repositoryID}] HelmUserRepositoryDelete", response, response.Code())
	}
}

// NewHelmUserRepositoryDeleteNoContent creates a HelmUserRepositoryDeleteNoContent with default headers values
func NewHelmUserRepositoryDeleteNoContent() *HelmUserRepositoryDeleteNoContent {
	return &HelmUserRepositoryDeleteNoContent{}
}

/*
HelmUserRepositoryDeleteNoContent describes a response with status code 204, with default header values.

Success
*/
type HelmUserRepositoryDeleteNoContent struct {
}

// IsSuccess returns true when this helm user repository delete no content response has a 2xx status code
func (o *HelmUserRepositoryDeleteNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this helm user repository delete no content response has a 3xx status code
func (o *HelmUserRepositoryDeleteNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this helm user repository delete no content response has a 4xx status code
func (o *HelmUserRepositoryDeleteNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this helm user repository delete no content response has a 5xx status code
func (o *HelmUserRepositoryDeleteNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this helm user repository delete no content response a status code equal to that given
func (o *HelmUserRepositoryDeleteNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the helm user repository delete no content response
func (o *HelmUserRepositoryDeleteNoContent) Code() int {
	return 204
}

func (o *HelmUserRepositoryDeleteNoContent) Error() string {
	return fmt.Sprintf("[DELETE /users/{id}/helm/repositories/{repositoryID}][%d] helmUserRepositoryDeleteNoContent", 204)
}

func (o *HelmUserRepositoryDeleteNoContent) String() string {
	return fmt.Sprintf("[DELETE /users/{id}/helm/repositories/{repositoryID}][%d] helmUserRepositoryDeleteNoContent", 204)
}

func (o *HelmUserRepositoryDeleteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHelmUserRepositoryDeleteBadRequest creates a HelmUserRepositoryDeleteBadRequest with default headers values
func NewHelmUserRepositoryDeleteBadRequest() *HelmUserRepositoryDeleteBadRequest {
	return &HelmUserRepositoryDeleteBadRequest{}
}

/*
HelmUserRepositoryDeleteBadRequest describes a response with status code 400, with default header values.

Invalid request
*/
type HelmUserRepositoryDeleteBadRequest struct {
}

// IsSuccess returns true when this helm user repository delete bad request response has a 2xx status code
func (o *HelmUserRepositoryDeleteBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this helm user repository delete bad request response has a 3xx status code
func (o *HelmUserRepositoryDeleteBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this helm user repository delete bad request response has a 4xx status code
func (o *HelmUserRepositoryDeleteBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this helm user repository delete bad request response has a 5xx status code
func (o *HelmUserRepositoryDeleteBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this helm user repository delete bad request response a status code equal to that given
func (o *HelmUserRepositoryDeleteBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the helm user repository delete bad request response
func (o *HelmUserRepositoryDeleteBadRequest) Code() int {
	return 400
}

func (o *HelmUserRepositoryDeleteBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /users/{id}/helm/repositories/{repositoryID}][%d] helmUserRepositoryDeleteBadRequest", 400)
}

func (o *HelmUserRepositoryDeleteBadRequest) String() string {
	return fmt.Sprintf("[DELETE /users/{id}/helm/repositories/{repositoryID}][%d] helmUserRepositoryDeleteBadRequest", 400)
}

func (o *HelmUserRepositoryDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHelmUserRepositoryDeleteForbidden creates a HelmUserRepositoryDeleteForbidden with default headers values
func NewHelmUserRepositoryDeleteForbidden() *HelmUserRepositoryDeleteForbidden {
	return &HelmUserRepositoryDeleteForbidden{}
}

/*
HelmUserRepositoryDeleteForbidden describes a response with status code 403, with default header values.

Permission denied
*/
type HelmUserRepositoryDeleteForbidden struct {
}

// IsSuccess returns true when this helm user repository delete forbidden response has a 2xx status code
func (o *HelmUserRepositoryDeleteForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this helm user repository delete forbidden response has a 3xx status code
func (o *HelmUserRepositoryDeleteForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this helm user repository delete forbidden response has a 4xx status code
func (o *HelmUserRepositoryDeleteForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this helm user repository delete forbidden response has a 5xx status code
func (o *HelmUserRepositoryDeleteForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this helm user repository delete forbidden response a status code equal to that given
func (o *HelmUserRepositoryDeleteForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the helm user repository delete forbidden response
func (o *HelmUserRepositoryDeleteForbidden) Code() int {
	return 403
}

func (o *HelmUserRepositoryDeleteForbidden) Error() string {
	return fmt.Sprintf("[DELETE /users/{id}/helm/repositories/{repositoryID}][%d] helmUserRepositoryDeleteForbidden", 403)
}

func (o *HelmUserRepositoryDeleteForbidden) String() string {
	return fmt.Sprintf("[DELETE /users/{id}/helm/repositories/{repositoryID}][%d] helmUserRepositoryDeleteForbidden", 403)
}

func (o *HelmUserRepositoryDeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHelmUserRepositoryDeleteInternalServerError creates a HelmUserRepositoryDeleteInternalServerError with default headers values
func NewHelmUserRepositoryDeleteInternalServerError() *HelmUserRepositoryDeleteInternalServerError {
	return &HelmUserRepositoryDeleteInternalServerError{}
}

/*
HelmUserRepositoryDeleteInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type HelmUserRepositoryDeleteInternalServerError struct {
}

// IsSuccess returns true when this helm user repository delete internal server error response has a 2xx status code
func (o *HelmUserRepositoryDeleteInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this helm user repository delete internal server error response has a 3xx status code
func (o *HelmUserRepositoryDeleteInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this helm user repository delete internal server error response has a 4xx status code
func (o *HelmUserRepositoryDeleteInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this helm user repository delete internal server error response has a 5xx status code
func (o *HelmUserRepositoryDeleteInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this helm user repository delete internal server error response a status code equal to that given
func (o *HelmUserRepositoryDeleteInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the helm user repository delete internal server error response
func (o *HelmUserRepositoryDeleteInternalServerError) Code() int {
	return 500
}

func (o *HelmUserRepositoryDeleteInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /users/{id}/helm/repositories/{repositoryID}][%d] helmUserRepositoryDeleteInternalServerError", 500)
}

func (o *HelmUserRepositoryDeleteInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /users/{id}/helm/repositories/{repositoryID}][%d] helmUserRepositoryDeleteInternalServerError", 500)
}

func (o *HelmUserRepositoryDeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
