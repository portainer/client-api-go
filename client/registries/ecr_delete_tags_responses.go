// Code generated by go-swagger; DO NOT EDIT.

package registries

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// EcrDeleteTagsReader is a Reader for the EcrDeleteTags structure.
type EcrDeleteTagsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EcrDeleteTagsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewEcrDeleteTagsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewEcrDeleteTagsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewEcrDeleteTagsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewEcrDeleteTagsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewEcrDeleteTagsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /registries/{id}/ecr/repositories/{repositoryName}/tags] ecrDeleteTags", response, response.Code())
	}
}

// NewEcrDeleteTagsNoContent creates a EcrDeleteTagsNoContent with default headers values
func NewEcrDeleteTagsNoContent() *EcrDeleteTagsNoContent {
	return &EcrDeleteTagsNoContent{}
}

/*
EcrDeleteTagsNoContent describes a response with status code 204, with default header values.

Success
*/
type EcrDeleteTagsNoContent struct {
}

// IsSuccess returns true when this ecr delete tags no content response has a 2xx status code
func (o *EcrDeleteTagsNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this ecr delete tags no content response has a 3xx status code
func (o *EcrDeleteTagsNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this ecr delete tags no content response has a 4xx status code
func (o *EcrDeleteTagsNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this ecr delete tags no content response has a 5xx status code
func (o *EcrDeleteTagsNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this ecr delete tags no content response a status code equal to that given
func (o *EcrDeleteTagsNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the ecr delete tags no content response
func (o *EcrDeleteTagsNoContent) Code() int {
	return 204
}

func (o *EcrDeleteTagsNoContent) Error() string {
	return fmt.Sprintf("[DELETE /registries/{id}/ecr/repositories/{repositoryName}/tags][%d] ecrDeleteTagsNoContent ", 204)
}

func (o *EcrDeleteTagsNoContent) String() string {
	return fmt.Sprintf("[DELETE /registries/{id}/ecr/repositories/{repositoryName}/tags][%d] ecrDeleteTagsNoContent ", 204)
}

func (o *EcrDeleteTagsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewEcrDeleteTagsBadRequest creates a EcrDeleteTagsBadRequest with default headers values
func NewEcrDeleteTagsBadRequest() *EcrDeleteTagsBadRequest {
	return &EcrDeleteTagsBadRequest{}
}

/*
EcrDeleteTagsBadRequest describes a response with status code 400, with default header values.

Invalid request
*/
type EcrDeleteTagsBadRequest struct {
}

// IsSuccess returns true when this ecr delete tags bad request response has a 2xx status code
func (o *EcrDeleteTagsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this ecr delete tags bad request response has a 3xx status code
func (o *EcrDeleteTagsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this ecr delete tags bad request response has a 4xx status code
func (o *EcrDeleteTagsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this ecr delete tags bad request response has a 5xx status code
func (o *EcrDeleteTagsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this ecr delete tags bad request response a status code equal to that given
func (o *EcrDeleteTagsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the ecr delete tags bad request response
func (o *EcrDeleteTagsBadRequest) Code() int {
	return 400
}

func (o *EcrDeleteTagsBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /registries/{id}/ecr/repositories/{repositoryName}/tags][%d] ecrDeleteTagsBadRequest ", 400)
}

func (o *EcrDeleteTagsBadRequest) String() string {
	return fmt.Sprintf("[DELETE /registries/{id}/ecr/repositories/{repositoryName}/tags][%d] ecrDeleteTagsBadRequest ", 400)
}

func (o *EcrDeleteTagsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewEcrDeleteTagsForbidden creates a EcrDeleteTagsForbidden with default headers values
func NewEcrDeleteTagsForbidden() *EcrDeleteTagsForbidden {
	return &EcrDeleteTagsForbidden{}
}

/*
EcrDeleteTagsForbidden describes a response with status code 403, with default header values.

Permission denied to access registry
*/
type EcrDeleteTagsForbidden struct {
}

// IsSuccess returns true when this ecr delete tags forbidden response has a 2xx status code
func (o *EcrDeleteTagsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this ecr delete tags forbidden response has a 3xx status code
func (o *EcrDeleteTagsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this ecr delete tags forbidden response has a 4xx status code
func (o *EcrDeleteTagsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this ecr delete tags forbidden response has a 5xx status code
func (o *EcrDeleteTagsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this ecr delete tags forbidden response a status code equal to that given
func (o *EcrDeleteTagsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the ecr delete tags forbidden response
func (o *EcrDeleteTagsForbidden) Code() int {
	return 403
}

func (o *EcrDeleteTagsForbidden) Error() string {
	return fmt.Sprintf("[DELETE /registries/{id}/ecr/repositories/{repositoryName}/tags][%d] ecrDeleteTagsForbidden ", 403)
}

func (o *EcrDeleteTagsForbidden) String() string {
	return fmt.Sprintf("[DELETE /registries/{id}/ecr/repositories/{repositoryName}/tags][%d] ecrDeleteTagsForbidden ", 403)
}

func (o *EcrDeleteTagsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewEcrDeleteTagsNotFound creates a EcrDeleteTagsNotFound with default headers values
func NewEcrDeleteTagsNotFound() *EcrDeleteTagsNotFound {
	return &EcrDeleteTagsNotFound{}
}

/*
EcrDeleteTagsNotFound describes a response with status code 404, with default header values.

Registry not found
*/
type EcrDeleteTagsNotFound struct {
}

// IsSuccess returns true when this ecr delete tags not found response has a 2xx status code
func (o *EcrDeleteTagsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this ecr delete tags not found response has a 3xx status code
func (o *EcrDeleteTagsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this ecr delete tags not found response has a 4xx status code
func (o *EcrDeleteTagsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this ecr delete tags not found response has a 5xx status code
func (o *EcrDeleteTagsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this ecr delete tags not found response a status code equal to that given
func (o *EcrDeleteTagsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the ecr delete tags not found response
func (o *EcrDeleteTagsNotFound) Code() int {
	return 404
}

func (o *EcrDeleteTagsNotFound) Error() string {
	return fmt.Sprintf("[DELETE /registries/{id}/ecr/repositories/{repositoryName}/tags][%d] ecrDeleteTagsNotFound ", 404)
}

func (o *EcrDeleteTagsNotFound) String() string {
	return fmt.Sprintf("[DELETE /registries/{id}/ecr/repositories/{repositoryName}/tags][%d] ecrDeleteTagsNotFound ", 404)
}

func (o *EcrDeleteTagsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewEcrDeleteTagsInternalServerError creates a EcrDeleteTagsInternalServerError with default headers values
func NewEcrDeleteTagsInternalServerError() *EcrDeleteTagsInternalServerError {
	return &EcrDeleteTagsInternalServerError{}
}

/*
EcrDeleteTagsInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type EcrDeleteTagsInternalServerError struct {
}

// IsSuccess returns true when this ecr delete tags internal server error response has a 2xx status code
func (o *EcrDeleteTagsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this ecr delete tags internal server error response has a 3xx status code
func (o *EcrDeleteTagsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this ecr delete tags internal server error response has a 4xx status code
func (o *EcrDeleteTagsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this ecr delete tags internal server error response has a 5xx status code
func (o *EcrDeleteTagsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this ecr delete tags internal server error response a status code equal to that given
func (o *EcrDeleteTagsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the ecr delete tags internal server error response
func (o *EcrDeleteTagsInternalServerError) Code() int {
	return 500
}

func (o *EcrDeleteTagsInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /registries/{id}/ecr/repositories/{repositoryName}/tags][%d] ecrDeleteTagsInternalServerError ", 500)
}

func (o *EcrDeleteTagsInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /registries/{id}/ecr/repositories/{repositoryName}/tags][%d] ecrDeleteTagsInternalServerError ", 500)
}

func (o *EcrDeleteTagsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
