// Code generated by go-swagger; DO NOT EDIT.

package intel

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// OpenAMTHostInfoReader is a Reader for the OpenAMTHostInfo structure.
type OpenAMTHostInfoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OpenAMTHostInfoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewOpenAMTHostInfoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewOpenAMTHostInfoBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewOpenAMTHostInfoForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewOpenAMTHostInfoInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewOpenAMTHostInfoOK creates a OpenAMTHostInfoOK with default headers values
func NewOpenAMTHostInfoOK() *OpenAMTHostInfoOK {
	return &OpenAMTHostInfoOK{}
}

/*
OpenAMTHostInfoOK describes a response with status code 200, with default header values.

Success
*/
type OpenAMTHostInfoOK struct {
}

// IsSuccess returns true when this open a m t host info o k response has a 2xx status code
func (o *OpenAMTHostInfoOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this open a m t host info o k response has a 3xx status code
func (o *OpenAMTHostInfoOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this open a m t host info o k response has a 4xx status code
func (o *OpenAMTHostInfoOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this open a m t host info o k response has a 5xx status code
func (o *OpenAMTHostInfoOK) IsServerError() bool {
	return false
}

// IsCode returns true when this open a m t host info o k response a status code equal to that given
func (o *OpenAMTHostInfoOK) IsCode(code int) bool {
	return code == 200
}

func (o *OpenAMTHostInfoOK) Error() string {
	return fmt.Sprintf("[GET /open_amt/{id}/info][%d] openAMTHostInfoOK ", 200)
}

func (o *OpenAMTHostInfoOK) String() string {
	return fmt.Sprintf("[GET /open_amt/{id}/info][%d] openAMTHostInfoOK ", 200)
}

func (o *OpenAMTHostInfoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewOpenAMTHostInfoBadRequest creates a OpenAMTHostInfoBadRequest with default headers values
func NewOpenAMTHostInfoBadRequest() *OpenAMTHostInfoBadRequest {
	return &OpenAMTHostInfoBadRequest{}
}

/*
OpenAMTHostInfoBadRequest describes a response with status code 400, with default header values.

Invalid request
*/
type OpenAMTHostInfoBadRequest struct {
}

// IsSuccess returns true when this open a m t host info bad request response has a 2xx status code
func (o *OpenAMTHostInfoBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this open a m t host info bad request response has a 3xx status code
func (o *OpenAMTHostInfoBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this open a m t host info bad request response has a 4xx status code
func (o *OpenAMTHostInfoBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this open a m t host info bad request response has a 5xx status code
func (o *OpenAMTHostInfoBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this open a m t host info bad request response a status code equal to that given
func (o *OpenAMTHostInfoBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *OpenAMTHostInfoBadRequest) Error() string {
	return fmt.Sprintf("[GET /open_amt/{id}/info][%d] openAMTHostInfoBadRequest ", 400)
}

func (o *OpenAMTHostInfoBadRequest) String() string {
	return fmt.Sprintf("[GET /open_amt/{id}/info][%d] openAMTHostInfoBadRequest ", 400)
}

func (o *OpenAMTHostInfoBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewOpenAMTHostInfoForbidden creates a OpenAMTHostInfoForbidden with default headers values
func NewOpenAMTHostInfoForbidden() *OpenAMTHostInfoForbidden {
	return &OpenAMTHostInfoForbidden{}
}

/*
OpenAMTHostInfoForbidden describes a response with status code 403, with default header values.

Permission denied to access settings
*/
type OpenAMTHostInfoForbidden struct {
}

// IsSuccess returns true when this open a m t host info forbidden response has a 2xx status code
func (o *OpenAMTHostInfoForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this open a m t host info forbidden response has a 3xx status code
func (o *OpenAMTHostInfoForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this open a m t host info forbidden response has a 4xx status code
func (o *OpenAMTHostInfoForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this open a m t host info forbidden response has a 5xx status code
func (o *OpenAMTHostInfoForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this open a m t host info forbidden response a status code equal to that given
func (o *OpenAMTHostInfoForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *OpenAMTHostInfoForbidden) Error() string {
	return fmt.Sprintf("[GET /open_amt/{id}/info][%d] openAMTHostInfoForbidden ", 403)
}

func (o *OpenAMTHostInfoForbidden) String() string {
	return fmt.Sprintf("[GET /open_amt/{id}/info][%d] openAMTHostInfoForbidden ", 403)
}

func (o *OpenAMTHostInfoForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewOpenAMTHostInfoInternalServerError creates a OpenAMTHostInfoInternalServerError with default headers values
func NewOpenAMTHostInfoInternalServerError() *OpenAMTHostInfoInternalServerError {
	return &OpenAMTHostInfoInternalServerError{}
}

/*
OpenAMTHostInfoInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type OpenAMTHostInfoInternalServerError struct {
}

// IsSuccess returns true when this open a m t host info internal server error response has a 2xx status code
func (o *OpenAMTHostInfoInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this open a m t host info internal server error response has a 3xx status code
func (o *OpenAMTHostInfoInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this open a m t host info internal server error response has a 4xx status code
func (o *OpenAMTHostInfoInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this open a m t host info internal server error response has a 5xx status code
func (o *OpenAMTHostInfoInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this open a m t host info internal server error response a status code equal to that given
func (o *OpenAMTHostInfoInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *OpenAMTHostInfoInternalServerError) Error() string {
	return fmt.Sprintf("[GET /open_amt/{id}/info][%d] openAMTHostInfoInternalServerError ", 500)
}

func (o *OpenAMTHostInfoInternalServerError) String() string {
	return fmt.Sprintf("[GET /open_amt/{id}/info][%d] openAMTHostInfoInternalServerError ", 500)
}

func (o *OpenAMTHostInfoInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
