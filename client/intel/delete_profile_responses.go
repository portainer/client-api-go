// Code generated by go-swagger; DO NOT EDIT.

package intel

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteProfileReader is a Reader for the DeleteProfile structure.
type DeleteProfileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteProfileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteProfileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteProfileBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteProfileInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /fdo/profiles/{id}] deleteProfile", response, response.Code())
	}
}

// NewDeleteProfileOK creates a DeleteProfileOK with default headers values
func NewDeleteProfileOK() *DeleteProfileOK {
	return &DeleteProfileOK{}
}

/*
DeleteProfileOK describes a response with status code 200, with default header values.

Success
*/
type DeleteProfileOK struct {
}

// IsSuccess returns true when this delete profile o k response has a 2xx status code
func (o *DeleteProfileOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete profile o k response has a 3xx status code
func (o *DeleteProfileOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete profile o k response has a 4xx status code
func (o *DeleteProfileOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete profile o k response has a 5xx status code
func (o *DeleteProfileOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete profile o k response a status code equal to that given
func (o *DeleteProfileOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete profile o k response
func (o *DeleteProfileOK) Code() int {
	return 200
}

func (o *DeleteProfileOK) Error() string {
	return fmt.Sprintf("[DELETE /fdo/profiles/{id}][%d] deleteProfileOK ", 200)
}

func (o *DeleteProfileOK) String() string {
	return fmt.Sprintf("[DELETE /fdo/profiles/{id}][%d] deleteProfileOK ", 200)
}

func (o *DeleteProfileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteProfileBadRequest creates a DeleteProfileBadRequest with default headers values
func NewDeleteProfileBadRequest() *DeleteProfileBadRequest {
	return &DeleteProfileBadRequest{}
}

/*
DeleteProfileBadRequest describes a response with status code 400, with default header values.

Invalid request
*/
type DeleteProfileBadRequest struct {
}

// IsSuccess returns true when this delete profile bad request response has a 2xx status code
func (o *DeleteProfileBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete profile bad request response has a 3xx status code
func (o *DeleteProfileBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete profile bad request response has a 4xx status code
func (o *DeleteProfileBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete profile bad request response has a 5xx status code
func (o *DeleteProfileBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete profile bad request response a status code equal to that given
func (o *DeleteProfileBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete profile bad request response
func (o *DeleteProfileBadRequest) Code() int {
	return 400
}

func (o *DeleteProfileBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /fdo/profiles/{id}][%d] deleteProfileBadRequest ", 400)
}

func (o *DeleteProfileBadRequest) String() string {
	return fmt.Sprintf("[DELETE /fdo/profiles/{id}][%d] deleteProfileBadRequest ", 400)
}

func (o *DeleteProfileBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteProfileInternalServerError creates a DeleteProfileInternalServerError with default headers values
func NewDeleteProfileInternalServerError() *DeleteProfileInternalServerError {
	return &DeleteProfileInternalServerError{}
}

/*
DeleteProfileInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type DeleteProfileInternalServerError struct {
}

// IsSuccess returns true when this delete profile internal server error response has a 2xx status code
func (o *DeleteProfileInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete profile internal server error response has a 3xx status code
func (o *DeleteProfileInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete profile internal server error response has a 4xx status code
func (o *DeleteProfileInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete profile internal server error response has a 5xx status code
func (o *DeleteProfileInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete profile internal server error response a status code equal to that given
func (o *DeleteProfileInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete profile internal server error response
func (o *DeleteProfileInternalServerError) Code() int {
	return 500
}

func (o *DeleteProfileInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /fdo/profiles/{id}][%d] deleteProfileInternalServerError ", 500)
}

func (o *DeleteProfileInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /fdo/profiles/{id}][%d] deleteProfileInternalServerError ", 500)
}

func (o *DeleteProfileInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
