// Code generated by go-swagger; DO NOT EDIT.

package intel

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// OpenAMTDevicesReader is a Reader for the OpenAMTDevices structure.
type OpenAMTDevicesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OpenAMTDevicesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewOpenAMTDevicesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewOpenAMTDevicesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewOpenAMTDevicesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewOpenAMTDevicesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /open_amt/{id}/devices] OpenAMTDevices", response, response.Code())
	}
}

// NewOpenAMTDevicesOK creates a OpenAMTDevicesOK with default headers values
func NewOpenAMTDevicesOK() *OpenAMTDevicesOK {
	return &OpenAMTDevicesOK{}
}

/*
OpenAMTDevicesOK describes a response with status code 200, with default header values.

Success
*/
type OpenAMTDevicesOK struct {
}

// IsSuccess returns true when this open a m t devices o k response has a 2xx status code
func (o *OpenAMTDevicesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this open a m t devices o k response has a 3xx status code
func (o *OpenAMTDevicesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this open a m t devices o k response has a 4xx status code
func (o *OpenAMTDevicesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this open a m t devices o k response has a 5xx status code
func (o *OpenAMTDevicesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this open a m t devices o k response a status code equal to that given
func (o *OpenAMTDevicesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the open a m t devices o k response
func (o *OpenAMTDevicesOK) Code() int {
	return 200
}

func (o *OpenAMTDevicesOK) Error() string {
	return fmt.Sprintf("[GET /open_amt/{id}/devices][%d] openAMTDevicesOK ", 200)
}

func (o *OpenAMTDevicesOK) String() string {
	return fmt.Sprintf("[GET /open_amt/{id}/devices][%d] openAMTDevicesOK ", 200)
}

func (o *OpenAMTDevicesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewOpenAMTDevicesBadRequest creates a OpenAMTDevicesBadRequest with default headers values
func NewOpenAMTDevicesBadRequest() *OpenAMTDevicesBadRequest {
	return &OpenAMTDevicesBadRequest{}
}

/*
OpenAMTDevicesBadRequest describes a response with status code 400, with default header values.

Invalid request
*/
type OpenAMTDevicesBadRequest struct {
}

// IsSuccess returns true when this open a m t devices bad request response has a 2xx status code
func (o *OpenAMTDevicesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this open a m t devices bad request response has a 3xx status code
func (o *OpenAMTDevicesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this open a m t devices bad request response has a 4xx status code
func (o *OpenAMTDevicesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this open a m t devices bad request response has a 5xx status code
func (o *OpenAMTDevicesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this open a m t devices bad request response a status code equal to that given
func (o *OpenAMTDevicesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the open a m t devices bad request response
func (o *OpenAMTDevicesBadRequest) Code() int {
	return 400
}

func (o *OpenAMTDevicesBadRequest) Error() string {
	return fmt.Sprintf("[GET /open_amt/{id}/devices][%d] openAMTDevicesBadRequest ", 400)
}

func (o *OpenAMTDevicesBadRequest) String() string {
	return fmt.Sprintf("[GET /open_amt/{id}/devices][%d] openAMTDevicesBadRequest ", 400)
}

func (o *OpenAMTDevicesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewOpenAMTDevicesForbidden creates a OpenAMTDevicesForbidden with default headers values
func NewOpenAMTDevicesForbidden() *OpenAMTDevicesForbidden {
	return &OpenAMTDevicesForbidden{}
}

/*
OpenAMTDevicesForbidden describes a response with status code 403, with default header values.

Permission denied to access settings
*/
type OpenAMTDevicesForbidden struct {
}

// IsSuccess returns true when this open a m t devices forbidden response has a 2xx status code
func (o *OpenAMTDevicesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this open a m t devices forbidden response has a 3xx status code
func (o *OpenAMTDevicesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this open a m t devices forbidden response has a 4xx status code
func (o *OpenAMTDevicesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this open a m t devices forbidden response has a 5xx status code
func (o *OpenAMTDevicesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this open a m t devices forbidden response a status code equal to that given
func (o *OpenAMTDevicesForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the open a m t devices forbidden response
func (o *OpenAMTDevicesForbidden) Code() int {
	return 403
}

func (o *OpenAMTDevicesForbidden) Error() string {
	return fmt.Sprintf("[GET /open_amt/{id}/devices][%d] openAMTDevicesForbidden ", 403)
}

func (o *OpenAMTDevicesForbidden) String() string {
	return fmt.Sprintf("[GET /open_amt/{id}/devices][%d] openAMTDevicesForbidden ", 403)
}

func (o *OpenAMTDevicesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewOpenAMTDevicesInternalServerError creates a OpenAMTDevicesInternalServerError with default headers values
func NewOpenAMTDevicesInternalServerError() *OpenAMTDevicesInternalServerError {
	return &OpenAMTDevicesInternalServerError{}
}

/*
OpenAMTDevicesInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type OpenAMTDevicesInternalServerError struct {
}

// IsSuccess returns true when this open a m t devices internal server error response has a 2xx status code
func (o *OpenAMTDevicesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this open a m t devices internal server error response has a 3xx status code
func (o *OpenAMTDevicesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this open a m t devices internal server error response has a 4xx status code
func (o *OpenAMTDevicesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this open a m t devices internal server error response has a 5xx status code
func (o *OpenAMTDevicesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this open a m t devices internal server error response a status code equal to that given
func (o *OpenAMTDevicesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the open a m t devices internal server error response
func (o *OpenAMTDevicesInternalServerError) Code() int {
	return 500
}

func (o *OpenAMTDevicesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /open_amt/{id}/devices][%d] openAMTDevicesInternalServerError ", 500)
}

func (o *OpenAMTDevicesInternalServerError) String() string {
	return fmt.Sprintf("[GET /open_amt/{id}/devices][%d] openAMTDevicesInternalServerError ", 500)
}

func (o *OpenAMTDevicesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
