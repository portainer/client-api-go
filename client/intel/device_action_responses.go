// Code generated by go-swagger; DO NOT EDIT.

package intel

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeviceActionReader is a Reader for the DeviceAction structure.
type DeviceActionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeviceActionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeviceActionNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeviceActionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeviceActionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeviceActionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeviceActionNoContent creates a DeviceActionNoContent with default headers values
func NewDeviceActionNoContent() *DeviceActionNoContent {
	return &DeviceActionNoContent{}
}

/* DeviceActionNoContent describes a response with status code 204, with default header values.

Success
*/
type DeviceActionNoContent struct {
}

func (o *DeviceActionNoContent) Error() string {
	return fmt.Sprintf("[POST /open_amt/{id}/devices/{deviceId}/action][%d] deviceActionNoContent ", 204)
}

func (o *DeviceActionNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeviceActionBadRequest creates a DeviceActionBadRequest with default headers values
func NewDeviceActionBadRequest() *DeviceActionBadRequest {
	return &DeviceActionBadRequest{}
}

/* DeviceActionBadRequest describes a response with status code 400, with default header values.

Invalid request
*/
type DeviceActionBadRequest struct {
}

func (o *DeviceActionBadRequest) Error() string {
	return fmt.Sprintf("[POST /open_amt/{id}/devices/{deviceId}/action][%d] deviceActionBadRequest ", 400)
}

func (o *DeviceActionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeviceActionForbidden creates a DeviceActionForbidden with default headers values
func NewDeviceActionForbidden() *DeviceActionForbidden {
	return &DeviceActionForbidden{}
}

/* DeviceActionForbidden describes a response with status code 403, with default header values.

Permission denied to access settings
*/
type DeviceActionForbidden struct {
}

func (o *DeviceActionForbidden) Error() string {
	return fmt.Sprintf("[POST /open_amt/{id}/devices/{deviceId}/action][%d] deviceActionForbidden ", 403)
}

func (o *DeviceActionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeviceActionInternalServerError creates a DeviceActionInternalServerError with default headers values
func NewDeviceActionInternalServerError() *DeviceActionInternalServerError {
	return &DeviceActionInternalServerError{}
}

/* DeviceActionInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type DeviceActionInternalServerError struct {
}

func (o *DeviceActionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /open_amt/{id}/devices/{deviceId}/action][%d] deviceActionInternalServerError ", 500)
}

func (o *DeviceActionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
