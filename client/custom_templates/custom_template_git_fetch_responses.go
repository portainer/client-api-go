// Code generated by go-swagger; DO NOT EDIT.

package custom_templates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/portainer/client-api-go/v2/models"
)

// CustomTemplateGitFetchReader is a Reader for the CustomTemplateGitFetch structure.
type CustomTemplateGitFetchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CustomTemplateGitFetchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCustomTemplateGitFetchOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCustomTemplateGitFetchBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCustomTemplateGitFetchNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCustomTemplateGitFetchInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCustomTemplateGitFetchOK creates a CustomTemplateGitFetchOK with default headers values
func NewCustomTemplateGitFetchOK() *CustomTemplateGitFetchOK {
	return &CustomTemplateGitFetchOK{}
}

/*
CustomTemplateGitFetchOK describes a response with status code 200, with default header values.

Success
*/
type CustomTemplateGitFetchOK struct {
	Payload *models.CustomtemplatesFileResponse
}

// IsSuccess returns true when this custom template git fetch o k response has a 2xx status code
func (o *CustomTemplateGitFetchOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this custom template git fetch o k response has a 3xx status code
func (o *CustomTemplateGitFetchOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this custom template git fetch o k response has a 4xx status code
func (o *CustomTemplateGitFetchOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this custom template git fetch o k response has a 5xx status code
func (o *CustomTemplateGitFetchOK) IsServerError() bool {
	return false
}

// IsCode returns true when this custom template git fetch o k response a status code equal to that given
func (o *CustomTemplateGitFetchOK) IsCode(code int) bool {
	return code == 200
}

func (o *CustomTemplateGitFetchOK) Error() string {
	return fmt.Sprintf("[PUT /custom_templates/{id}/git_fetch][%d] customTemplateGitFetchOK  %+v", 200, o.Payload)
}

func (o *CustomTemplateGitFetchOK) String() string {
	return fmt.Sprintf("[PUT /custom_templates/{id}/git_fetch][%d] customTemplateGitFetchOK  %+v", 200, o.Payload)
}

func (o *CustomTemplateGitFetchOK) GetPayload() *models.CustomtemplatesFileResponse {
	return o.Payload
}

func (o *CustomTemplateGitFetchOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CustomtemplatesFileResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCustomTemplateGitFetchBadRequest creates a CustomTemplateGitFetchBadRequest with default headers values
func NewCustomTemplateGitFetchBadRequest() *CustomTemplateGitFetchBadRequest {
	return &CustomTemplateGitFetchBadRequest{}
}

/*
CustomTemplateGitFetchBadRequest describes a response with status code 400, with default header values.

Invalid request
*/
type CustomTemplateGitFetchBadRequest struct {
}

// IsSuccess returns true when this custom template git fetch bad request response has a 2xx status code
func (o *CustomTemplateGitFetchBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this custom template git fetch bad request response has a 3xx status code
func (o *CustomTemplateGitFetchBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this custom template git fetch bad request response has a 4xx status code
func (o *CustomTemplateGitFetchBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this custom template git fetch bad request response has a 5xx status code
func (o *CustomTemplateGitFetchBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this custom template git fetch bad request response a status code equal to that given
func (o *CustomTemplateGitFetchBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CustomTemplateGitFetchBadRequest) Error() string {
	return fmt.Sprintf("[PUT /custom_templates/{id}/git_fetch][%d] customTemplateGitFetchBadRequest ", 400)
}

func (o *CustomTemplateGitFetchBadRequest) String() string {
	return fmt.Sprintf("[PUT /custom_templates/{id}/git_fetch][%d] customTemplateGitFetchBadRequest ", 400)
}

func (o *CustomTemplateGitFetchBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCustomTemplateGitFetchNotFound creates a CustomTemplateGitFetchNotFound with default headers values
func NewCustomTemplateGitFetchNotFound() *CustomTemplateGitFetchNotFound {
	return &CustomTemplateGitFetchNotFound{}
}

/*
CustomTemplateGitFetchNotFound describes a response with status code 404, with default header values.

Custom template not found
*/
type CustomTemplateGitFetchNotFound struct {
}

// IsSuccess returns true when this custom template git fetch not found response has a 2xx status code
func (o *CustomTemplateGitFetchNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this custom template git fetch not found response has a 3xx status code
func (o *CustomTemplateGitFetchNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this custom template git fetch not found response has a 4xx status code
func (o *CustomTemplateGitFetchNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this custom template git fetch not found response has a 5xx status code
func (o *CustomTemplateGitFetchNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this custom template git fetch not found response a status code equal to that given
func (o *CustomTemplateGitFetchNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *CustomTemplateGitFetchNotFound) Error() string {
	return fmt.Sprintf("[PUT /custom_templates/{id}/git_fetch][%d] customTemplateGitFetchNotFound ", 404)
}

func (o *CustomTemplateGitFetchNotFound) String() string {
	return fmt.Sprintf("[PUT /custom_templates/{id}/git_fetch][%d] customTemplateGitFetchNotFound ", 404)
}

func (o *CustomTemplateGitFetchNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCustomTemplateGitFetchInternalServerError creates a CustomTemplateGitFetchInternalServerError with default headers values
func NewCustomTemplateGitFetchInternalServerError() *CustomTemplateGitFetchInternalServerError {
	return &CustomTemplateGitFetchInternalServerError{}
}

/*
CustomTemplateGitFetchInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type CustomTemplateGitFetchInternalServerError struct {
}

// IsSuccess returns true when this custom template git fetch internal server error response has a 2xx status code
func (o *CustomTemplateGitFetchInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this custom template git fetch internal server error response has a 3xx status code
func (o *CustomTemplateGitFetchInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this custom template git fetch internal server error response has a 4xx status code
func (o *CustomTemplateGitFetchInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this custom template git fetch internal server error response has a 5xx status code
func (o *CustomTemplateGitFetchInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this custom template git fetch internal server error response a status code equal to that given
func (o *CustomTemplateGitFetchInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *CustomTemplateGitFetchInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /custom_templates/{id}/git_fetch][%d] customTemplateGitFetchInternalServerError ", 500)
}

func (o *CustomTemplateGitFetchInternalServerError) String() string {
	return fmt.Sprintf("[PUT /custom_templates/{id}/git_fetch][%d] customTemplateGitFetchInternalServerError ", 500)
}

func (o *CustomTemplateGitFetchInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
