// Code generated by go-swagger; DO NOT EDIT.

package custom_templates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewCustomTemplateCreateFileParams creates a new CustomTemplateCreateFileParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCustomTemplateCreateFileParams() *CustomTemplateCreateFileParams {
	return &CustomTemplateCreateFileParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCustomTemplateCreateFileParamsWithTimeout creates a new CustomTemplateCreateFileParams object
// with the ability to set a timeout on a request.
func NewCustomTemplateCreateFileParamsWithTimeout(timeout time.Duration) *CustomTemplateCreateFileParams {
	return &CustomTemplateCreateFileParams{
		timeout: timeout,
	}
}

// NewCustomTemplateCreateFileParamsWithContext creates a new CustomTemplateCreateFileParams object
// with the ability to set a context for a request.
func NewCustomTemplateCreateFileParamsWithContext(ctx context.Context) *CustomTemplateCreateFileParams {
	return &CustomTemplateCreateFileParams{
		Context: ctx,
	}
}

// NewCustomTemplateCreateFileParamsWithHTTPClient creates a new CustomTemplateCreateFileParams object
// with the ability to set a custom HTTPClient for a request.
func NewCustomTemplateCreateFileParamsWithHTTPClient(client *http.Client) *CustomTemplateCreateFileParams {
	return &CustomTemplateCreateFileParams{
		HTTPClient: client,
	}
}

/*
CustomTemplateCreateFileParams contains all the parameters to send to the API endpoint

	for the custom template create file operation.

	Typically these are written to a http.Request.
*/
type CustomTemplateCreateFileParams struct {

	/* Description.

	   Description of the template
	*/
	Description string

	/* File.

	   File
	*/
	File runtime.NamedReadCloser

	/* Logo.

	   URL of the template's logo
	*/
	Logo *string

	/* Note.

	   A note that will be displayed in the UI. Supports HTML content
	*/
	Note string

	/* Platform.

	   Platform associated to the template (1 - 'linux', 2 - 'windows')
	*/
	Platform int64

	/* Title.

	   Title of the template
	*/
	Title string

	/* Type.

	   Type of created stack (1 - swarm, 2 - compose, 3 - kubernetes)
	*/
	Type int64

	/* Variables.

	   A json array of variables definitions
	*/
	Variables *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the custom template create file params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CustomTemplateCreateFileParams) WithDefaults() *CustomTemplateCreateFileParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the custom template create file params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CustomTemplateCreateFileParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the custom template create file params
func (o *CustomTemplateCreateFileParams) WithTimeout(timeout time.Duration) *CustomTemplateCreateFileParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the custom template create file params
func (o *CustomTemplateCreateFileParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the custom template create file params
func (o *CustomTemplateCreateFileParams) WithContext(ctx context.Context) *CustomTemplateCreateFileParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the custom template create file params
func (o *CustomTemplateCreateFileParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the custom template create file params
func (o *CustomTemplateCreateFileParams) WithHTTPClient(client *http.Client) *CustomTemplateCreateFileParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the custom template create file params
func (o *CustomTemplateCreateFileParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDescription adds the description to the custom template create file params
func (o *CustomTemplateCreateFileParams) WithDescription(description string) *CustomTemplateCreateFileParams {
	o.SetDescription(description)
	return o
}

// SetDescription adds the description to the custom template create file params
func (o *CustomTemplateCreateFileParams) SetDescription(description string) {
	o.Description = description
}

// WithFile adds the file to the custom template create file params
func (o *CustomTemplateCreateFileParams) WithFile(file runtime.NamedReadCloser) *CustomTemplateCreateFileParams {
	o.SetFile(file)
	return o
}

// SetFile adds the file to the custom template create file params
func (o *CustomTemplateCreateFileParams) SetFile(file runtime.NamedReadCloser) {
	o.File = file
}

// WithLogo adds the logo to the custom template create file params
func (o *CustomTemplateCreateFileParams) WithLogo(logo *string) *CustomTemplateCreateFileParams {
	o.SetLogo(logo)
	return o
}

// SetLogo adds the logo to the custom template create file params
func (o *CustomTemplateCreateFileParams) SetLogo(logo *string) {
	o.Logo = logo
}

// WithNote adds the note to the custom template create file params
func (o *CustomTemplateCreateFileParams) WithNote(note string) *CustomTemplateCreateFileParams {
	o.SetNote(note)
	return o
}

// SetNote adds the note to the custom template create file params
func (o *CustomTemplateCreateFileParams) SetNote(note string) {
	o.Note = note
}

// WithPlatform adds the platform to the custom template create file params
func (o *CustomTemplateCreateFileParams) WithPlatform(platform int64) *CustomTemplateCreateFileParams {
	o.SetPlatform(platform)
	return o
}

// SetPlatform adds the platform to the custom template create file params
func (o *CustomTemplateCreateFileParams) SetPlatform(platform int64) {
	o.Platform = platform
}

// WithTitle adds the title to the custom template create file params
func (o *CustomTemplateCreateFileParams) WithTitle(title string) *CustomTemplateCreateFileParams {
	o.SetTitle(title)
	return o
}

// SetTitle adds the title to the custom template create file params
func (o *CustomTemplateCreateFileParams) SetTitle(title string) {
	o.Title = title
}

// WithType adds the typeVar to the custom template create file params
func (o *CustomTemplateCreateFileParams) WithType(typeVar int64) *CustomTemplateCreateFileParams {
	o.SetType(typeVar)
	return o
}

// SetType adds the type to the custom template create file params
func (o *CustomTemplateCreateFileParams) SetType(typeVar int64) {
	o.Type = typeVar
}

// WithVariables adds the variables to the custom template create file params
func (o *CustomTemplateCreateFileParams) WithVariables(variables *string) *CustomTemplateCreateFileParams {
	o.SetVariables(variables)
	return o
}

// SetVariables adds the variables to the custom template create file params
func (o *CustomTemplateCreateFileParams) SetVariables(variables *string) {
	o.Variables = variables
}

// WriteToRequest writes these params to a swagger request
func (o *CustomTemplateCreateFileParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// form param Description
	frDescription := o.Description
	fDescription := frDescription
	if fDescription != "" {
		if err := r.SetFormParam("Description", fDescription); err != nil {
			return err
		}
	}
	// form file param File
	if err := r.SetFileParam("File", o.File); err != nil {
		return err
	}

	if o.Logo != nil {

		// form param Logo
		var frLogo string
		if o.Logo != nil {
			frLogo = *o.Logo
		}
		fLogo := frLogo
		if fLogo != "" {
			if err := r.SetFormParam("Logo", fLogo); err != nil {
				return err
			}
		}
	}

	// form param Note
	frNote := o.Note
	fNote := frNote
	if fNote != "" {
		if err := r.SetFormParam("Note", fNote); err != nil {
			return err
		}
	}

	// form param Platform
	frPlatform := o.Platform
	fPlatform := swag.FormatInt64(frPlatform)
	if fPlatform != "" {
		if err := r.SetFormParam("Platform", fPlatform); err != nil {
			return err
		}
	}

	// form param Title
	frTitle := o.Title
	fTitle := frTitle
	if fTitle != "" {
		if err := r.SetFormParam("Title", fTitle); err != nil {
			return err
		}
	}

	// form param Type
	frType := o.Type
	fType := swag.FormatInt64(frType)
	if fType != "" {
		if err := r.SetFormParam("Type", fType); err != nil {
			return err
		}
	}

	if o.Variables != nil {

		// form param Variables
		var frVariables string
		if o.Variables != nil {
			frVariables = *o.Variables
		}
		fVariables := frVariables
		if fVariables != "" {
			if err := r.SetFormParam("Variables", fVariables); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
