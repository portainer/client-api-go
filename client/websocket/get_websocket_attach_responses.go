// Code generated by go-swagger; DO NOT EDIT.

package websocket

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetWebsocketAttachReader is a Reader for the GetWebsocketAttach structure.
type GetWebsocketAttachReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWebsocketAttachReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetWebsocketAttachOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetWebsocketAttachBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetWebsocketAttachForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetWebsocketAttachNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetWebsocketAttachInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetWebsocketAttachOK creates a GetWebsocketAttachOK with default headers values
func NewGetWebsocketAttachOK() *GetWebsocketAttachOK {
	return &GetWebsocketAttachOK{}
}

/* GetWebsocketAttachOK describes a response with status code 200, with default header values.

GetWebsocketAttachOK get websocket attach o k
*/
type GetWebsocketAttachOK struct {
}

func (o *GetWebsocketAttachOK) Error() string {
	return fmt.Sprintf("[GET /websocket/attach][%d] getWebsocketAttachOK ", 200)
}

func (o *GetWebsocketAttachOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetWebsocketAttachBadRequest creates a GetWebsocketAttachBadRequest with default headers values
func NewGetWebsocketAttachBadRequest() *GetWebsocketAttachBadRequest {
	return &GetWebsocketAttachBadRequest{}
}

/* GetWebsocketAttachBadRequest describes a response with status code 400, with default header values.

GetWebsocketAttachBadRequest get websocket attach bad request
*/
type GetWebsocketAttachBadRequest struct {
}

func (o *GetWebsocketAttachBadRequest) Error() string {
	return fmt.Sprintf("[GET /websocket/attach][%d] getWebsocketAttachBadRequest ", 400)
}

func (o *GetWebsocketAttachBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetWebsocketAttachForbidden creates a GetWebsocketAttachForbidden with default headers values
func NewGetWebsocketAttachForbidden() *GetWebsocketAttachForbidden {
	return &GetWebsocketAttachForbidden{}
}

/* GetWebsocketAttachForbidden describes a response with status code 403, with default header values.

GetWebsocketAttachForbidden get websocket attach forbidden
*/
type GetWebsocketAttachForbidden struct {
}

func (o *GetWebsocketAttachForbidden) Error() string {
	return fmt.Sprintf("[GET /websocket/attach][%d] getWebsocketAttachForbidden ", 403)
}

func (o *GetWebsocketAttachForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetWebsocketAttachNotFound creates a GetWebsocketAttachNotFound with default headers values
func NewGetWebsocketAttachNotFound() *GetWebsocketAttachNotFound {
	return &GetWebsocketAttachNotFound{}
}

/* GetWebsocketAttachNotFound describes a response with status code 404, with default header values.

GetWebsocketAttachNotFound get websocket attach not found
*/
type GetWebsocketAttachNotFound struct {
}

func (o *GetWebsocketAttachNotFound) Error() string {
	return fmt.Sprintf("[GET /websocket/attach][%d] getWebsocketAttachNotFound ", 404)
}

func (o *GetWebsocketAttachNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetWebsocketAttachInternalServerError creates a GetWebsocketAttachInternalServerError with default headers values
func NewGetWebsocketAttachInternalServerError() *GetWebsocketAttachInternalServerError {
	return &GetWebsocketAttachInternalServerError{}
}

/* GetWebsocketAttachInternalServerError describes a response with status code 500, with default header values.

GetWebsocketAttachInternalServerError get websocket attach internal server error
*/
type GetWebsocketAttachInternalServerError struct {
}

func (o *GetWebsocketAttachInternalServerError) Error() string {
	return fmt.Sprintf("[GET /websocket/attach][%d] getWebsocketAttachInternalServerError ", 500)
}

func (o *GetWebsocketAttachInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
