// Code generated by go-swagger; DO NOT EDIT.

package endpoints

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/portainer/client-api-go/models"
)

// EndpointEdgeAsyncReader is a Reader for the EndpointEdgeAsync structure.
type EndpointEdgeAsyncReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EndpointEdgeAsyncReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewEndpointEdgeAsyncOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewEndpointEdgeAsyncBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewEndpointEdgeAsyncForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewEndpointEdgeAsyncNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewEndpointEdgeAsyncInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewEndpointEdgeAsyncOK creates a EndpointEdgeAsyncOK with default headers values
func NewEndpointEdgeAsyncOK() *EndpointEdgeAsyncOK {
	return &EndpointEdgeAsyncOK{}
}

/*
EndpointEdgeAsyncOK describes a response with status code 200, with default header values.

Success
*/
type EndpointEdgeAsyncOK struct {
	Payload *models.EndpointedgeEdgeAsyncResponse
}

// IsSuccess returns true when this endpoint edge async o k response has a 2xx status code
func (o *EndpointEdgeAsyncOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this endpoint edge async o k response has a 3xx status code
func (o *EndpointEdgeAsyncOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this endpoint edge async o k response has a 4xx status code
func (o *EndpointEdgeAsyncOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this endpoint edge async o k response has a 5xx status code
func (o *EndpointEdgeAsyncOK) IsServerError() bool {
	return false
}

// IsCode returns true when this endpoint edge async o k response a status code equal to that given
func (o *EndpointEdgeAsyncOK) IsCode(code int) bool {
	return code == 200
}

func (o *EndpointEdgeAsyncOK) Error() string {
	return fmt.Sprintf("[POST /endpoints/edge/async][%d] endpointEdgeAsyncOK  %+v", 200, o.Payload)
}

func (o *EndpointEdgeAsyncOK) String() string {
	return fmt.Sprintf("[POST /endpoints/edge/async][%d] endpointEdgeAsyncOK  %+v", 200, o.Payload)
}

func (o *EndpointEdgeAsyncOK) GetPayload() *models.EndpointedgeEdgeAsyncResponse {
	return o.Payload
}

func (o *EndpointEdgeAsyncOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EndpointedgeEdgeAsyncResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEndpointEdgeAsyncBadRequest creates a EndpointEdgeAsyncBadRequest with default headers values
func NewEndpointEdgeAsyncBadRequest() *EndpointEdgeAsyncBadRequest {
	return &EndpointEdgeAsyncBadRequest{}
}

/*
EndpointEdgeAsyncBadRequest describes a response with status code 400, with default header values.

Invalid request
*/
type EndpointEdgeAsyncBadRequest struct {
}

// IsSuccess returns true when this endpoint edge async bad request response has a 2xx status code
func (o *EndpointEdgeAsyncBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this endpoint edge async bad request response has a 3xx status code
func (o *EndpointEdgeAsyncBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this endpoint edge async bad request response has a 4xx status code
func (o *EndpointEdgeAsyncBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this endpoint edge async bad request response has a 5xx status code
func (o *EndpointEdgeAsyncBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this endpoint edge async bad request response a status code equal to that given
func (o *EndpointEdgeAsyncBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *EndpointEdgeAsyncBadRequest) Error() string {
	return fmt.Sprintf("[POST /endpoints/edge/async][%d] endpointEdgeAsyncBadRequest ", 400)
}

func (o *EndpointEdgeAsyncBadRequest) String() string {
	return fmt.Sprintf("[POST /endpoints/edge/async][%d] endpointEdgeAsyncBadRequest ", 400)
}

func (o *EndpointEdgeAsyncBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewEndpointEdgeAsyncForbidden creates a EndpointEdgeAsyncForbidden with default headers values
func NewEndpointEdgeAsyncForbidden() *EndpointEdgeAsyncForbidden {
	return &EndpointEdgeAsyncForbidden{}
}

/*
EndpointEdgeAsyncForbidden describes a response with status code 403, with default header values.

Permission denied to access environment(endpoint)
*/
type EndpointEdgeAsyncForbidden struct {
}

// IsSuccess returns true when this endpoint edge async forbidden response has a 2xx status code
func (o *EndpointEdgeAsyncForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this endpoint edge async forbidden response has a 3xx status code
func (o *EndpointEdgeAsyncForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this endpoint edge async forbidden response has a 4xx status code
func (o *EndpointEdgeAsyncForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this endpoint edge async forbidden response has a 5xx status code
func (o *EndpointEdgeAsyncForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this endpoint edge async forbidden response a status code equal to that given
func (o *EndpointEdgeAsyncForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *EndpointEdgeAsyncForbidden) Error() string {
	return fmt.Sprintf("[POST /endpoints/edge/async][%d] endpointEdgeAsyncForbidden ", 403)
}

func (o *EndpointEdgeAsyncForbidden) String() string {
	return fmt.Sprintf("[POST /endpoints/edge/async][%d] endpointEdgeAsyncForbidden ", 403)
}

func (o *EndpointEdgeAsyncForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewEndpointEdgeAsyncNotFound creates a EndpointEdgeAsyncNotFound with default headers values
func NewEndpointEdgeAsyncNotFound() *EndpointEdgeAsyncNotFound {
	return &EndpointEdgeAsyncNotFound{}
}

/*
EndpointEdgeAsyncNotFound describes a response with status code 404, with default header values.

Environment(Endpoint) not found
*/
type EndpointEdgeAsyncNotFound struct {
}

// IsSuccess returns true when this endpoint edge async not found response has a 2xx status code
func (o *EndpointEdgeAsyncNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this endpoint edge async not found response has a 3xx status code
func (o *EndpointEdgeAsyncNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this endpoint edge async not found response has a 4xx status code
func (o *EndpointEdgeAsyncNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this endpoint edge async not found response has a 5xx status code
func (o *EndpointEdgeAsyncNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this endpoint edge async not found response a status code equal to that given
func (o *EndpointEdgeAsyncNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *EndpointEdgeAsyncNotFound) Error() string {
	return fmt.Sprintf("[POST /endpoints/edge/async][%d] endpointEdgeAsyncNotFound ", 404)
}

func (o *EndpointEdgeAsyncNotFound) String() string {
	return fmt.Sprintf("[POST /endpoints/edge/async][%d] endpointEdgeAsyncNotFound ", 404)
}

func (o *EndpointEdgeAsyncNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewEndpointEdgeAsyncInternalServerError creates a EndpointEdgeAsyncInternalServerError with default headers values
func NewEndpointEdgeAsyncInternalServerError() *EndpointEdgeAsyncInternalServerError {
	return &EndpointEdgeAsyncInternalServerError{}
}

/*
EndpointEdgeAsyncInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type EndpointEdgeAsyncInternalServerError struct {
}

// IsSuccess returns true when this endpoint edge async internal server error response has a 2xx status code
func (o *EndpointEdgeAsyncInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this endpoint edge async internal server error response has a 3xx status code
func (o *EndpointEdgeAsyncInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this endpoint edge async internal server error response has a 4xx status code
func (o *EndpointEdgeAsyncInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this endpoint edge async internal server error response has a 5xx status code
func (o *EndpointEdgeAsyncInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this endpoint edge async internal server error response a status code equal to that given
func (o *EndpointEdgeAsyncInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *EndpointEdgeAsyncInternalServerError) Error() string {
	return fmt.Sprintf("[POST /endpoints/edge/async][%d] endpointEdgeAsyncInternalServerError ", 500)
}

func (o *EndpointEdgeAsyncInternalServerError) String() string {
	return fmt.Sprintf("[POST /endpoints/edge/async][%d] endpointEdgeAsyncInternalServerError ", 500)
}

func (o *EndpointEdgeAsyncInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
