// Code generated by go-swagger; DO NOT EDIT.

package endpoints

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewEndpointRegistryInspectParams creates a new EndpointRegistryInspectParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewEndpointRegistryInspectParams() *EndpointRegistryInspectParams {
	return &EndpointRegistryInspectParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewEndpointRegistryInspectParamsWithTimeout creates a new EndpointRegistryInspectParams object
// with the ability to set a timeout on a request.
func NewEndpointRegistryInspectParamsWithTimeout(timeout time.Duration) *EndpointRegistryInspectParams {
	return &EndpointRegistryInspectParams{
		timeout: timeout,
	}
}

// NewEndpointRegistryInspectParamsWithContext creates a new EndpointRegistryInspectParams object
// with the ability to set a context for a request.
func NewEndpointRegistryInspectParamsWithContext(ctx context.Context) *EndpointRegistryInspectParams {
	return &EndpointRegistryInspectParams{
		Context: ctx,
	}
}

// NewEndpointRegistryInspectParamsWithHTTPClient creates a new EndpointRegistryInspectParams object
// with the ability to set a custom HTTPClient for a request.
func NewEndpointRegistryInspectParamsWithHTTPClient(client *http.Client) *EndpointRegistryInspectParams {
	return &EndpointRegistryInspectParams{
		HTTPClient: client,
	}
}

/* EndpointRegistryInspectParams contains all the parameters to send to the API endpoint
   for the endpoint registry inspect operation.

   Typically these are written to a http.Request.
*/
type EndpointRegistryInspectParams struct {

	/* ID.

	   identifier
	*/
	ID int64

	/* RegistryID.

	   Registry identifier
	*/
	RegistryID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the endpoint registry inspect params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *EndpointRegistryInspectParams) WithDefaults() *EndpointRegistryInspectParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the endpoint registry inspect params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *EndpointRegistryInspectParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the endpoint registry inspect params
func (o *EndpointRegistryInspectParams) WithTimeout(timeout time.Duration) *EndpointRegistryInspectParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the endpoint registry inspect params
func (o *EndpointRegistryInspectParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the endpoint registry inspect params
func (o *EndpointRegistryInspectParams) WithContext(ctx context.Context) *EndpointRegistryInspectParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the endpoint registry inspect params
func (o *EndpointRegistryInspectParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the endpoint registry inspect params
func (o *EndpointRegistryInspectParams) WithHTTPClient(client *http.Client) *EndpointRegistryInspectParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the endpoint registry inspect params
func (o *EndpointRegistryInspectParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the endpoint registry inspect params
func (o *EndpointRegistryInspectParams) WithID(id int64) *EndpointRegistryInspectParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the endpoint registry inspect params
func (o *EndpointRegistryInspectParams) SetID(id int64) {
	o.ID = id
}

// WithRegistryID adds the registryID to the endpoint registry inspect params
func (o *EndpointRegistryInspectParams) WithRegistryID(registryID int64) *EndpointRegistryInspectParams {
	o.SetRegistryID(registryID)
	return o
}

// SetRegistryID adds the registryId to the endpoint registry inspect params
func (o *EndpointRegistryInspectParams) SetRegistryID(registryID int64) {
	o.RegistryID = registryID
}

// WriteToRequest writes these params to a swagger request
func (o *EndpointRegistryInspectParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", swag.FormatInt64(o.ID)); err != nil {
		return err
	}

	// path param registryId
	if err := r.SetPathParam("registryId", swag.FormatInt64(o.RegistryID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
