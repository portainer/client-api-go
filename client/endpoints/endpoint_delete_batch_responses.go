// Code generated by go-swagger; DO NOT EDIT.

package endpoints

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/portainer/client-api-go/v2/models"
)

// EndpointDeleteBatchReader is a Reader for the EndpointDeleteBatch structure.
type EndpointDeleteBatchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EndpointDeleteBatchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewEndpointDeleteBatchNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 207:
		result := NewEndpointDeleteBatchMultiStatus()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewEndpointDeleteBatchBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewEndpointDeleteBatchForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewEndpointDeleteBatchInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /endpoints] EndpointDeleteBatch", response, response.Code())
	}
}

// NewEndpointDeleteBatchNoContent creates a EndpointDeleteBatchNoContent with default headers values
func NewEndpointDeleteBatchNoContent() *EndpointDeleteBatchNoContent {
	return &EndpointDeleteBatchNoContent{}
}

/*
EndpointDeleteBatchNoContent describes a response with status code 204, with default header values.

Environment(s) successfully deleted.
*/
type EndpointDeleteBatchNoContent struct {
}

// IsSuccess returns true when this endpoint delete batch no content response has a 2xx status code
func (o *EndpointDeleteBatchNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this endpoint delete batch no content response has a 3xx status code
func (o *EndpointDeleteBatchNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this endpoint delete batch no content response has a 4xx status code
func (o *EndpointDeleteBatchNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this endpoint delete batch no content response has a 5xx status code
func (o *EndpointDeleteBatchNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this endpoint delete batch no content response a status code equal to that given
func (o *EndpointDeleteBatchNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the endpoint delete batch no content response
func (o *EndpointDeleteBatchNoContent) Code() int {
	return 204
}

func (o *EndpointDeleteBatchNoContent) Error() string {
	return fmt.Sprintf("[DELETE /endpoints][%d] endpointDeleteBatchNoContent", 204)
}

func (o *EndpointDeleteBatchNoContent) String() string {
	return fmt.Sprintf("[DELETE /endpoints][%d] endpointDeleteBatchNoContent", 204)
}

func (o *EndpointDeleteBatchNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewEndpointDeleteBatchMultiStatus creates a EndpointDeleteBatchMultiStatus with default headers values
func NewEndpointDeleteBatchMultiStatus() *EndpointDeleteBatchMultiStatus {
	return &EndpointDeleteBatchMultiStatus{}
}

/*
EndpointDeleteBatchMultiStatus describes a response with status code 207, with default header values.

Partial success. Some environments were deleted successfully, while others failed.
*/
type EndpointDeleteBatchMultiStatus struct {
	Payload *models.EndpointsEndpointDeleteBatchPartialResponse
}

// IsSuccess returns true when this endpoint delete batch multi status response has a 2xx status code
func (o *EndpointDeleteBatchMultiStatus) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this endpoint delete batch multi status response has a 3xx status code
func (o *EndpointDeleteBatchMultiStatus) IsRedirect() bool {
	return false
}

// IsClientError returns true when this endpoint delete batch multi status response has a 4xx status code
func (o *EndpointDeleteBatchMultiStatus) IsClientError() bool {
	return false
}

// IsServerError returns true when this endpoint delete batch multi status response has a 5xx status code
func (o *EndpointDeleteBatchMultiStatus) IsServerError() bool {
	return false
}

// IsCode returns true when this endpoint delete batch multi status response a status code equal to that given
func (o *EndpointDeleteBatchMultiStatus) IsCode(code int) bool {
	return code == 207
}

// Code gets the status code for the endpoint delete batch multi status response
func (o *EndpointDeleteBatchMultiStatus) Code() int {
	return 207
}

func (o *EndpointDeleteBatchMultiStatus) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /endpoints][%d] endpointDeleteBatchMultiStatus %s", 207, payload)
}

func (o *EndpointDeleteBatchMultiStatus) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /endpoints][%d] endpointDeleteBatchMultiStatus %s", 207, payload)
}

func (o *EndpointDeleteBatchMultiStatus) GetPayload() *models.EndpointsEndpointDeleteBatchPartialResponse {
	return o.Payload
}

func (o *EndpointDeleteBatchMultiStatus) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EndpointsEndpointDeleteBatchPartialResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEndpointDeleteBatchBadRequest creates a EndpointDeleteBatchBadRequest with default headers values
func NewEndpointDeleteBatchBadRequest() *EndpointDeleteBatchBadRequest {
	return &EndpointDeleteBatchBadRequest{}
}

/*
EndpointDeleteBatchBadRequest describes a response with status code 400, with default header values.

Invalid request payload, such as missing required fields or fields not meeting validation criteria.
*/
type EndpointDeleteBatchBadRequest struct {
}

// IsSuccess returns true when this endpoint delete batch bad request response has a 2xx status code
func (o *EndpointDeleteBatchBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this endpoint delete batch bad request response has a 3xx status code
func (o *EndpointDeleteBatchBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this endpoint delete batch bad request response has a 4xx status code
func (o *EndpointDeleteBatchBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this endpoint delete batch bad request response has a 5xx status code
func (o *EndpointDeleteBatchBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this endpoint delete batch bad request response a status code equal to that given
func (o *EndpointDeleteBatchBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the endpoint delete batch bad request response
func (o *EndpointDeleteBatchBadRequest) Code() int {
	return 400
}

func (o *EndpointDeleteBatchBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /endpoints][%d] endpointDeleteBatchBadRequest", 400)
}

func (o *EndpointDeleteBatchBadRequest) String() string {
	return fmt.Sprintf("[DELETE /endpoints][%d] endpointDeleteBatchBadRequest", 400)
}

func (o *EndpointDeleteBatchBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewEndpointDeleteBatchForbidden creates a EndpointDeleteBatchForbidden with default headers values
func NewEndpointDeleteBatchForbidden() *EndpointDeleteBatchForbidden {
	return &EndpointDeleteBatchForbidden{}
}

/*
EndpointDeleteBatchForbidden describes a response with status code 403, with default header values.

Unauthorized access or operation not allowed.
*/
type EndpointDeleteBatchForbidden struct {
}

// IsSuccess returns true when this endpoint delete batch forbidden response has a 2xx status code
func (o *EndpointDeleteBatchForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this endpoint delete batch forbidden response has a 3xx status code
func (o *EndpointDeleteBatchForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this endpoint delete batch forbidden response has a 4xx status code
func (o *EndpointDeleteBatchForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this endpoint delete batch forbidden response has a 5xx status code
func (o *EndpointDeleteBatchForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this endpoint delete batch forbidden response a status code equal to that given
func (o *EndpointDeleteBatchForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the endpoint delete batch forbidden response
func (o *EndpointDeleteBatchForbidden) Code() int {
	return 403
}

func (o *EndpointDeleteBatchForbidden) Error() string {
	return fmt.Sprintf("[DELETE /endpoints][%d] endpointDeleteBatchForbidden", 403)
}

func (o *EndpointDeleteBatchForbidden) String() string {
	return fmt.Sprintf("[DELETE /endpoints][%d] endpointDeleteBatchForbidden", 403)
}

func (o *EndpointDeleteBatchForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewEndpointDeleteBatchInternalServerError creates a EndpointDeleteBatchInternalServerError with default headers values
func NewEndpointDeleteBatchInternalServerError() *EndpointDeleteBatchInternalServerError {
	return &EndpointDeleteBatchInternalServerError{}
}

/*
EndpointDeleteBatchInternalServerError describes a response with status code 500, with default header values.

Server error occurred while attempting to delete the specified environments.
*/
type EndpointDeleteBatchInternalServerError struct {
}

// IsSuccess returns true when this endpoint delete batch internal server error response has a 2xx status code
func (o *EndpointDeleteBatchInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this endpoint delete batch internal server error response has a 3xx status code
func (o *EndpointDeleteBatchInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this endpoint delete batch internal server error response has a 4xx status code
func (o *EndpointDeleteBatchInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this endpoint delete batch internal server error response has a 5xx status code
func (o *EndpointDeleteBatchInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this endpoint delete batch internal server error response a status code equal to that given
func (o *EndpointDeleteBatchInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the endpoint delete batch internal server error response
func (o *EndpointDeleteBatchInternalServerError) Code() int {
	return 500
}

func (o *EndpointDeleteBatchInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /endpoints][%d] endpointDeleteBatchInternalServerError", 500)
}

func (o *EndpointDeleteBatchInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /endpoints][%d] endpointDeleteBatchInternalServerError", 500)
}

func (o *EndpointDeleteBatchInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
