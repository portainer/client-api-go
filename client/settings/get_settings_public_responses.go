// Code generated by go-swagger; DO NOT EDIT.

package settings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/portainer/client-api/models"
)

// GetSettingsPublicReader is a Reader for the GetSettingsPublic structure.
type GetSettingsPublicReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSettingsPublicReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSettingsPublicOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewGetSettingsPublicInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSettingsPublicOK creates a GetSettingsPublicOK with default headers values
func NewGetSettingsPublicOK() *GetSettingsPublicOK {
	return &GetSettingsPublicOK{}
}

/* GetSettingsPublicOK describes a response with status code 200, with default header values.

Success
*/
type GetSettingsPublicOK struct {
	Payload *models.SettingsPublicSettingsResponse
}

func (o *GetSettingsPublicOK) Error() string {
	return fmt.Sprintf("[GET /settings/public][%d] getSettingsPublicOK  %+v", 200, o.Payload)
}
func (o *GetSettingsPublicOK) GetPayload() *models.SettingsPublicSettingsResponse {
	return o.Payload
}

func (o *GetSettingsPublicOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SettingsPublicSettingsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSettingsPublicInternalServerError creates a GetSettingsPublicInternalServerError with default headers values
func NewGetSettingsPublicInternalServerError() *GetSettingsPublicInternalServerError {
	return &GetSettingsPublicInternalServerError{}
}

/* GetSettingsPublicInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetSettingsPublicInternalServerError struct {
}

func (o *GetSettingsPublicInternalServerError) Error() string {
	return fmt.Sprintf("[GET /settings/public][%d] getSettingsPublicInternalServerError ", 500)
}

func (o *GetSettingsPublicInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
