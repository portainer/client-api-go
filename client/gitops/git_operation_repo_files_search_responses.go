// Code generated by go-swagger; DO NOT EDIT.

package gitops

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GitOperationRepoFilesSearchReader is a Reader for the GitOperationRepoFilesSearch structure.
type GitOperationRepoFilesSearchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GitOperationRepoFilesSearchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGitOperationRepoFilesSearchOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGitOperationRepoFilesSearchBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGitOperationRepoFilesSearchInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /gitops/repo/files/search] GitOperationRepoFilesSearch", response, response.Code())
	}
}

// NewGitOperationRepoFilesSearchOK creates a GitOperationRepoFilesSearchOK with default headers values
func NewGitOperationRepoFilesSearchOK() *GitOperationRepoFilesSearchOK {
	return &GitOperationRepoFilesSearchOK{}
}

/*
GitOperationRepoFilesSearchOK describes a response with status code 200, with default header values.

Success
*/
type GitOperationRepoFilesSearchOK struct {
	Payload []string
}

// IsSuccess returns true when this git operation repo files search o k response has a 2xx status code
func (o *GitOperationRepoFilesSearchOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this git operation repo files search o k response has a 3xx status code
func (o *GitOperationRepoFilesSearchOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this git operation repo files search o k response has a 4xx status code
func (o *GitOperationRepoFilesSearchOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this git operation repo files search o k response has a 5xx status code
func (o *GitOperationRepoFilesSearchOK) IsServerError() bool {
	return false
}

// IsCode returns true when this git operation repo files search o k response a status code equal to that given
func (o *GitOperationRepoFilesSearchOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the git operation repo files search o k response
func (o *GitOperationRepoFilesSearchOK) Code() int {
	return 200
}

func (o *GitOperationRepoFilesSearchOK) Error() string {
	return fmt.Sprintf("[POST /gitops/repo/files/search][%d] gitOperationRepoFilesSearchOK  %+v", 200, o.Payload)
}

func (o *GitOperationRepoFilesSearchOK) String() string {
	return fmt.Sprintf("[POST /gitops/repo/files/search][%d] gitOperationRepoFilesSearchOK  %+v", 200, o.Payload)
}

func (o *GitOperationRepoFilesSearchOK) GetPayload() []string {
	return o.Payload
}

func (o *GitOperationRepoFilesSearchOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGitOperationRepoFilesSearchBadRequest creates a GitOperationRepoFilesSearchBadRequest with default headers values
func NewGitOperationRepoFilesSearchBadRequest() *GitOperationRepoFilesSearchBadRequest {
	return &GitOperationRepoFilesSearchBadRequest{}
}

/*
GitOperationRepoFilesSearchBadRequest describes a response with status code 400, with default header values.

Invalid request
*/
type GitOperationRepoFilesSearchBadRequest struct {
}

// IsSuccess returns true when this git operation repo files search bad request response has a 2xx status code
func (o *GitOperationRepoFilesSearchBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this git operation repo files search bad request response has a 3xx status code
func (o *GitOperationRepoFilesSearchBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this git operation repo files search bad request response has a 4xx status code
func (o *GitOperationRepoFilesSearchBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this git operation repo files search bad request response has a 5xx status code
func (o *GitOperationRepoFilesSearchBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this git operation repo files search bad request response a status code equal to that given
func (o *GitOperationRepoFilesSearchBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the git operation repo files search bad request response
func (o *GitOperationRepoFilesSearchBadRequest) Code() int {
	return 400
}

func (o *GitOperationRepoFilesSearchBadRequest) Error() string {
	return fmt.Sprintf("[POST /gitops/repo/files/search][%d] gitOperationRepoFilesSearchBadRequest ", 400)
}

func (o *GitOperationRepoFilesSearchBadRequest) String() string {
	return fmt.Sprintf("[POST /gitops/repo/files/search][%d] gitOperationRepoFilesSearchBadRequest ", 400)
}

func (o *GitOperationRepoFilesSearchBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGitOperationRepoFilesSearchInternalServerError creates a GitOperationRepoFilesSearchInternalServerError with default headers values
func NewGitOperationRepoFilesSearchInternalServerError() *GitOperationRepoFilesSearchInternalServerError {
	return &GitOperationRepoFilesSearchInternalServerError{}
}

/*
GitOperationRepoFilesSearchInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GitOperationRepoFilesSearchInternalServerError struct {
}

// IsSuccess returns true when this git operation repo files search internal server error response has a 2xx status code
func (o *GitOperationRepoFilesSearchInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this git operation repo files search internal server error response has a 3xx status code
func (o *GitOperationRepoFilesSearchInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this git operation repo files search internal server error response has a 4xx status code
func (o *GitOperationRepoFilesSearchInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this git operation repo files search internal server error response has a 5xx status code
func (o *GitOperationRepoFilesSearchInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this git operation repo files search internal server error response a status code equal to that given
func (o *GitOperationRepoFilesSearchInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the git operation repo files search internal server error response
func (o *GitOperationRepoFilesSearchInternalServerError) Code() int {
	return 500
}

func (o *GitOperationRepoFilesSearchInternalServerError) Error() string {
	return fmt.Sprintf("[POST /gitops/repo/files/search][%d] gitOperationRepoFilesSearchInternalServerError ", 500)
}

func (o *GitOperationRepoFilesSearchInternalServerError) String() string {
	return fmt.Sprintf("[POST /gitops/repo/files/search][%d] gitOperationRepoFilesSearchInternalServerError ", 500)
}

func (o *GitOperationRepoFilesSearchInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
