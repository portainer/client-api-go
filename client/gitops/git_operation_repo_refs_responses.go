// Code generated by go-swagger; DO NOT EDIT.

package gitops

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GitOperationRepoRefsReader is a Reader for the GitOperationRepoRefs structure.
type GitOperationRepoRefsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GitOperationRepoRefsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGitOperationRepoRefsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGitOperationRepoRefsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGitOperationRepoRefsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGitOperationRepoRefsOK creates a GitOperationRepoRefsOK with default headers values
func NewGitOperationRepoRefsOK() *GitOperationRepoRefsOK {
	return &GitOperationRepoRefsOK{}
}

/*
GitOperationRepoRefsOK describes a response with status code 200, with default header values.

Success
*/
type GitOperationRepoRefsOK struct {
	Payload []string
}

// IsSuccess returns true when this git operation repo refs o k response has a 2xx status code
func (o *GitOperationRepoRefsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this git operation repo refs o k response has a 3xx status code
func (o *GitOperationRepoRefsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this git operation repo refs o k response has a 4xx status code
func (o *GitOperationRepoRefsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this git operation repo refs o k response has a 5xx status code
func (o *GitOperationRepoRefsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this git operation repo refs o k response a status code equal to that given
func (o *GitOperationRepoRefsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GitOperationRepoRefsOK) Error() string {
	return fmt.Sprintf("[POST /gitops/repo/refs][%d] gitOperationRepoRefsOK  %+v", 200, o.Payload)
}

func (o *GitOperationRepoRefsOK) String() string {
	return fmt.Sprintf("[POST /gitops/repo/refs][%d] gitOperationRepoRefsOK  %+v", 200, o.Payload)
}

func (o *GitOperationRepoRefsOK) GetPayload() []string {
	return o.Payload
}

func (o *GitOperationRepoRefsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGitOperationRepoRefsBadRequest creates a GitOperationRepoRefsBadRequest with default headers values
func NewGitOperationRepoRefsBadRequest() *GitOperationRepoRefsBadRequest {
	return &GitOperationRepoRefsBadRequest{}
}

/*
GitOperationRepoRefsBadRequest describes a response with status code 400, with default header values.

Invalid request
*/
type GitOperationRepoRefsBadRequest struct {
}

// IsSuccess returns true when this git operation repo refs bad request response has a 2xx status code
func (o *GitOperationRepoRefsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this git operation repo refs bad request response has a 3xx status code
func (o *GitOperationRepoRefsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this git operation repo refs bad request response has a 4xx status code
func (o *GitOperationRepoRefsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this git operation repo refs bad request response has a 5xx status code
func (o *GitOperationRepoRefsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this git operation repo refs bad request response a status code equal to that given
func (o *GitOperationRepoRefsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GitOperationRepoRefsBadRequest) Error() string {
	return fmt.Sprintf("[POST /gitops/repo/refs][%d] gitOperationRepoRefsBadRequest ", 400)
}

func (o *GitOperationRepoRefsBadRequest) String() string {
	return fmt.Sprintf("[POST /gitops/repo/refs][%d] gitOperationRepoRefsBadRequest ", 400)
}

func (o *GitOperationRepoRefsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGitOperationRepoRefsInternalServerError creates a GitOperationRepoRefsInternalServerError with default headers values
func NewGitOperationRepoRefsInternalServerError() *GitOperationRepoRefsInternalServerError {
	return &GitOperationRepoRefsInternalServerError{}
}

/*
GitOperationRepoRefsInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GitOperationRepoRefsInternalServerError struct {
}

// IsSuccess returns true when this git operation repo refs internal server error response has a 2xx status code
func (o *GitOperationRepoRefsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this git operation repo refs internal server error response has a 3xx status code
func (o *GitOperationRepoRefsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this git operation repo refs internal server error response has a 4xx status code
func (o *GitOperationRepoRefsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this git operation repo refs internal server error response has a 5xx status code
func (o *GitOperationRepoRefsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this git operation repo refs internal server error response a status code equal to that given
func (o *GitOperationRepoRefsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GitOperationRepoRefsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /gitops/repo/refs][%d] gitOperationRepoRefsInternalServerError ", 500)
}

func (o *GitOperationRepoRefsInternalServerError) String() string {
	return fmt.Sprintf("[POST /gitops/repo/refs][%d] gitOperationRepoRefsInternalServerError ", 500)
}

func (o *GitOperationRepoRefsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
