// Code generated by go-swagger; DO NOT EDIT.

package backup

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateS3SettingsReader is a Reader for the UpdateS3Settings structure.
type UpdateS3SettingsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateS3SettingsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateS3SettingsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateS3SettingsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateS3SettingsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateS3SettingsOK creates a UpdateS3SettingsOK with default headers values
func NewUpdateS3SettingsOK() *UpdateS3SettingsOK {
	return &UpdateS3SettingsOK{}
}

/*
UpdateS3SettingsOK describes a response with status code 200, with default header values.

Success
*/
type UpdateS3SettingsOK struct {
}

// IsSuccess returns true when this update s3 settings o k response has a 2xx status code
func (o *UpdateS3SettingsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update s3 settings o k response has a 3xx status code
func (o *UpdateS3SettingsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update s3 settings o k response has a 4xx status code
func (o *UpdateS3SettingsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update s3 settings o k response has a 5xx status code
func (o *UpdateS3SettingsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update s3 settings o k response a status code equal to that given
func (o *UpdateS3SettingsOK) IsCode(code int) bool {
	return code == 200
}

func (o *UpdateS3SettingsOK) Error() string {
	return fmt.Sprintf("[POST /backup/s3/settings][%d] updateS3SettingsOK ", 200)
}

func (o *UpdateS3SettingsOK) String() string {
	return fmt.Sprintf("[POST /backup/s3/settings][%d] updateS3SettingsOK ", 200)
}

func (o *UpdateS3SettingsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateS3SettingsBadRequest creates a UpdateS3SettingsBadRequest with default headers values
func NewUpdateS3SettingsBadRequest() *UpdateS3SettingsBadRequest {
	return &UpdateS3SettingsBadRequest{}
}

/*
UpdateS3SettingsBadRequest describes a response with status code 400, with default header values.

Invalid request
*/
type UpdateS3SettingsBadRequest struct {
}

// IsSuccess returns true when this update s3 settings bad request response has a 2xx status code
func (o *UpdateS3SettingsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update s3 settings bad request response has a 3xx status code
func (o *UpdateS3SettingsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update s3 settings bad request response has a 4xx status code
func (o *UpdateS3SettingsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update s3 settings bad request response has a 5xx status code
func (o *UpdateS3SettingsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update s3 settings bad request response a status code equal to that given
func (o *UpdateS3SettingsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *UpdateS3SettingsBadRequest) Error() string {
	return fmt.Sprintf("[POST /backup/s3/settings][%d] updateS3SettingsBadRequest ", 400)
}

func (o *UpdateS3SettingsBadRequest) String() string {
	return fmt.Sprintf("[POST /backup/s3/settings][%d] updateS3SettingsBadRequest ", 400)
}

func (o *UpdateS3SettingsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateS3SettingsInternalServerError creates a UpdateS3SettingsInternalServerError with default headers values
func NewUpdateS3SettingsInternalServerError() *UpdateS3SettingsInternalServerError {
	return &UpdateS3SettingsInternalServerError{}
}

/*
UpdateS3SettingsInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type UpdateS3SettingsInternalServerError struct {
}

// IsSuccess returns true when this update s3 settings internal server error response has a 2xx status code
func (o *UpdateS3SettingsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update s3 settings internal server error response has a 3xx status code
func (o *UpdateS3SettingsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update s3 settings internal server error response has a 4xx status code
func (o *UpdateS3SettingsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update s3 settings internal server error response has a 5xx status code
func (o *UpdateS3SettingsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update s3 settings internal server error response a status code equal to that given
func (o *UpdateS3SettingsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *UpdateS3SettingsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /backup/s3/settings][%d] updateS3SettingsInternalServerError ", 500)
}

func (o *UpdateS3SettingsInternalServerError) String() string {
	return fmt.Sprintf("[POST /backup/s3/settings][%d] updateS3SettingsInternalServerError ", 500)
}

func (o *UpdateS3SettingsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
