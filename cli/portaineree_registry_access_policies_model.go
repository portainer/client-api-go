// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/portainer/client-api-go/v2/models"
	"github.com/spf13/cobra"
)

// Schema cli for PortainereeRegistryAccessPolicies

// register flags to command
func registerModelPortainereeRegistryAccessPoliciesFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerPortainereeRegistryAccessPoliciesNamespaces(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerPortainereeRegistryAccessPoliciesTeamAccessPolicies(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerPortainereeRegistryAccessPoliciesUserAccessPolicies(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerPortainereeRegistryAccessPoliciesNamespaces(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: Namespaces []string array type is not supported by go-swagger cli yet

	return nil
}

func registerPortainereeRegistryAccessPoliciesTeamAccessPolicies(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: TeamAccessPolicies PortainereeTeamAccessPolicies map type is not supported by go-swagger cli yet

	return nil
}

func registerPortainereeRegistryAccessPoliciesUserAccessPolicies(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: UserAccessPolicies PortainereeUserAccessPolicies map type is not supported by go-swagger cli yet

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelPortainereeRegistryAccessPoliciesFlags(depth int, m *models.PortainereeRegistryAccessPolicies, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, namespacesAdded := retrievePortainereeRegistryAccessPoliciesNamespacesFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || namespacesAdded

	err, teamAccessPoliciesAdded := retrievePortainereeRegistryAccessPoliciesTeamAccessPoliciesFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || teamAccessPoliciesAdded

	err, userAccessPoliciesAdded := retrievePortainereeRegistryAccessPoliciesUserAccessPoliciesFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || userAccessPoliciesAdded

	return nil, retAdded
}

func retrievePortainereeRegistryAccessPoliciesNamespacesFlags(depth int, m *models.PortainereeRegistryAccessPolicies, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	namespacesFlagName := fmt.Sprintf("%v.Namespaces", cmdPrefix)
	if cmd.Flags().Changed(namespacesFlagName) {
		// warning: Namespaces array type []string is not supported by go-swagger cli yet
	}

	return nil, retAdded
}

func retrievePortainereeRegistryAccessPoliciesTeamAccessPoliciesFlags(depth int, m *models.PortainereeRegistryAccessPolicies, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	teamAccessPoliciesFlagName := fmt.Sprintf("%v.TeamAccessPolicies", cmdPrefix)
	if cmd.Flags().Changed(teamAccessPoliciesFlagName) {
		// warning: TeamAccessPolicies map type PortainereeTeamAccessPolicies is not supported by go-swagger cli yet
	}

	return nil, retAdded
}

func retrievePortainereeRegistryAccessPoliciesUserAccessPoliciesFlags(depth int, m *models.PortainereeRegistryAccessPolicies, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	userAccessPoliciesFlagName := fmt.Sprintf("%v.UserAccessPolicies", cmdPrefix)
	if cmd.Flags().Changed(userAccessPoliciesFlagName) {
		// warning: UserAccessPolicies map type PortainereeUserAccessPolicies is not supported by go-swagger cli yet
	}

	return nil, retAdded
}
