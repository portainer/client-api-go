// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/portainer/client-api-go/v2/models"
	"github.com/spf13/cobra"
)

// Schema cli for PortainereeEdgeJobEndpointMeta

// register flags to command
func registerModelPortainereeEdgeJobEndpointMetaFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerPortainereeEdgeJobEndpointMetaCollectLogs(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerPortainereeEdgeJobEndpointMetaLogsStatus(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerPortainereeEdgeJobEndpointMetaCollectLogs(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	collectLogsDescription := ``

	var collectLogsFlagName string
	if cmdPrefix == "" {
		collectLogsFlagName = "collectLogs"
	} else {
		collectLogsFlagName = fmt.Sprintf("%v.collectLogs", cmdPrefix)
	}

	var collectLogsFlagDefault bool

	_ = cmd.PersistentFlags().Bool(collectLogsFlagName, collectLogsFlagDefault, collectLogsDescription)

	return nil
}

func registerPortainereeEdgeJobEndpointMetaLogsStatus(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	logsStatusDescription := ``

	var logsStatusFlagName string
	if cmdPrefix == "" {
		logsStatusFlagName = "logsStatus"
	} else {
		logsStatusFlagName = fmt.Sprintf("%v.logsStatus", cmdPrefix)
	}

	var logsStatusFlagDefault int64

	_ = cmd.PersistentFlags().Int64(logsStatusFlagName, logsStatusFlagDefault, logsStatusDescription)

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelPortainereeEdgeJobEndpointMetaFlags(depth int, m *models.PortainereeEdgeJobEndpointMeta, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, collectLogsAdded := retrievePortainereeEdgeJobEndpointMetaCollectLogsFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || collectLogsAdded

	err, logsStatusAdded := retrievePortainereeEdgeJobEndpointMetaLogsStatusFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || logsStatusAdded

	return nil, retAdded
}

func retrievePortainereeEdgeJobEndpointMetaCollectLogsFlags(depth int, m *models.PortainereeEdgeJobEndpointMeta, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	collectLogsFlagName := fmt.Sprintf("%v.collectLogs", cmdPrefix)
	if cmd.Flags().Changed(collectLogsFlagName) {

		var collectLogsFlagName string
		if cmdPrefix == "" {
			collectLogsFlagName = "collectLogs"
		} else {
			collectLogsFlagName = fmt.Sprintf("%v.collectLogs", cmdPrefix)
		}

		collectLogsFlagValue, err := cmd.Flags().GetBool(collectLogsFlagName)
		if err != nil {
			return err, false
		}
		m.CollectLogs = &collectLogsFlagValue

		retAdded = true
	}

	return nil, retAdded
}

func retrievePortainereeEdgeJobEndpointMetaLogsStatusFlags(depth int, m *models.PortainereeEdgeJobEndpointMeta, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	logsStatusFlagName := fmt.Sprintf("%v.logsStatus", cmdPrefix)
	if cmd.Flags().Changed(logsStatusFlagName) {

		var logsStatusFlagName string
		if cmdPrefix == "" {
			logsStatusFlagName = "logsStatus"
		} else {
			logsStatusFlagName = fmt.Sprintf("%v.logsStatus", cmdPrefix)
		}

		logsStatusFlagValue, err := cmd.Flags().GetInt64(logsStatusFlagName)
		if err != nil {
			return err, false
		}
		m.LogsStatus = logsStatusFlagValue

		retAdded = true
	}

	return nil, retAdded
}
