// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/portainer/client-api-go/v2/models"
	"github.com/spf13/cobra"
)

// Schema cli for PortainereeEndpointChangeWindow

// register flags to command
func registerModelPortainereeEndpointChangeWindowFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerPortainereeEndpointChangeWindowEnabled(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerPortainereeEndpointChangeWindowEndTime(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerPortainereeEndpointChangeWindowStartTime(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerPortainereeEndpointChangeWindowEnabled(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	enabledDescription := ``

	var enabledFlagName string
	if cmdPrefix == "" {
		enabledFlagName = "Enabled"
	} else {
		enabledFlagName = fmt.Sprintf("%v.Enabled", cmdPrefix)
	}

	var enabledFlagDefault bool

	_ = cmd.PersistentFlags().Bool(enabledFlagName, enabledFlagDefault, enabledDescription)

	return nil
}

func registerPortainereeEndpointChangeWindowEndTime(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	endTimeDescription := ``

	var endTimeFlagName string
	if cmdPrefix == "" {
		endTimeFlagName = "EndTime"
	} else {
		endTimeFlagName = fmt.Sprintf("%v.EndTime", cmdPrefix)
	}

	var endTimeFlagDefault string

	_ = cmd.PersistentFlags().String(endTimeFlagName, endTimeFlagDefault, endTimeDescription)

	return nil
}

func registerPortainereeEndpointChangeWindowStartTime(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	startTimeDescription := ``

	var startTimeFlagName string
	if cmdPrefix == "" {
		startTimeFlagName = "StartTime"
	} else {
		startTimeFlagName = fmt.Sprintf("%v.StartTime", cmdPrefix)
	}

	var startTimeFlagDefault string

	_ = cmd.PersistentFlags().String(startTimeFlagName, startTimeFlagDefault, startTimeDescription)

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelPortainereeEndpointChangeWindowFlags(depth int, m *models.PortainereeEndpointChangeWindow, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, enabledAdded := retrievePortainereeEndpointChangeWindowEnabledFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || enabledAdded

	err, endTimeAdded := retrievePortainereeEndpointChangeWindowEndTimeFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || endTimeAdded

	err, startTimeAdded := retrievePortainereeEndpointChangeWindowStartTimeFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || startTimeAdded

	return nil, retAdded
}

func retrievePortainereeEndpointChangeWindowEnabledFlags(depth int, m *models.PortainereeEndpointChangeWindow, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	enabledFlagName := fmt.Sprintf("%v.Enabled", cmdPrefix)
	if cmd.Flags().Changed(enabledFlagName) {

		var enabledFlagName string
		if cmdPrefix == "" {
			enabledFlagName = "Enabled"
		} else {
			enabledFlagName = fmt.Sprintf("%v.Enabled", cmdPrefix)
		}

		enabledFlagValue, err := cmd.Flags().GetBool(enabledFlagName)
		if err != nil {
			return err, false
		}
		m.Enabled = &enabledFlagValue

		retAdded = true
	}

	return nil, retAdded
}

func retrievePortainereeEndpointChangeWindowEndTimeFlags(depth int, m *models.PortainereeEndpointChangeWindow, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	endTimeFlagName := fmt.Sprintf("%v.EndTime", cmdPrefix)
	if cmd.Flags().Changed(endTimeFlagName) {

		var endTimeFlagName string
		if cmdPrefix == "" {
			endTimeFlagName = "EndTime"
		} else {
			endTimeFlagName = fmt.Sprintf("%v.EndTime", cmdPrefix)
		}

		endTimeFlagValue, err := cmd.Flags().GetString(endTimeFlagName)
		if err != nil {
			return err, false
		}
		m.EndTime = endTimeFlagValue

		retAdded = true
	}

	return nil, retAdded
}

func retrievePortainereeEndpointChangeWindowStartTimeFlags(depth int, m *models.PortainereeEndpointChangeWindow, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	startTimeFlagName := fmt.Sprintf("%v.StartTime", cmdPrefix)
	if cmd.Flags().Changed(startTimeFlagName) {

		var startTimeFlagName string
		if cmdPrefix == "" {
			startTimeFlagName = "StartTime"
		} else {
			startTimeFlagName = fmt.Sprintf("%v.StartTime", cmdPrefix)
		}

		startTimeFlagValue, err := cmd.Flags().GetString(startTimeFlagName)
		if err != nil {
			return err, false
		}
		m.StartTime = startTimeFlagValue

		retAdded = true
	}

	return nil, retAdded
}
