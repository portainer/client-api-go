// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/portainer/client-api-go/v2/models"
	"github.com/spf13/cobra"
)

// Schema cli for LicensesDeletePayload

// register flags to command
func registerModelLicensesDeletePayloadFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerLicensesDeletePayloadLicenseKeys(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerLicensesDeletePayloadLicenseKeys(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: licenseKeys []string array type is not supported by go-swagger cli yet

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelLicensesDeletePayloadFlags(depth int, m *models.LicensesDeletePayload, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, licenseKeysAdded := retrieveLicensesDeletePayloadLicenseKeysFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || licenseKeysAdded

	return nil, retAdded
}

func retrieveLicensesDeletePayloadLicenseKeysFlags(depth int, m *models.LicensesDeletePayload, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	licenseKeysFlagName := fmt.Sprintf("%v.licenseKeys", cmdPrefix)
	if cmd.Flags().Changed(licenseKeysFlagName) {
		// warning: licenseKeys array type []string is not supported by go-swagger cli yet
	}

	return nil, retAdded
}
