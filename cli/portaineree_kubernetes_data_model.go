// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/swag"
	"github.com/portainer/client-api-go/v2/models"

	"github.com/spf13/cobra"
)

// Schema cli for PortainereeKubernetesData

// register flags to command
func registerModelPortainereeKubernetesDataFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerPortainereeKubernetesDataConfiguration(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerPortainereeKubernetesDataFlags(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerPortainereeKubernetesDataSnapshots(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerPortainereeKubernetesDataConfiguration(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	var configurationFlagName string
	if cmdPrefix == "" {
		configurationFlagName = "Configuration"
	} else {
		configurationFlagName = fmt.Sprintf("%v.Configuration", cmdPrefix)
	}

	if err := registerModelPortainereeKubernetesConfigurationFlags(depth+1, configurationFlagName, cmd); err != nil {
		return err
	}

	return nil
}

func registerPortainereeKubernetesDataFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	var flagsFlagName string
	if cmdPrefix == "" {
		flagsFlagName = "Flags"
	} else {
		flagsFlagName = fmt.Sprintf("%v.Flags", cmdPrefix)
	}

	if err := registerModelPortainereeKubernetesFlagsFlags(depth+1, flagsFlagName, cmd); err != nil {
		return err
	}

	return nil
}

func registerPortainereeKubernetesDataSnapshots(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: Snapshots []*PortainereeKubernetesSnapshot array type is not supported by go-swagger cli yet

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelPortainereeKubernetesDataFlags(depth int, m *models.PortainereeKubernetesData, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, configurationAdded := retrievePortainereeKubernetesDataConfigurationFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || configurationAdded

	err, flagsAdded := retrievePortainereeKubernetesDataFlagsFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || flagsAdded

	err, snapshotsAdded := retrievePortainereeKubernetesDataSnapshotsFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || snapshotsAdded

	return nil, retAdded
}

func retrievePortainereeKubernetesDataConfigurationFlags(depth int, m *models.PortainereeKubernetesData, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	configurationFlagName := fmt.Sprintf("%v.Configuration", cmdPrefix)
	if cmd.Flags().Changed(configurationFlagName) {
		// info: complex object Configuration PortainereeKubernetesConfiguration is retrieved outside this Changed() block
	}
	configurationFlagValue := m.Configuration
	if swag.IsZero(configurationFlagValue) {
		configurationFlagValue = &models.PortainereeKubernetesConfiguration{}
	}

	err, configurationAdded := retrieveModelPortainereeKubernetesConfigurationFlags(depth+1, configurationFlagValue, configurationFlagName, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || configurationAdded
	if configurationAdded {
		m.Configuration = configurationFlagValue
	}

	return nil, retAdded
}

func retrievePortainereeKubernetesDataFlagsFlags(depth int, m *models.PortainereeKubernetesData, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	flagsFlagName := fmt.Sprintf("%v.Flags", cmdPrefix)
	if cmd.Flags().Changed(flagsFlagName) {
		// info: complex object Flags PortainereeKubernetesFlags is retrieved outside this Changed() block
	}
	flagsFlagValue := m.Flags
	if swag.IsZero(flagsFlagValue) {
		flagsFlagValue = &models.PortainereeKubernetesFlags{}
	}

	err, flagsAdded := retrieveModelPortainereeKubernetesFlagsFlags(depth+1, flagsFlagValue, flagsFlagName, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || flagsAdded
	if flagsAdded {
		m.Flags = flagsFlagValue
	}

	return nil, retAdded
}

func retrievePortainereeKubernetesDataSnapshotsFlags(depth int, m *models.PortainereeKubernetesData, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	snapshotsFlagName := fmt.Sprintf("%v.Snapshots", cmdPrefix)
	if cmd.Flags().Changed(snapshotsFlagName) {
		// warning: Snapshots array type []*PortainereeKubernetesSnapshot is not supported by go-swagger cli yet
	}

	return nil, retAdded
}
