// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/swag"
	"github.com/portainer/client-api-go/v2/models"

	"github.com/spf13/cobra"
)

// Schema cli for LdapAdminGroupsPayload

// register flags to command
func registerModelLdapAdminGroupsPayloadFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerLdapAdminGroupsPayloadLdapsettings(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerLdapAdminGroupsPayloadLdapsettings(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	var ldapsettingsFlagName string
	if cmdPrefix == "" {
		ldapsettingsFlagName = "ldapsettings"
	} else {
		ldapsettingsFlagName = fmt.Sprintf("%v.ldapsettings", cmdPrefix)
	}

	if err := registerModelPortainereeLDAPSettingsFlags(depth+1, ldapsettingsFlagName, cmd); err != nil {
		return err
	}

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelLdapAdminGroupsPayloadFlags(depth int, m *models.LdapAdminGroupsPayload, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, ldapsettingsAdded := retrieveLdapAdminGroupsPayloadLdapsettingsFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || ldapsettingsAdded

	return nil, retAdded
}

func retrieveLdapAdminGroupsPayloadLdapsettingsFlags(depth int, m *models.LdapAdminGroupsPayload, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	ldapsettingsFlagName := fmt.Sprintf("%v.ldapsettings", cmdPrefix)
	if cmd.Flags().Changed(ldapsettingsFlagName) {
		// info: complex object ldapsettings PortainereeLDAPSettings is retrieved outside this Changed() block
	}
	ldapsettingsFlagValue := m.Ldapsettings
	if swag.IsZero(ldapsettingsFlagValue) {
		ldapsettingsFlagValue = &models.PortainereeLDAPSettings{}
	}

	err, ldapsettingsAdded := retrieveModelPortainereeLDAPSettingsFlags(depth+1, ldapsettingsFlagValue, ldapsettingsFlagName, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || ldapsettingsAdded
	if ldapsettingsAdded {
		m.Ldapsettings = ldapsettingsFlagValue
	}

	return nil, retAdded
}
