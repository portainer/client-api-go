// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/portainer/client-api-go/v2/models"
	"github.com/spf13/cobra"
)

// Schema cli for PortainereeAPIKey

// register flags to command
func registerModelPortainereeAPIKeyFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerPortainereeAPIKeyDateCreated(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerPortainereeAPIKeyDescription(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerPortainereeAPIKeyDigest(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerPortainereeAPIKeyID(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerPortainereeAPIKeyLastUsed(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerPortainereeAPIKeyPrefix(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerPortainereeAPIKeyUserID(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerPortainereeAPIKeyDateCreated(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	dateCreatedDescription := `Unix timestamp (UTC) when the API key was created`

	var dateCreatedFlagName string
	if cmdPrefix == "" {
		dateCreatedFlagName = "dateCreated"
	} else {
		dateCreatedFlagName = fmt.Sprintf("%v.dateCreated", cmdPrefix)
	}

	var dateCreatedFlagDefault int64

	_ = cmd.PersistentFlags().Int64(dateCreatedFlagName, dateCreatedFlagDefault, dateCreatedDescription)

	return nil
}

func registerPortainereeAPIKeyDescription(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	descriptionDescription := ``

	var descriptionFlagName string
	if cmdPrefix == "" {
		descriptionFlagName = "description"
	} else {
		descriptionFlagName = fmt.Sprintf("%v.description", cmdPrefix)
	}

	var descriptionFlagDefault string

	_ = cmd.PersistentFlags().String(descriptionFlagName, descriptionFlagDefault, descriptionDescription)

	return nil
}

func registerPortainereeAPIKeyDigest(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: digest []int64 array type is not supported by go-swagger cli yet

	return nil
}

func registerPortainereeAPIKeyID(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	idDescription := ``

	var idFlagName string
	if cmdPrefix == "" {
		idFlagName = "id"
	} else {
		idFlagName = fmt.Sprintf("%v.id", cmdPrefix)
	}

	var idFlagDefault int64

	_ = cmd.PersistentFlags().Int64(idFlagName, idFlagDefault, idDescription)

	return nil
}

func registerPortainereeAPIKeyLastUsed(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	lastUsedDescription := `Unix timestamp (UTC) when the API key was last used`

	var lastUsedFlagName string
	if cmdPrefix == "" {
		lastUsedFlagName = "lastUsed"
	} else {
		lastUsedFlagName = fmt.Sprintf("%v.lastUsed", cmdPrefix)
	}

	var lastUsedFlagDefault int64

	_ = cmd.PersistentFlags().Int64(lastUsedFlagName, lastUsedFlagDefault, lastUsedDescription)

	return nil
}

func registerPortainereeAPIKeyPrefix(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	prefixDescription := `API key identifier (7 char prefix)`

	var prefixFlagName string
	if cmdPrefix == "" {
		prefixFlagName = "prefix"
	} else {
		prefixFlagName = fmt.Sprintf("%v.prefix", cmdPrefix)
	}

	var prefixFlagDefault string

	_ = cmd.PersistentFlags().String(prefixFlagName, prefixFlagDefault, prefixDescription)

	return nil
}

func registerPortainereeAPIKeyUserID(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	userIdDescription := `User Identifier`

	var userIdFlagName string
	if cmdPrefix == "" {
		userIdFlagName = "userId"
	} else {
		userIdFlagName = fmt.Sprintf("%v.userId", cmdPrefix)
	}

	var userIdFlagDefault int64

	_ = cmd.PersistentFlags().Int64(userIdFlagName, userIdFlagDefault, userIdDescription)

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelPortainereeAPIKeyFlags(depth int, m *models.PortainereeAPIKey, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, dateCreatedAdded := retrievePortainereeAPIKeyDateCreatedFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || dateCreatedAdded

	err, descriptionAdded := retrievePortainereeAPIKeyDescriptionFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || descriptionAdded

	err, digestAdded := retrievePortainereeAPIKeyDigestFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || digestAdded

	err, idAdded := retrievePortainereeAPIKeyIDFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || idAdded

	err, lastUsedAdded := retrievePortainereeAPIKeyLastUsedFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || lastUsedAdded

	err, prefixAdded := retrievePortainereeAPIKeyPrefixFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || prefixAdded

	err, userIdAdded := retrievePortainereeAPIKeyUserIDFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || userIdAdded

	return nil, retAdded
}

func retrievePortainereeAPIKeyDateCreatedFlags(depth int, m *models.PortainereeAPIKey, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	dateCreatedFlagName := fmt.Sprintf("%v.dateCreated", cmdPrefix)
	if cmd.Flags().Changed(dateCreatedFlagName) {

		var dateCreatedFlagName string
		if cmdPrefix == "" {
			dateCreatedFlagName = "dateCreated"
		} else {
			dateCreatedFlagName = fmt.Sprintf("%v.dateCreated", cmdPrefix)
		}

		dateCreatedFlagValue, err := cmd.Flags().GetInt64(dateCreatedFlagName)
		if err != nil {
			return err, false
		}
		m.DateCreated = dateCreatedFlagValue

		retAdded = true
	}

	return nil, retAdded
}

func retrievePortainereeAPIKeyDescriptionFlags(depth int, m *models.PortainereeAPIKey, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	descriptionFlagName := fmt.Sprintf("%v.description", cmdPrefix)
	if cmd.Flags().Changed(descriptionFlagName) {

		var descriptionFlagName string
		if cmdPrefix == "" {
			descriptionFlagName = "description"
		} else {
			descriptionFlagName = fmt.Sprintf("%v.description", cmdPrefix)
		}

		descriptionFlagValue, err := cmd.Flags().GetString(descriptionFlagName)
		if err != nil {
			return err, false
		}
		m.Description = descriptionFlagValue

		retAdded = true
	}

	return nil, retAdded
}

func retrievePortainereeAPIKeyDigestFlags(depth int, m *models.PortainereeAPIKey, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	digestFlagName := fmt.Sprintf("%v.digest", cmdPrefix)
	if cmd.Flags().Changed(digestFlagName) {
		// warning: digest array type []int64 is not supported by go-swagger cli yet
	}

	return nil, retAdded
}

func retrievePortainereeAPIKeyIDFlags(depth int, m *models.PortainereeAPIKey, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	idFlagName := fmt.Sprintf("%v.id", cmdPrefix)
	if cmd.Flags().Changed(idFlagName) {

		var idFlagName string
		if cmdPrefix == "" {
			idFlagName = "id"
		} else {
			idFlagName = fmt.Sprintf("%v.id", cmdPrefix)
		}

		idFlagValue, err := cmd.Flags().GetInt64(idFlagName)
		if err != nil {
			return err, false
		}
		m.ID = idFlagValue

		retAdded = true
	}

	return nil, retAdded
}

func retrievePortainereeAPIKeyLastUsedFlags(depth int, m *models.PortainereeAPIKey, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	lastUsedFlagName := fmt.Sprintf("%v.lastUsed", cmdPrefix)
	if cmd.Flags().Changed(lastUsedFlagName) {

		var lastUsedFlagName string
		if cmdPrefix == "" {
			lastUsedFlagName = "lastUsed"
		} else {
			lastUsedFlagName = fmt.Sprintf("%v.lastUsed", cmdPrefix)
		}

		lastUsedFlagValue, err := cmd.Flags().GetInt64(lastUsedFlagName)
		if err != nil {
			return err, false
		}
		m.LastUsed = lastUsedFlagValue

		retAdded = true
	}

	return nil, retAdded
}

func retrievePortainereeAPIKeyPrefixFlags(depth int, m *models.PortainereeAPIKey, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	prefixFlagName := fmt.Sprintf("%v.prefix", cmdPrefix)
	if cmd.Flags().Changed(prefixFlagName) {

		var prefixFlagName string
		if cmdPrefix == "" {
			prefixFlagName = "prefix"
		} else {
			prefixFlagName = fmt.Sprintf("%v.prefix", cmdPrefix)
		}

		prefixFlagValue, err := cmd.Flags().GetString(prefixFlagName)
		if err != nil {
			return err, false
		}
		m.Prefix = prefixFlagValue

		retAdded = true
	}

	return nil, retAdded
}

func retrievePortainereeAPIKeyUserIDFlags(depth int, m *models.PortainereeAPIKey, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	userIdFlagName := fmt.Sprintf("%v.userId", cmdPrefix)
	if cmd.Flags().Changed(userIdFlagName) {

		var userIdFlagName string
		if cmdPrefix == "" {
			userIdFlagName = "userId"
		} else {
			userIdFlagName = fmt.Sprintf("%v.userId", cmdPrefix)
		}

		userIdFlagValue, err := cmd.Flags().GetInt64(userIdFlagName)
		if err != nil {
			return err, false
		}
		m.UserID = userIdFlagValue

		retAdded = true
	}

	return nil, retAdded
}
