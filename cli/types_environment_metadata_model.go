// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/portainer/client-api-go/v2/models"
	"github.com/spf13/cobra"
)

// Schema cli for TypesEnvironmentMetadata

// register flags to command
func registerModelTypesEnvironmentMetadataFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerTypesEnvironmentMetadataGroupID(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerTypesEnvironmentMetadataTagIds(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerTypesEnvironmentMetadataGroupID(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	groupIdDescription := `Environment(Endpoint) group identifier`

	var groupIdFlagName string
	if cmdPrefix == "" {
		groupIdFlagName = "groupId"
	} else {
		groupIdFlagName = fmt.Sprintf("%v.groupId", cmdPrefix)
	}

	var groupIdFlagDefault int64

	_ = cmd.PersistentFlags().Int64(groupIdFlagName, groupIdFlagDefault, groupIdDescription)

	return nil
}

func registerTypesEnvironmentMetadataTagIds(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: tagIds []int64 array type is not supported by go-swagger cli yet

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelTypesEnvironmentMetadataFlags(depth int, m *models.TypesEnvironmentMetadata, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, groupIdAdded := retrieveTypesEnvironmentMetadataGroupIDFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || groupIdAdded

	err, tagIdsAdded := retrieveTypesEnvironmentMetadataTagIdsFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || tagIdsAdded

	return nil, retAdded
}

func retrieveTypesEnvironmentMetadataGroupIDFlags(depth int, m *models.TypesEnvironmentMetadata, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	groupIdFlagName := fmt.Sprintf("%v.groupId", cmdPrefix)
	if cmd.Flags().Changed(groupIdFlagName) {

		var groupIdFlagName string
		if cmdPrefix == "" {
			groupIdFlagName = "groupId"
		} else {
			groupIdFlagName = fmt.Sprintf("%v.groupId", cmdPrefix)
		}

		groupIdFlagValue, err := cmd.Flags().GetInt64(groupIdFlagName)
		if err != nil {
			return err, false
		}
		m.GroupID = groupIdFlagValue

		retAdded = true
	}

	return nil, retAdded
}

func retrieveTypesEnvironmentMetadataTagIdsFlags(depth int, m *models.TypesEnvironmentMetadata, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	tagIdsFlagName := fmt.Sprintf("%v.tagIds", cmdPrefix)
	if cmd.Flags().Changed(tagIdsFlagName) {
		// warning: tagIds array type []int64 is not supported by go-swagger cli yet
	}

	return nil, retAdded
}
