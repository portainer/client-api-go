// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/portainer/client-api-go/v2/models"
	"github.com/spf13/cobra"
)

// Schema cli for PortainereeEdgeGroup

// register flags to command
func registerModelPortainereeEdgeGroupFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerPortainereeEdgeGroupDynamic(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerPortainereeEdgeGroupEndpoints(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerPortainereeEdgeGroupID(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerPortainereeEdgeGroupName(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerPortainereeEdgeGroupPartialMatch(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerPortainereeEdgeGroupTagIds(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerPortainereeEdgeGroupDynamic(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	dynamicDescription := ``

	var dynamicFlagName string
	if cmdPrefix == "" {
		dynamicFlagName = "Dynamic"
	} else {
		dynamicFlagName = fmt.Sprintf("%v.Dynamic", cmdPrefix)
	}

	var dynamicFlagDefault bool

	_ = cmd.PersistentFlags().Bool(dynamicFlagName, dynamicFlagDefault, dynamicDescription)

	return nil
}

func registerPortainereeEdgeGroupEndpoints(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: Endpoints []int64 array type is not supported by go-swagger cli yet

	return nil
}

func registerPortainereeEdgeGroupID(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	idDescription := `EdgeGroup Identifier`

	var idFlagName string
	if cmdPrefix == "" {
		idFlagName = "Id"
	} else {
		idFlagName = fmt.Sprintf("%v.Id", cmdPrefix)
	}

	var idFlagDefault int64

	_ = cmd.PersistentFlags().Int64(idFlagName, idFlagDefault, idDescription)

	return nil
}

func registerPortainereeEdgeGroupName(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	nameDescription := ``

	var nameFlagName string
	if cmdPrefix == "" {
		nameFlagName = "Name"
	} else {
		nameFlagName = fmt.Sprintf("%v.Name", cmdPrefix)
	}

	var nameFlagDefault string

	_ = cmd.PersistentFlags().String(nameFlagName, nameFlagDefault, nameDescription)

	return nil
}

func registerPortainereeEdgeGroupPartialMatch(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	partialMatchDescription := ``

	var partialMatchFlagName string
	if cmdPrefix == "" {
		partialMatchFlagName = "PartialMatch"
	} else {
		partialMatchFlagName = fmt.Sprintf("%v.PartialMatch", cmdPrefix)
	}

	var partialMatchFlagDefault bool

	_ = cmd.PersistentFlags().Bool(partialMatchFlagName, partialMatchFlagDefault, partialMatchDescription)

	return nil
}

func registerPortainereeEdgeGroupTagIds(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: TagIds []int64 array type is not supported by go-swagger cli yet

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelPortainereeEdgeGroupFlags(depth int, m *models.PortainereeEdgeGroup, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, dynamicAdded := retrievePortainereeEdgeGroupDynamicFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || dynamicAdded

	err, endpointsAdded := retrievePortainereeEdgeGroupEndpointsFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || endpointsAdded

	err, idAdded := retrievePortainereeEdgeGroupIDFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || idAdded

	err, nameAdded := retrievePortainereeEdgeGroupNameFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || nameAdded

	err, partialMatchAdded := retrievePortainereeEdgeGroupPartialMatchFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || partialMatchAdded

	err, tagIdsAdded := retrievePortainereeEdgeGroupTagIdsFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || tagIdsAdded

	return nil, retAdded
}

func retrievePortainereeEdgeGroupDynamicFlags(depth int, m *models.PortainereeEdgeGroup, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	dynamicFlagName := fmt.Sprintf("%v.Dynamic", cmdPrefix)
	if cmd.Flags().Changed(dynamicFlagName) {

		var dynamicFlagName string
		if cmdPrefix == "" {
			dynamicFlagName = "Dynamic"
		} else {
			dynamicFlagName = fmt.Sprintf("%v.Dynamic", cmdPrefix)
		}

		dynamicFlagValue, err := cmd.Flags().GetBool(dynamicFlagName)
		if err != nil {
			return err, false
		}
		m.Dynamic = &dynamicFlagValue

		retAdded = true
	}

	return nil, retAdded
}

func retrievePortainereeEdgeGroupEndpointsFlags(depth int, m *models.PortainereeEdgeGroup, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	endpointsFlagName := fmt.Sprintf("%v.Endpoints", cmdPrefix)
	if cmd.Flags().Changed(endpointsFlagName) {
		// warning: Endpoints array type []int64 is not supported by go-swagger cli yet
	}

	return nil, retAdded
}

func retrievePortainereeEdgeGroupIDFlags(depth int, m *models.PortainereeEdgeGroup, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	idFlagName := fmt.Sprintf("%v.Id", cmdPrefix)
	if cmd.Flags().Changed(idFlagName) {

		var idFlagName string
		if cmdPrefix == "" {
			idFlagName = "Id"
		} else {
			idFlagName = fmt.Sprintf("%v.Id", cmdPrefix)
		}

		idFlagValue, err := cmd.Flags().GetInt64(idFlagName)
		if err != nil {
			return err, false
		}
		m.ID = idFlagValue

		retAdded = true
	}

	return nil, retAdded
}

func retrievePortainereeEdgeGroupNameFlags(depth int, m *models.PortainereeEdgeGroup, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	nameFlagName := fmt.Sprintf("%v.Name", cmdPrefix)
	if cmd.Flags().Changed(nameFlagName) {

		var nameFlagName string
		if cmdPrefix == "" {
			nameFlagName = "Name"
		} else {
			nameFlagName = fmt.Sprintf("%v.Name", cmdPrefix)
		}

		nameFlagValue, err := cmd.Flags().GetString(nameFlagName)
		if err != nil {
			return err, false
		}
		m.Name = nameFlagValue

		retAdded = true
	}

	return nil, retAdded
}

func retrievePortainereeEdgeGroupPartialMatchFlags(depth int, m *models.PortainereeEdgeGroup, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	partialMatchFlagName := fmt.Sprintf("%v.PartialMatch", cmdPrefix)
	if cmd.Flags().Changed(partialMatchFlagName) {

		var partialMatchFlagName string
		if cmdPrefix == "" {
			partialMatchFlagName = "PartialMatch"
		} else {
			partialMatchFlagName = fmt.Sprintf("%v.PartialMatch", cmdPrefix)
		}

		partialMatchFlagValue, err := cmd.Flags().GetBool(partialMatchFlagName)
		if err != nil {
			return err, false
		}
		m.PartialMatch = &partialMatchFlagValue

		retAdded = true
	}

	return nil, retAdded
}

func retrievePortainereeEdgeGroupTagIdsFlags(depth int, m *models.PortainereeEdgeGroup, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	tagIdsFlagName := fmt.Sprintf("%v.TagIds", cmdPrefix)
	if cmd.Flags().Changed(tagIdsFlagName) {
		// warning: TagIds array type []int64 is not supported by go-swagger cli yet
	}

	return nil, retAdded
}
