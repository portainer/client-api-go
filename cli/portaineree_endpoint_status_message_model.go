// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/portainer/client-api-go/v2/models"
	"github.com/spf13/cobra"
)

// Schema cli for PortainereeEndpointStatusMessage

// register flags to command
func registerModelPortainereeEndpointStatusMessageFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerPortainereeEndpointStatusMessageDetail(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerPortainereeEndpointStatusMessageSummary(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerPortainereeEndpointStatusMessageDetail(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	detailDescription := ``

	var detailFlagName string
	if cmdPrefix == "" {
		detailFlagName = "Detail"
	} else {
		detailFlagName = fmt.Sprintf("%v.Detail", cmdPrefix)
	}

	var detailFlagDefault string

	_ = cmd.PersistentFlags().String(detailFlagName, detailFlagDefault, detailDescription)

	return nil
}

func registerPortainereeEndpointStatusMessageSummary(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	summaryDescription := ``

	var summaryFlagName string
	if cmdPrefix == "" {
		summaryFlagName = "Summary"
	} else {
		summaryFlagName = fmt.Sprintf("%v.Summary", cmdPrefix)
	}

	var summaryFlagDefault string

	_ = cmd.PersistentFlags().String(summaryFlagName, summaryFlagDefault, summaryDescription)

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelPortainereeEndpointStatusMessageFlags(depth int, m *models.PortainereeEndpointStatusMessage, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, detailAdded := retrievePortainereeEndpointStatusMessageDetailFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || detailAdded

	err, summaryAdded := retrievePortainereeEndpointStatusMessageSummaryFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || summaryAdded

	return nil, retAdded
}

func retrievePortainereeEndpointStatusMessageDetailFlags(depth int, m *models.PortainereeEndpointStatusMessage, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	detailFlagName := fmt.Sprintf("%v.Detail", cmdPrefix)
	if cmd.Flags().Changed(detailFlagName) {

		var detailFlagName string
		if cmdPrefix == "" {
			detailFlagName = "Detail"
		} else {
			detailFlagName = fmt.Sprintf("%v.Detail", cmdPrefix)
		}

		detailFlagValue, err := cmd.Flags().GetString(detailFlagName)
		if err != nil {
			return err, false
		}
		m.Detail = detailFlagValue

		retAdded = true
	}

	return nil, retAdded
}

func retrievePortainereeEndpointStatusMessageSummaryFlags(depth int, m *models.PortainereeEndpointStatusMessage, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	summaryFlagName := fmt.Sprintf("%v.Summary", cmdPrefix)
	if cmd.Flags().Changed(summaryFlagName) {

		var summaryFlagName string
		if cmdPrefix == "" {
			summaryFlagName = "Summary"
		} else {
			summaryFlagName = fmt.Sprintf("%v.Summary", cmdPrefix)
		}

		summaryFlagValue, err := cmd.Flags().GetString(summaryFlagName)
		if err != nil {
			return err, false
		}
		m.Summary = summaryFlagValue

		retAdded = true
	}

	return nil, retAdded
}
