// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/portainer/client-api-go/v2/models"
	"github.com/spf13/cobra"
)

// Schema cli for TemplatesListResponse

// register flags to command
func registerModelTemplatesListResponseFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerTemplatesListResponseTemplates(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerTemplatesListResponseVersion(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerTemplatesListResponseTemplates(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: templates []*PortainereeTemplate array type is not supported by go-swagger cli yet

	return nil
}

func registerTemplatesListResponseVersion(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	versionDescription := ``

	var versionFlagName string
	if cmdPrefix == "" {
		versionFlagName = "version"
	} else {
		versionFlagName = fmt.Sprintf("%v.version", cmdPrefix)
	}

	var versionFlagDefault string

	_ = cmd.PersistentFlags().String(versionFlagName, versionFlagDefault, versionDescription)

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelTemplatesListResponseFlags(depth int, m *models.TemplatesListResponse, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, templatesAdded := retrieveTemplatesListResponseTemplatesFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || templatesAdded

	err, versionAdded := retrieveTemplatesListResponseVersionFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || versionAdded

	return nil, retAdded
}

func retrieveTemplatesListResponseTemplatesFlags(depth int, m *models.TemplatesListResponse, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	templatesFlagName := fmt.Sprintf("%v.templates", cmdPrefix)
	if cmd.Flags().Changed(templatesFlagName) {
		// warning: templates array type []*PortainereeTemplate is not supported by go-swagger cli yet
	}

	return nil, retAdded
}

func retrieveTemplatesListResponseVersionFlags(depth int, m *models.TemplatesListResponse, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	versionFlagName := fmt.Sprintf("%v.version", cmdPrefix)
	if cmd.Flags().Changed(versionFlagName) {

		var versionFlagName string
		if cmdPrefix == "" {
			versionFlagName = "version"
		} else {
			versionFlagName = fmt.Sprintf("%v.version", cmdPrefix)
		}

		versionFlagValue, err := cmd.Flags().GetString(versionFlagName)
		if err != nil {
			return err, false
		}
		m.Version = versionFlagValue

		retAdded = true
	}

	return nil, retAdded
}
