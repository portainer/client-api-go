// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/portainer/client-api-go/v2/models"
	"github.com/spf13/cobra"
)

// Schema cli for PodsecurityPodSecuritySupplementalGroups

// register flags to command
func registerModelPodsecurityPodSecuritySupplementalGroupsFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerPodsecurityPodSecuritySupplementalGroupsIdrange(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerPodsecurityPodSecuritySupplementalGroupsType(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerPodsecurityPodSecuritySupplementalGroupsIdrange(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: idrange []*PodsecurityPodSecurityIdrange array type is not supported by go-swagger cli yet

	return nil
}

func registerPodsecurityPodSecuritySupplementalGroupsType(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	typeDescription := ``

	var typeFlagName string
	if cmdPrefix == "" {
		typeFlagName = "type"
	} else {
		typeFlagName = fmt.Sprintf("%v.type", cmdPrefix)
	}

	var typeFlagDefault string

	_ = cmd.PersistentFlags().String(typeFlagName, typeFlagDefault, typeDescription)

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelPodsecurityPodSecuritySupplementalGroupsFlags(depth int, m *models.PodsecurityPodSecuritySupplementalGroups, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, idrangeAdded := retrievePodsecurityPodSecuritySupplementalGroupsIdrangeFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || idrangeAdded

	err, typeAdded := retrievePodsecurityPodSecuritySupplementalGroupsTypeFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || typeAdded

	return nil, retAdded
}

func retrievePodsecurityPodSecuritySupplementalGroupsIdrangeFlags(depth int, m *models.PodsecurityPodSecuritySupplementalGroups, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	idrangeFlagName := fmt.Sprintf("%v.idrange", cmdPrefix)
	if cmd.Flags().Changed(idrangeFlagName) {
		// warning: idrange array type []*PodsecurityPodSecurityIdrange is not supported by go-swagger cli yet
	}

	return nil, retAdded
}

func retrievePodsecurityPodSecuritySupplementalGroupsTypeFlags(depth int, m *models.PodsecurityPodSecuritySupplementalGroups, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	typeFlagName := fmt.Sprintf("%v.type", cmdPrefix)
	if cmd.Flags().Changed(typeFlagName) {

		var typeFlagName string
		if cmdPrefix == "" {
			typeFlagName = "type"
		} else {
			typeFlagName = fmt.Sprintf("%v.type", cmdPrefix)
		}

		typeFlagValue, err := cmd.Flags().GetString(typeFlagName)
		if err != nil {
			return err, false
		}
		m.Type = typeFlagValue

		retAdded = true
	}

	return nil, retAdded
}
