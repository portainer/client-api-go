// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/portainer/client-api-go/v2/models"
	"github.com/spf13/cobra"
)

// Schema cli for HelmAddHelmRepoURLPayload

// register flags to command
func registerModelHelmAddHelmRepoURLPayloadFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerHelmAddHelmRepoURLPayloadURL(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerHelmAddHelmRepoURLPayloadURL(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	urlDescription := ``

	var urlFlagName string
	if cmdPrefix == "" {
		urlFlagName = "url"
	} else {
		urlFlagName = fmt.Sprintf("%v.url", cmdPrefix)
	}

	var urlFlagDefault string

	_ = cmd.PersistentFlags().String(urlFlagName, urlFlagDefault, urlDescription)

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelHelmAddHelmRepoURLPayloadFlags(depth int, m *models.HelmAddHelmRepoURLPayload, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, urlAdded := retrieveHelmAddHelmRepoURLPayloadURLFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || urlAdded

	return nil, retAdded
}

func retrieveHelmAddHelmRepoURLPayloadURLFlags(depth int, m *models.HelmAddHelmRepoURLPayload, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	urlFlagName := fmt.Sprintf("%v.url", cmdPrefix)
	if cmd.Flags().Changed(urlFlagName) {

		var urlFlagName string
		if cmdPrefix == "" {
			urlFlagName = "url"
		} else {
			urlFlagName = fmt.Sprintf("%v.url", cmdPrefix)
		}

		urlFlagValue, err := cmd.Flags().GetString(urlFlagName)
		if err != nil {
			return err, false
		}
		m.URL = urlFlagValue

		retAdded = true
	}

	return nil, retAdded
}
