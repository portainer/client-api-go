// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/portainer/client-api-go/v2/client/kubernetes"

	"github.com/spf13/cobra"
)

// makeOperationKubernetesUpdateK8sPodSecurityRuleCmd returns a cmd to handle operation updateK8sPodSecurityRule
func makeOperationKubernetesUpdateK8sPodSecurityRuleCmd() (*cobra.Command, error) {
	cmd := &cobra.Command{
		Use: "updateK8sPodSecurityRule",
		Short: `Update Pod Security Rule within k8s cluster
**Access policy**: authenticated`,
		RunE: runOperationKubernetesUpdateK8sPodSecurityRule,
	}

	if err := registerOperationKubernetesUpdateK8sPodSecurityRuleParamFlags(cmd); err != nil {
		return nil, err
	}

	return cmd, nil
}

// runOperationKubernetesUpdateK8sPodSecurityRule uses cmd flags to call endpoint api
func runOperationKubernetesUpdateK8sPodSecurityRule(cmd *cobra.Command, args []string) error {
	appCli, err := makeClient(cmd, args)
	if err != nil {
		return err
	}
	// retrieve flag values from cmd and fill params
	params := kubernetes.NewUpdateK8sPodSecurityRuleParams()
	if err, _ := retrieveOperationKubernetesUpdateK8sPodSecurityRuleIDFlag(params, "", cmd); err != nil {
		return err
	}
	if dryRun {

		logDebugf("dry-run flag specified. Skip sending request.")
		return nil
	}
	// make request and then print result
	msgStr, err := parseOperationKubernetesUpdateK8sPodSecurityRuleResult(appCli.Kubernetes.UpdateK8sPodSecurityRule(params, nil))
	if err != nil {
		return err
	}
	if !debug {

		fmt.Println(msgStr)
	}
	return nil
}

// registerOperationKubernetesUpdateK8sPodSecurityRuleParamFlags registers all flags needed to fill params
func registerOperationKubernetesUpdateK8sPodSecurityRuleParamFlags(cmd *cobra.Command) error {
	if err := registerOperationKubernetesUpdateK8sPodSecurityRuleIDParamFlags("", cmd); err != nil {
		return err
	}
	return nil
}

func registerOperationKubernetesUpdateK8sPodSecurityRuleIDParamFlags(cmdPrefix string, cmd *cobra.Command) error {

	idDescription := `Required. Environment(Endpoint) identifier`

	var idFlagName string
	if cmdPrefix == "" {
		idFlagName = "id"
	} else {
		idFlagName = fmt.Sprintf("%v.id", cmdPrefix)
	}

	var idFlagDefault int64

	_ = cmd.PersistentFlags().Int64(idFlagName, idFlagDefault, idDescription)

	return nil
}

func retrieveOperationKubernetesUpdateK8sPodSecurityRuleIDFlag(m *kubernetes.UpdateK8sPodSecurityRuleParams, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false
	if cmd.Flags().Changed("id") {

		var idFlagName string
		if cmdPrefix == "" {
			idFlagName = "id"
		} else {
			idFlagName = fmt.Sprintf("%v.id", cmdPrefix)
		}

		idFlagValue, err := cmd.Flags().GetInt64(idFlagName)
		if err != nil {
			return err, false
		}
		m.ID = idFlagValue

	}
	return nil, retAdded
}

// parseOperationKubernetesUpdateK8sPodSecurityRuleResult parses request result and return the string content
func parseOperationKubernetesUpdateK8sPodSecurityRuleResult(resp0 *kubernetes.UpdateK8sPodSecurityRuleOK, respErr error) (string, error) {
	if respErr != nil {

		// Non schema case: warning updateK8sPodSecurityRuleOK is not supported

		// Non schema case: warning updateK8sPodSecurityRuleBadRequest is not supported

		// Non schema case: warning updateK8sPodSecurityRuleNotFound is not supported

		// Non schema case: warning updateK8sPodSecurityRuleInternalServerError is not supported

		return "", respErr
	}

	// warning: non schema response updateK8sPodSecurityRuleOK is not supported by go-swagger cli yet.

	return "", nil
}
