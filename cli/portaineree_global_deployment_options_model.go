// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/portainer/client-api-go/v2/models"
	"github.com/spf13/cobra"
)

// Schema cli for PortainereeGlobalDeploymentOptions

// register flags to command
func registerModelPortainereeGlobalDeploymentOptionsFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerPortainereeGlobalDeploymentOptionsHideAddWithForm(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerPortainereeGlobalDeploymentOptionsHideFileUpload(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerPortainereeGlobalDeploymentOptionsHideWebEditor(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerPortainereeGlobalDeploymentOptionsPerEnvOverride(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerPortainereeGlobalDeploymentOptionsHideAddWithForm(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	hideAddWithFormDescription := `Hide manual deploy forms in portainer`

	var hideAddWithFormFlagName string
	if cmdPrefix == "" {
		hideAddWithFormFlagName = "hideAddWithForm"
	} else {
		hideAddWithFormFlagName = fmt.Sprintf("%v.hideAddWithForm", cmdPrefix)
	}

	var hideAddWithFormFlagDefault bool

	_ = cmd.PersistentFlags().Bool(hideAddWithFormFlagName, hideAddWithFormFlagDefault, hideAddWithFormDescription)

	return nil
}

func registerPortainereeGlobalDeploymentOptionsHideFileUpload(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	hideFileUploadDescription := `Hide the file upload option in the remaining visible forms`

	var hideFileUploadFlagName string
	if cmdPrefix == "" {
		hideFileUploadFlagName = "hideFileUpload"
	} else {
		hideFileUploadFlagName = fmt.Sprintf("%v.hideFileUpload", cmdPrefix)
	}

	var hideFileUploadFlagDefault bool

	_ = cmd.PersistentFlags().Bool(hideFileUploadFlagName, hideFileUploadFlagDefault, hideFileUploadDescription)

	return nil
}

func registerPortainereeGlobalDeploymentOptionsHideWebEditor(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	hideWebEditorDescription := `Hide the webeditor in the remaining visible forms`

	var hideWebEditorFlagName string
	if cmdPrefix == "" {
		hideWebEditorFlagName = "hideWebEditor"
	} else {
		hideWebEditorFlagName = fmt.Sprintf("%v.hideWebEditor", cmdPrefix)
	}

	var hideWebEditorFlagDefault bool

	_ = cmd.PersistentFlags().Bool(hideWebEditorFlagName, hideWebEditorFlagDefault, hideWebEditorDescription)

	return nil
}

func registerPortainereeGlobalDeploymentOptionsPerEnvOverride(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	perEnvOverrideDescription := `Configure this per environment or globally`

	var perEnvOverrideFlagName string
	if cmdPrefix == "" {
		perEnvOverrideFlagName = "perEnvOverride"
	} else {
		perEnvOverrideFlagName = fmt.Sprintf("%v.perEnvOverride", cmdPrefix)
	}

	var perEnvOverrideFlagDefault bool

	_ = cmd.PersistentFlags().Bool(perEnvOverrideFlagName, perEnvOverrideFlagDefault, perEnvOverrideDescription)

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelPortainereeGlobalDeploymentOptionsFlags(depth int, m *models.PortainereeGlobalDeploymentOptions, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, hideAddWithFormAdded := retrievePortainereeGlobalDeploymentOptionsHideAddWithFormFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || hideAddWithFormAdded

	err, hideFileUploadAdded := retrievePortainereeGlobalDeploymentOptionsHideFileUploadFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || hideFileUploadAdded

	err, hideWebEditorAdded := retrievePortainereeGlobalDeploymentOptionsHideWebEditorFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || hideWebEditorAdded

	err, perEnvOverrideAdded := retrievePortainereeGlobalDeploymentOptionsPerEnvOverrideFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || perEnvOverrideAdded

	return nil, retAdded
}

func retrievePortainereeGlobalDeploymentOptionsHideAddWithFormFlags(depth int, m *models.PortainereeGlobalDeploymentOptions, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	hideAddWithFormFlagName := fmt.Sprintf("%v.hideAddWithForm", cmdPrefix)
	if cmd.Flags().Changed(hideAddWithFormFlagName) {

		var hideAddWithFormFlagName string
		if cmdPrefix == "" {
			hideAddWithFormFlagName = "hideAddWithForm"
		} else {
			hideAddWithFormFlagName = fmt.Sprintf("%v.hideAddWithForm", cmdPrefix)
		}

		hideAddWithFormFlagValue, err := cmd.Flags().GetBool(hideAddWithFormFlagName)
		if err != nil {
			return err, false
		}
		m.HideAddWithForm = &hideAddWithFormFlagValue

		retAdded = true
	}

	return nil, retAdded
}

func retrievePortainereeGlobalDeploymentOptionsHideFileUploadFlags(depth int, m *models.PortainereeGlobalDeploymentOptions, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	hideFileUploadFlagName := fmt.Sprintf("%v.hideFileUpload", cmdPrefix)
	if cmd.Flags().Changed(hideFileUploadFlagName) {

		var hideFileUploadFlagName string
		if cmdPrefix == "" {
			hideFileUploadFlagName = "hideFileUpload"
		} else {
			hideFileUploadFlagName = fmt.Sprintf("%v.hideFileUpload", cmdPrefix)
		}

		hideFileUploadFlagValue, err := cmd.Flags().GetBool(hideFileUploadFlagName)
		if err != nil {
			return err, false
		}
		m.HideFileUpload = &hideFileUploadFlagValue

		retAdded = true
	}

	return nil, retAdded
}

func retrievePortainereeGlobalDeploymentOptionsHideWebEditorFlags(depth int, m *models.PortainereeGlobalDeploymentOptions, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	hideWebEditorFlagName := fmt.Sprintf("%v.hideWebEditor", cmdPrefix)
	if cmd.Flags().Changed(hideWebEditorFlagName) {

		var hideWebEditorFlagName string
		if cmdPrefix == "" {
			hideWebEditorFlagName = "hideWebEditor"
		} else {
			hideWebEditorFlagName = fmt.Sprintf("%v.hideWebEditor", cmdPrefix)
		}

		hideWebEditorFlagValue, err := cmd.Flags().GetBool(hideWebEditorFlagName)
		if err != nil {
			return err, false
		}
		m.HideWebEditor = &hideWebEditorFlagValue

		retAdded = true
	}

	return nil, retAdded
}

func retrievePortainereeGlobalDeploymentOptionsPerEnvOverrideFlags(depth int, m *models.PortainereeGlobalDeploymentOptions, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	perEnvOverrideFlagName := fmt.Sprintf("%v.perEnvOverride", cmdPrefix)
	if cmd.Flags().Changed(perEnvOverrideFlagName) {

		var perEnvOverrideFlagName string
		if cmdPrefix == "" {
			perEnvOverrideFlagName = "perEnvOverride"
		} else {
			perEnvOverrideFlagName = fmt.Sprintf("%v.perEnvOverride", cmdPrefix)
		}

		perEnvOverrideFlagValue, err := cmd.Flags().GetBool(perEnvOverrideFlagName)
		if err != nil {
			return err, false
		}
		m.PerEnvOverride = &perEnvOverrideFlagValue

		retAdded = true
	}

	return nil, retAdded
}
