// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/portainer/client-api-go/v2/models"
	"github.com/spf13/cobra"
)

// Schema cli for PortainereeCustomTemplateVariableDefinition

// register flags to command
func registerModelPortainereeCustomTemplateVariableDefinitionFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerPortainereeCustomTemplateVariableDefinitionDefaultValue(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerPortainereeCustomTemplateVariableDefinitionDescription(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerPortainereeCustomTemplateVariableDefinitionLabel(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerPortainereeCustomTemplateVariableDefinitionName(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerPortainereeCustomTemplateVariableDefinitionDefaultValue(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	defaultValueDescription := ``

	var defaultValueFlagName string
	if cmdPrefix == "" {
		defaultValueFlagName = "defaultValue"
	} else {
		defaultValueFlagName = fmt.Sprintf("%v.defaultValue", cmdPrefix)
	}

	var defaultValueFlagDefault string

	_ = cmd.PersistentFlags().String(defaultValueFlagName, defaultValueFlagDefault, defaultValueDescription)

	return nil
}

func registerPortainereeCustomTemplateVariableDefinitionDescription(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	descriptionDescription := ``

	var descriptionFlagName string
	if cmdPrefix == "" {
		descriptionFlagName = "description"
	} else {
		descriptionFlagName = fmt.Sprintf("%v.description", cmdPrefix)
	}

	var descriptionFlagDefault string

	_ = cmd.PersistentFlags().String(descriptionFlagName, descriptionFlagDefault, descriptionDescription)

	return nil
}

func registerPortainereeCustomTemplateVariableDefinitionLabel(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	labelDescription := ``

	var labelFlagName string
	if cmdPrefix == "" {
		labelFlagName = "label"
	} else {
		labelFlagName = fmt.Sprintf("%v.label", cmdPrefix)
	}

	var labelFlagDefault string

	_ = cmd.PersistentFlags().String(labelFlagName, labelFlagDefault, labelDescription)

	return nil
}

func registerPortainereeCustomTemplateVariableDefinitionName(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	nameDescription := ``

	var nameFlagName string
	if cmdPrefix == "" {
		nameFlagName = "name"
	} else {
		nameFlagName = fmt.Sprintf("%v.name", cmdPrefix)
	}

	var nameFlagDefault string

	_ = cmd.PersistentFlags().String(nameFlagName, nameFlagDefault, nameDescription)

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelPortainereeCustomTemplateVariableDefinitionFlags(depth int, m *models.PortainereeCustomTemplateVariableDefinition, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, defaultValueAdded := retrievePortainereeCustomTemplateVariableDefinitionDefaultValueFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || defaultValueAdded

	err, descriptionAdded := retrievePortainereeCustomTemplateVariableDefinitionDescriptionFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || descriptionAdded

	err, labelAdded := retrievePortainereeCustomTemplateVariableDefinitionLabelFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || labelAdded

	err, nameAdded := retrievePortainereeCustomTemplateVariableDefinitionNameFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || nameAdded

	return nil, retAdded
}

func retrievePortainereeCustomTemplateVariableDefinitionDefaultValueFlags(depth int, m *models.PortainereeCustomTemplateVariableDefinition, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	defaultValueFlagName := fmt.Sprintf("%v.defaultValue", cmdPrefix)
	if cmd.Flags().Changed(defaultValueFlagName) {

		var defaultValueFlagName string
		if cmdPrefix == "" {
			defaultValueFlagName = "defaultValue"
		} else {
			defaultValueFlagName = fmt.Sprintf("%v.defaultValue", cmdPrefix)
		}

		defaultValueFlagValue, err := cmd.Flags().GetString(defaultValueFlagName)
		if err != nil {
			return err, false
		}
		m.DefaultValue = defaultValueFlagValue

		retAdded = true
	}

	return nil, retAdded
}

func retrievePortainereeCustomTemplateVariableDefinitionDescriptionFlags(depth int, m *models.PortainereeCustomTemplateVariableDefinition, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	descriptionFlagName := fmt.Sprintf("%v.description", cmdPrefix)
	if cmd.Flags().Changed(descriptionFlagName) {

		var descriptionFlagName string
		if cmdPrefix == "" {
			descriptionFlagName = "description"
		} else {
			descriptionFlagName = fmt.Sprintf("%v.description", cmdPrefix)
		}

		descriptionFlagValue, err := cmd.Flags().GetString(descriptionFlagName)
		if err != nil {
			return err, false
		}
		m.Description = descriptionFlagValue

		retAdded = true
	}

	return nil, retAdded
}

func retrievePortainereeCustomTemplateVariableDefinitionLabelFlags(depth int, m *models.PortainereeCustomTemplateVariableDefinition, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	labelFlagName := fmt.Sprintf("%v.label", cmdPrefix)
	if cmd.Flags().Changed(labelFlagName) {

		var labelFlagName string
		if cmdPrefix == "" {
			labelFlagName = "label"
		} else {
			labelFlagName = fmt.Sprintf("%v.label", cmdPrefix)
		}

		labelFlagValue, err := cmd.Flags().GetString(labelFlagName)
		if err != nil {
			return err, false
		}
		m.Label = labelFlagValue

		retAdded = true
	}

	return nil, retAdded
}

func retrievePortainereeCustomTemplateVariableDefinitionNameFlags(depth int, m *models.PortainereeCustomTemplateVariableDefinition, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	nameFlagName := fmt.Sprintf("%v.name", cmdPrefix)
	if cmd.Flags().Changed(nameFlagName) {

		var nameFlagName string
		if cmdPrefix == "" {
			nameFlagName = "name"
		} else {
			nameFlagName = fmt.Sprintf("%v.name", cmdPrefix)
		}

		nameFlagValue, err := cmd.Flags().GetString(nameFlagName)
		if err != nil {
			return err, false
		}
		m.Name = nameFlagValue

		retAdded = true
	}

	return nil, retAdded
}
