// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/portainer/client-api-go/v2/models"
	"github.com/spf13/cobra"
)

// Schema cli for EndpointsRegistryAccessPayload

// register flags to command
func registerModelEndpointsRegistryAccessPayloadFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerEndpointsRegistryAccessPayloadNamespaces(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerEndpointsRegistryAccessPayloadTeamAccessPolicies(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerEndpointsRegistryAccessPayloadUserAccessPolicies(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerEndpointsRegistryAccessPayloadNamespaces(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: namespaces []string array type is not supported by go-swagger cli yet

	return nil
}

func registerEndpointsRegistryAccessPayloadTeamAccessPolicies(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: teamAccessPolicies PortainereeTeamAccessPolicies map type is not supported by go-swagger cli yet

	return nil
}

func registerEndpointsRegistryAccessPayloadUserAccessPolicies(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: userAccessPolicies PortainereeUserAccessPolicies map type is not supported by go-swagger cli yet

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelEndpointsRegistryAccessPayloadFlags(depth int, m *models.EndpointsRegistryAccessPayload, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, namespacesAdded := retrieveEndpointsRegistryAccessPayloadNamespacesFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || namespacesAdded

	err, teamAccessPoliciesAdded := retrieveEndpointsRegistryAccessPayloadTeamAccessPoliciesFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || teamAccessPoliciesAdded

	err, userAccessPoliciesAdded := retrieveEndpointsRegistryAccessPayloadUserAccessPoliciesFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || userAccessPoliciesAdded

	return nil, retAdded
}

func retrieveEndpointsRegistryAccessPayloadNamespacesFlags(depth int, m *models.EndpointsRegistryAccessPayload, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	namespacesFlagName := fmt.Sprintf("%v.namespaces", cmdPrefix)
	if cmd.Flags().Changed(namespacesFlagName) {
		// warning: namespaces array type []string is not supported by go-swagger cli yet
	}

	return nil, retAdded
}

func retrieveEndpointsRegistryAccessPayloadTeamAccessPoliciesFlags(depth int, m *models.EndpointsRegistryAccessPayload, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	teamAccessPoliciesFlagName := fmt.Sprintf("%v.teamAccessPolicies", cmdPrefix)
	if cmd.Flags().Changed(teamAccessPoliciesFlagName) {
		// warning: teamAccessPolicies map type PortainereeTeamAccessPolicies is not supported by go-swagger cli yet
	}

	return nil, retAdded
}

func retrieveEndpointsRegistryAccessPayloadUserAccessPoliciesFlags(depth int, m *models.EndpointsRegistryAccessPayload, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	userAccessPoliciesFlagName := fmt.Sprintf("%v.userAccessPolicies", cmdPrefix)
	if cmd.Flags().Changed(userAccessPoliciesFlagName) {
		// warning: userAccessPolicies map type PortainereeUserAccessPolicies is not supported by go-swagger cli yet
	}

	return nil, retAdded
}
