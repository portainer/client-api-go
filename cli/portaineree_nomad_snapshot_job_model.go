// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/portainer/client-api-go/v2/models"
	"github.com/spf13/cobra"
)

// Schema cli for PortainereeNomadSnapshotJob

// register flags to command
func registerModelPortainereeNomadSnapshotJobFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerPortainereeNomadSnapshotJobID(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerPortainereeNomadSnapshotJobNamespace(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerPortainereeNomadSnapshotJobStatus(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerPortainereeNomadSnapshotJobSubmitTime(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerPortainereeNomadSnapshotJobTasks(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerPortainereeNomadSnapshotJobID(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	idDescription := ``

	var idFlagName string
	if cmdPrefix == "" {
		idFlagName = "ID"
	} else {
		idFlagName = fmt.Sprintf("%v.ID", cmdPrefix)
	}

	var idFlagDefault string

	_ = cmd.PersistentFlags().String(idFlagName, idFlagDefault, idDescription)

	return nil
}

func registerPortainereeNomadSnapshotJobNamespace(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	namespaceDescription := ``

	var namespaceFlagName string
	if cmdPrefix == "" {
		namespaceFlagName = "Namespace"
	} else {
		namespaceFlagName = fmt.Sprintf("%v.Namespace", cmdPrefix)
	}

	var namespaceFlagDefault string

	_ = cmd.PersistentFlags().String(namespaceFlagName, namespaceFlagDefault, namespaceDescription)

	return nil
}

func registerPortainereeNomadSnapshotJobStatus(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	statusDescription := ``

	var statusFlagName string
	if cmdPrefix == "" {
		statusFlagName = "Status"
	} else {
		statusFlagName = fmt.Sprintf("%v.Status", cmdPrefix)
	}

	var statusFlagDefault string

	_ = cmd.PersistentFlags().String(statusFlagName, statusFlagDefault, statusDescription)

	return nil
}

func registerPortainereeNomadSnapshotJobSubmitTime(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	submitTimeDescription := ``

	var submitTimeFlagName string
	if cmdPrefix == "" {
		submitTimeFlagName = "SubmitTime"
	} else {
		submitTimeFlagName = fmt.Sprintf("%v.SubmitTime", cmdPrefix)
	}

	var submitTimeFlagDefault int64

	_ = cmd.PersistentFlags().Int64(submitTimeFlagName, submitTimeFlagDefault, submitTimeDescription)

	return nil
}

func registerPortainereeNomadSnapshotJobTasks(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: Tasks []*PortainereeNomadSnapshotTask array type is not supported by go-swagger cli yet

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelPortainereeNomadSnapshotJobFlags(depth int, m *models.PortainereeNomadSnapshotJob, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, idAdded := retrievePortainereeNomadSnapshotJobIDFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || idAdded

	err, namespaceAdded := retrievePortainereeNomadSnapshotJobNamespaceFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || namespaceAdded

	err, statusAdded := retrievePortainereeNomadSnapshotJobStatusFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || statusAdded

	err, submitTimeAdded := retrievePortainereeNomadSnapshotJobSubmitTimeFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || submitTimeAdded

	err, tasksAdded := retrievePortainereeNomadSnapshotJobTasksFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || tasksAdded

	return nil, retAdded
}

func retrievePortainereeNomadSnapshotJobIDFlags(depth int, m *models.PortainereeNomadSnapshotJob, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	idFlagName := fmt.Sprintf("%v.ID", cmdPrefix)
	if cmd.Flags().Changed(idFlagName) {

		var idFlagName string
		if cmdPrefix == "" {
			idFlagName = "ID"
		} else {
			idFlagName = fmt.Sprintf("%v.ID", cmdPrefix)
		}

		idFlagValue, err := cmd.Flags().GetString(idFlagName)
		if err != nil {
			return err, false
		}
		m.ID = idFlagValue

		retAdded = true
	}

	return nil, retAdded
}

func retrievePortainereeNomadSnapshotJobNamespaceFlags(depth int, m *models.PortainereeNomadSnapshotJob, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	namespaceFlagName := fmt.Sprintf("%v.Namespace", cmdPrefix)
	if cmd.Flags().Changed(namespaceFlagName) {

		var namespaceFlagName string
		if cmdPrefix == "" {
			namespaceFlagName = "Namespace"
		} else {
			namespaceFlagName = fmt.Sprintf("%v.Namespace", cmdPrefix)
		}

		namespaceFlagValue, err := cmd.Flags().GetString(namespaceFlagName)
		if err != nil {
			return err, false
		}
		m.Namespace = namespaceFlagValue

		retAdded = true
	}

	return nil, retAdded
}

func retrievePortainereeNomadSnapshotJobStatusFlags(depth int, m *models.PortainereeNomadSnapshotJob, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	statusFlagName := fmt.Sprintf("%v.Status", cmdPrefix)
	if cmd.Flags().Changed(statusFlagName) {

		var statusFlagName string
		if cmdPrefix == "" {
			statusFlagName = "Status"
		} else {
			statusFlagName = fmt.Sprintf("%v.Status", cmdPrefix)
		}

		statusFlagValue, err := cmd.Flags().GetString(statusFlagName)
		if err != nil {
			return err, false
		}
		m.Status = statusFlagValue

		retAdded = true
	}

	return nil, retAdded
}

func retrievePortainereeNomadSnapshotJobSubmitTimeFlags(depth int, m *models.PortainereeNomadSnapshotJob, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	submitTimeFlagName := fmt.Sprintf("%v.SubmitTime", cmdPrefix)
	if cmd.Flags().Changed(submitTimeFlagName) {

		var submitTimeFlagName string
		if cmdPrefix == "" {
			submitTimeFlagName = "SubmitTime"
		} else {
			submitTimeFlagName = fmt.Sprintf("%v.SubmitTime", cmdPrefix)
		}

		submitTimeFlagValue, err := cmd.Flags().GetInt64(submitTimeFlagName)
		if err != nil {
			return err, false
		}
		m.SubmitTime = submitTimeFlagValue

		retAdded = true
	}

	return nil, retAdded
}

func retrievePortainereeNomadSnapshotJobTasksFlags(depth int, m *models.PortainereeNomadSnapshotJob, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	tasksFlagName := fmt.Sprintf("%v.Tasks", cmdPrefix)
	if cmd.Flags().Changed(tasksFlagName) {
		// warning: Tasks array type []*PortainereeNomadSnapshotTask is not supported by go-swagger cli yet
	}

	return nil, retAdded
}
