// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/portainer/client-api-go/v2/models"
	"github.com/spf13/cobra"
)

// Schema cli for GithubComPortainerPortainerEeAPIDemoEnvironmentDetails

// register flags to command
func registerModelGithubComPortainerPortainerEeAPIDemoEnvironmentDetailsFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerGithubComPortainerPortainerEeAPIDemoEnvironmentDetailsEnabled(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerGithubComPortainerPortainerEeAPIDemoEnvironmentDetailsEnvironments(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerGithubComPortainerPortainerEeAPIDemoEnvironmentDetailsUsers(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerGithubComPortainerPortainerEeAPIDemoEnvironmentDetailsEnabled(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	enabledDescription := ``

	var enabledFlagName string
	if cmdPrefix == "" {
		enabledFlagName = "enabled"
	} else {
		enabledFlagName = fmt.Sprintf("%v.enabled", cmdPrefix)
	}

	var enabledFlagDefault bool

	_ = cmd.PersistentFlags().Bool(enabledFlagName, enabledFlagDefault, enabledDescription)

	return nil
}

func registerGithubComPortainerPortainerEeAPIDemoEnvironmentDetailsEnvironments(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: environments []int64 array type is not supported by go-swagger cli yet

	return nil
}

func registerGithubComPortainerPortainerEeAPIDemoEnvironmentDetailsUsers(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: users []int64 array type is not supported by go-swagger cli yet

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelGithubComPortainerPortainerEeAPIDemoEnvironmentDetailsFlags(depth int, m *models.GithubComPortainerPortainerEeAPIDemoEnvironmentDetails, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, enabledAdded := retrieveGithubComPortainerPortainerEeAPIDemoEnvironmentDetailsEnabledFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || enabledAdded

	err, environmentsAdded := retrieveGithubComPortainerPortainerEeAPIDemoEnvironmentDetailsEnvironmentsFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || environmentsAdded

	err, usersAdded := retrieveGithubComPortainerPortainerEeAPIDemoEnvironmentDetailsUsersFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || usersAdded

	return nil, retAdded
}

func retrieveGithubComPortainerPortainerEeAPIDemoEnvironmentDetailsEnabledFlags(depth int, m *models.GithubComPortainerPortainerEeAPIDemoEnvironmentDetails, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	enabledFlagName := fmt.Sprintf("%v.enabled", cmdPrefix)
	if cmd.Flags().Changed(enabledFlagName) {

		var enabledFlagName string
		if cmdPrefix == "" {
			enabledFlagName = "enabled"
		} else {
			enabledFlagName = fmt.Sprintf("%v.enabled", cmdPrefix)
		}

		enabledFlagValue, err := cmd.Flags().GetBool(enabledFlagName)
		if err != nil {
			return err, false
		}
		m.Enabled = &enabledFlagValue

		retAdded = true
	}

	return nil, retAdded
}

func retrieveGithubComPortainerPortainerEeAPIDemoEnvironmentDetailsEnvironmentsFlags(depth int, m *models.GithubComPortainerPortainerEeAPIDemoEnvironmentDetails, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	environmentsFlagName := fmt.Sprintf("%v.environments", cmdPrefix)
	if cmd.Flags().Changed(environmentsFlagName) {
		// warning: environments array type []int64 is not supported by go-swagger cli yet
	}

	return nil, retAdded
}

func retrieveGithubComPortainerPortainerEeAPIDemoEnvironmentDetailsUsersFlags(depth int, m *models.GithubComPortainerPortainerEeAPIDemoEnvironmentDetails, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	usersFlagName := fmt.Sprintf("%v.users", cmdPrefix)
	if cmd.Flags().Changed(usersFlagName) {
		// warning: users array type []int64 is not supported by go-swagger cli yet
	}

	return nil, retAdded
}
