// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/portainer/client-api-go/v2/models"
	"github.com/spf13/cobra"
)

// Schema cli for PortainereeKubernetesFlags

// register flags to command
func registerModelPortainereeKubernetesFlagsFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerPortainereeKubernetesFlagsIsServerMetricsDetected(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerPortainereeKubernetesFlagsIsServerStorageDetected(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerPortainereeKubernetesFlagsIsServerMetricsDetected(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	isServerMetricsDetectedDescription := ``

	var isServerMetricsDetectedFlagName string
	if cmdPrefix == "" {
		isServerMetricsDetectedFlagName = "IsServerMetricsDetected"
	} else {
		isServerMetricsDetectedFlagName = fmt.Sprintf("%v.IsServerMetricsDetected", cmdPrefix)
	}

	var isServerMetricsDetectedFlagDefault bool

	_ = cmd.PersistentFlags().Bool(isServerMetricsDetectedFlagName, isServerMetricsDetectedFlagDefault, isServerMetricsDetectedDescription)

	return nil
}

func registerPortainereeKubernetesFlagsIsServerStorageDetected(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	isServerStorageDetectedDescription := ``

	var isServerStorageDetectedFlagName string
	if cmdPrefix == "" {
		isServerStorageDetectedFlagName = "IsServerStorageDetected"
	} else {
		isServerStorageDetectedFlagName = fmt.Sprintf("%v.IsServerStorageDetected", cmdPrefix)
	}

	var isServerStorageDetectedFlagDefault bool

	_ = cmd.PersistentFlags().Bool(isServerStorageDetectedFlagName, isServerStorageDetectedFlagDefault, isServerStorageDetectedDescription)

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelPortainereeKubernetesFlagsFlags(depth int, m *models.PortainereeKubernetesFlags, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, isServerMetricsDetectedAdded := retrievePortainereeKubernetesFlagsIsServerMetricsDetectedFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || isServerMetricsDetectedAdded

	err, isServerStorageDetectedAdded := retrievePortainereeKubernetesFlagsIsServerStorageDetectedFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || isServerStorageDetectedAdded

	return nil, retAdded
}

func retrievePortainereeKubernetesFlagsIsServerMetricsDetectedFlags(depth int, m *models.PortainereeKubernetesFlags, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	isServerMetricsDetectedFlagName := fmt.Sprintf("%v.IsServerMetricsDetected", cmdPrefix)
	if cmd.Flags().Changed(isServerMetricsDetectedFlagName) {

		var isServerMetricsDetectedFlagName string
		if cmdPrefix == "" {
			isServerMetricsDetectedFlagName = "IsServerMetricsDetected"
		} else {
			isServerMetricsDetectedFlagName = fmt.Sprintf("%v.IsServerMetricsDetected", cmdPrefix)
		}

		isServerMetricsDetectedFlagValue, err := cmd.Flags().GetBool(isServerMetricsDetectedFlagName)
		if err != nil {
			return err, false
		}
		m.IsServerMetricsDetected = &isServerMetricsDetectedFlagValue

		retAdded = true
	}

	return nil, retAdded
}

func retrievePortainereeKubernetesFlagsIsServerStorageDetectedFlags(depth int, m *models.PortainereeKubernetesFlags, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	isServerStorageDetectedFlagName := fmt.Sprintf("%v.IsServerStorageDetected", cmdPrefix)
	if cmd.Flags().Changed(isServerStorageDetectedFlagName) {

		var isServerStorageDetectedFlagName string
		if cmdPrefix == "" {
			isServerStorageDetectedFlagName = "IsServerStorageDetected"
		} else {
			isServerStorageDetectedFlagName = fmt.Sprintf("%v.IsServerStorageDetected", cmdPrefix)
		}

		isServerStorageDetectedFlagValue, err := cmd.Flags().GetBool(isServerStorageDetectedFlagName)
		if err != nil {
			return err, false
		}
		m.IsServerStorageDetected = &isServerStorageDetectedFlagValue

		retAdded = true
	}

	return nil, retAdded
}
